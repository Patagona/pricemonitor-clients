/**
 * Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts, and more.  This API supports both public endpoints for customer integration and internal endpoints for platform management. All endpoints are authenticated using either Basic Authentication or JWT Bearer tokens.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.7287
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.patagona.pricemonitor.client.model

import java.time.OffsetDateTime
import com.patagona.pricemonitor.client.core.ApiModel

  /**
   * A basic task type that represents the stored task document. Additional fields can be contained depending on specific task type.
   */
case class GenericTask(
  /* ISO 8601 timestamp (UTC) when the task was created. */
  creationDate: OffsetDateTime,
  /* ISO 8601 timestamp (UTC) when processing of this task started. */
  startDate: Option[OffsetDateTime] = None,
  /* ISO 8601 timestamp (UTC) when processing of this task finished. */
  finishDate: Option[OffsetDateTime] = None,
  /* The current processing state of this task */
  state: GenericTaskEnums.State,
  /* Schemaless. If any errors occured during processing, these will be contained here. Only store a preview (up to 1,000 entries) to prevent overloading the database. */
  failures: Option[Seq[Any]] = None,
  /* The unique ID of this task */
  taskId: String,
  /* The parents unique taskId, if any parent exists */
  parentId: Option[String] = None,
  /* The identifier string for the type of task */
  taskType: String,
  /* Schemaless. Contains the payload of the task given during task creation. */
  data: Option[Any] = None,
  /* Schemaless. Contains the processing result for this task. Type is dependent on task type. Avoid persisting excessively large results; prefer concise summaries. */
  result: Option[Any] = None,
  /* If any error occured the error code for this error will be contained here. */
  failureCode: Option[String] = None
) extends ApiModel

object GenericTaskEnums {

  type State = State.Value
  object State extends Enumeration {
    val Pending = Value("pending")
    val Executing = Value("executing")
    val Succeeded = Value("succeeded")
    val Failed = Value("failed")
  }

}

