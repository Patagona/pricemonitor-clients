/**
 * Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts, and more.  This API supports both public endpoints for customer integration and internal endpoints for platform management. All endpoints are authenticated using either Basic Authentication or JWT Bearer tokens.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.7243
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.patagona.pricemonitor.client.model

import com.patagona.pricemonitor.client.core.ApiModel

case class RoundingPriceRecommendationResult(
  ownOffers: Option[ApiOffer] = None,
  competitorOffers: Option[ApiOffer] = None,
  /* List of values to round against. They are in unit's of cent (100th of the base currency). They are defined as strings and may contain leading zeroes to indicate allowed increments. For example:<br>                    - [\"5\"] allows prices of 0.05€, 0.15€, 0.25€, 0.35€, ... (increments of 10 cents)<br>                    - [\"05\"] allows prices of 0.05€, 1.05€, 2.05€, 3.05€ ... (increments of 100 cents)<br>                    - [\"00\", \"50\"] allows prices of 0.50€, 1.00€, 1.50€, 2.00€ */
  priceSteps: Seq[String],
  /* Defines how to select the price step to round to. Allowed values are: `nextLower`, `nextHigher` and `closest` */
  stepSelection: String,
  minPriceBoundary: PriceBoundaryDetails,
  originalPriceRecommendation: PriceCalculationResult,
  /* The calculated price recommendation. */
  unitPriceRecommendation: Double,
  maxPriceBoundary: PriceBoundaryDetails,
  /* Implements the behavior that happens when the original price calculation is in the min-/max price  boundary and the rounding would cause it to violate the price boundary. If set to true, the price  step will be adjusted to the next reachable price step. Defaults to false, in which case the  original price recommendation will be used as the fallback. */
  adjustToNextReachablePriceStep: Option[Boolean] = None,
  /* The ID of the node which calculated the price. */
  nodeId: Double
) extends ApiModel


