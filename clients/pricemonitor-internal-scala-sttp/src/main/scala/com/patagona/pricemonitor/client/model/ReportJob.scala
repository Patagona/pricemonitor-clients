/**
 * Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts and more.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.6786
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.patagona.pricemonitor.client.model

import com.patagona.pricemonitor.client.core.ApiModel

case class ReportJob(
  /* The types are fixed and defined in the scheduler code.  */
  `type`: ReportJobEnums.`Type`,
  /* The internal job id. **Not** needed when creating a job.  */
  id: Option[String] = None,
  /* See [tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).  */
  timezone: String,
  /* Each job **must** be attached to a specific contract SID.  */
  contractId: Option[String] = None,
  /* See [CRON spec](https://www.alonsodomin.me/cron4s/userguide/index.html)  Only valid CRON expressions are allowed. Extra expressions from Dkron, e.g. \"@every 5s\", are not allowed.  */
  schedule: String,
  /* The id of the report to be scheduled.  */
  reportId: String
) extends ApiModel

object ReportJobEnums {

  type `Type` = `Type`.Value
  object `Type` extends Enumeration {
    val ShopIntegrationUpdateProductsJob = Value("ShopIntegrationUpdateProductsJob")
    val ShopIntegrationStartShopSyncJob = Value("ShopIntegrationStartShopSyncJob")
    val MonitoringJob = Value("MonitoringJob")
    val PreprocessingJob = Value("PreprocessingJob")
    val ReportJob = Value("ReportJob")
    val ProductImportJob = Value("ProductImportJob")
    val PricewatchJob = Value("PricewatchJob")
  }

}

