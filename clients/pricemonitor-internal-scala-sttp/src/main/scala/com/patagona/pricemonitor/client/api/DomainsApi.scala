/**
 * Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts and more.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.6950
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.patagona.pricemonitor.client.api

import com.patagona.pricemonitor.client.model.GetAllDomainsV3ApiResponse
import com.patagona.pricemonitor.client.core._
import alias._
import sttp.client._
import sttp.model.Method

object DomainsApi {

  def apply(baseUrl: String = "https://api.patagona.de")(implicit serializer: SttpSerializer) = new DomainsApi(baseUrl)
}

class DomainsApi(baseUrl: String)(implicit serializer: SttpSerializer) {

  import Helpers._
  import serializer._

  /**
   * Gets a list of all available domains for monitoring.
   * 
   * Expected answers:
   *   code 200 : Seq[String] (A list of all available domains for monitoring.)
   * 
   * Available security schemes:
   *   BasicAuth (http)
   *   BearerAuth (http)
   */
  def getAllDomainsV2()(implicit basicAuth: Option[BasicCredentials], bearerToken: Option[BearerToken]): ApiRequestT[Seq[String]] =
{
    var r = basicRequest
      .method(Method.GET, uri"$baseUrl/api/2/domains")
      .contentType("application/json")
      basicAuth.foreach(b => r = r.auth.basic(b.user, b.password))
      bearerToken.foreach(b => r = r.auth.bearer(b.token))
      r.response(asJson[Seq[String]])
}

  /**
   * This endpoint provides all domains which are supported by our system. Along with other attributes we are providing the corresponding possible offer sources. Only domains which include the offer source DEFAULT_MONITORING are supported out-of-the-box by our monitoring pipeline.
   * 
   * Expected answers:
   *   code 200 : GetAllDomainsV3ApiResponse (A list of domains)
   * 
   * Available security schemes:
   *   BasicAuth (http)
   *   BearerAuth (http)
   */
  def getAllDomainsV3()(implicit basicAuth: Option[BasicCredentials], bearerToken: Option[BearerToken]): ApiRequestT[GetAllDomainsV3ApiResponse] =
{
    var r = basicRequest
      .method(Method.GET, uri"$baseUrl/api/v3/domains")
      .contentType("application/json")
      basicAuth.foreach(b => r = r.auth.basic(b.user, b.password))
      bearerToken.foreach(b => r = r.auth.bearer(b.token))
      r.response(asJson[GetAllDomainsV3ApiResponse])
}

}

