# coding: utf-8

"""
    Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts and more.

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.7023
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import pricemonitor_api_client
from pricemonitor_api_client.api.settings_api import SettingsApi  # noqa: E501
from pricemonitor_api_client.rest import ApiException


class TestSettingsApi(unittest.TestCase):
    """SettingsApi unit test stubs"""

    def setUp(self):
        self.api = pricemonitor_api_client.api.settings_api.SettingsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_alert_settings(self):
        """Test case for create_alert_settings

        Create alert settings  # noqa: E501
        """
        pass

    def test_delete_alert_settings(self):
        """Test case for delete_alert_settings

        Delete alert settings  # noqa: E501
        """
        pass

    def test_delete_callback_settings_manufacturer_v2(self):
        """Test case for delete_callback_settings_manufacturer_v2

        Delete callbacks [manufacturer]  # noqa: E501
        """
        pass

    def test_delete_callback_settings_vendor_v2(self):
        """Test case for delete_callback_settings_vendor_v2

        Delete callbacks  # noqa: E501
        """
        pass

    def test_delete_dynamic_monitoring_settings(self):
        """Test case for delete_dynamic_monitoring_settings

        Delete dynamic monitoring settings  # noqa: E501
        """
        pass

    def test_delete_import_settings_vendor_v2(self):
        """Test case for delete_import_settings_vendor_v2

        Delete import settings  # noqa: E501
        """
        pass

    def test_get_active_ebay_token_vendor_v2(self):
        """Test case for get_active_ebay_token_vendor_v2

        Get active Ebay token  # noqa: E501
        """
        pass

    def test_get_alert_settings(self):
        """Test case for get_alert_settings

        Get alert settings  # noqa: E501
        """
        pass

    def test_get_all_ebay_authorizations_vendor_v2(self):
        """Test case for get_all_ebay_authorizations_vendor_v2

        Get Ebay authorizations  # noqa: E501
        """
        pass

    def test_get_all_ebay_tokens_vendor_v2(self):
        """Test case for get_all_ebay_tokens_vendor_v2

        Get all Ebay tokens  # noqa: E501
        """
        pass

    def test_get_callbacks(self):
        """Test case for get_callbacks

        Get callbacks [manufacturer]  # noqa: E501
        """
        pass

    def test_get_callbacks_vendor_v2(self):
        """Test case for get_callbacks_vendor_v2

        Get callbacks  # noqa: E501
        """
        pass

    def test_get_currency_vendor_v2(self):
        """Test case for get_currency_vendor_v2

        Get currency settings [vendor]  # noqa: E501
        """
        pass

    def test_get_customer_contract_settings_manufaturer_v3(self):
        """Test case for get_customer_contract_settings_manufaturer_v3

        Get contract settings [manufacturer]  # noqa: E501
        """
        pass

    def test_get_customer_contract_settings_vendor_v3(self):
        """Test case for get_customer_contract_settings_vendor_v3

        Get customer contract settings [vendor]  # noqa: E501
        """
        pass

    def test_get_domains_vendor_v2(self):
        """Test case for get_domains_vendor_v2

        Get domains for contract  # noqa: E501
        """
        pass

    def test_get_dynamic_monitoring_settings(self):
        """Test case for get_dynamic_monitoring_settings

        Get dynamic monitoring settings  # noqa: E501
        """
        pass

    def test_get_ebay_authorizations_vendor_v2(self):
        """Test case for get_ebay_authorizations_vendor_v2

        Get Ebay authorization  # noqa: E501
        """
        pass

    def test_get_import_settings_vendor_v2(self):
        """Test case for get_import_settings_vendor_v2

        Get import settings  # noqa: E501
        """
        pass

    def test_get_monitoring_settings_manufacturer_v2(self):
        """Test case for get_monitoring_settings_manufacturer_v2

        Get monitoring settings for contract  # noqa: E501
        """
        pass

    def test_get_monitoring_settings_manufacturer_v3(self):
        """Test case for get_monitoring_settings_manufacturer_v3

        Get monitoring settings [manufacturer]  # noqa: E501
        """
        pass

    def test_get_monitoring_settings_vendor_v2(self):
        """Test case for get_monitoring_settings_vendor_v2

        Get monitoring settings [vendor]  # noqa: E501
        """
        pass

    def test_get_monitoring_settings_vendor_v3(self):
        """Test case for get_monitoring_settings_vendor_v3

        Get monitoring settings [vendor]  # noqa: E501
        """
        pass

    def test_get_offer_retention_settings_manufacturer_v3(self):
        """Test case for get_offer_retention_settings_manufacturer_v3

        Get offer retention settings [manufacturer]  # noqa: E501
        """
        pass

    def test_get_offer_retention_settings_vendor_v3(self):
        """Test case for get_offer_retention_settings_vendor_v3

        Get offer retention settings [vendor]  # noqa: E501
        """
        pass

    def test_get_settings(self):
        """Test case for get_settings

        Get settings for contract  # noqa: E501
        """
        pass

    def test_get_vendor_settings_v2_vendor_v2(self):
        """Test case for get_vendor_settings_v2_vendor_v2

        Get repricing settings  # noqa: E501
        """
        pass

    def test_post_ebay_authorization_vendor_v2(self):
        """Test case for post_ebay_authorization_vendor_v2

        Update Ebay authorization  # noqa: E501
        """
        pass

    def test_put_callbacks(self):
        """Test case for put_callbacks

        Update callbacks [manufacturer]  # noqa: E501
        """
        pass

    def test_put_callbacks_vendor_v2(self):
        """Test case for put_callbacks_vendor_v2

        Update callbacks  # noqa: E501
        """
        pass

    def test_put_currency_vendor_v2(self):
        """Test case for put_currency_vendor_v2

        Update currency settings [vendor]  # noqa: E501
        """
        pass

    def test_put_customer_contract_settings_manufacturer_v3(self):
        """Test case for put_customer_contract_settings_manufacturer_v3

        Update contract settings [manufacturer]  # noqa: E501
        """
        pass

    def test_put_customer_contract_settings_vendor_v3(self):
        """Test case for put_customer_contract_settings_vendor_v3

        Update customer contract settings [vendor]  # noqa: E501
        """
        pass

    def test_put_domains(self):
        """Test case for put_domains

        Set domains for contract  # noqa: E501
        """
        pass

    def test_put_dynamic_monitoring_settings(self):
        """Test case for put_dynamic_monitoring_settings

        Update dynamic monitoring settings  # noqa: E501
        """
        pass

    def test_put_image_tag_manufacturer_v2(self):
        """Test case for put_image_tag_manufacturer_v2

        Update image tag [manufacturer]  # noqa: E501
        """
        pass

    def test_put_image_tag_vendor_v2(self):
        """Test case for put_image_tag_vendor_v2

        Update image tag [vendor]  # noqa: E501
        """
        pass

    def test_put_import_settings_vendor_v2(self):
        """Test case for put_import_settings_vendor_v2

        Update import settings  # noqa: E501
        """
        pass

    def test_put_monitoring_settings_manufacturer_v2(self):
        """Test case for put_monitoring_settings_manufacturer_v2

        Update monitoring settings for contract  # noqa: E501
        """
        pass

    def test_put_monitoring_settings_manufacturer_v3(self):
        """Test case for put_monitoring_settings_manufacturer_v3

        Update monitoring settings [manufacturer]  # noqa: E501
        """
        pass

    def test_put_monitoring_settings_vendor_v2(self):
        """Test case for put_monitoring_settings_vendor_v2

        Update monitoring settings [vendor]  # noqa: E501
        """
        pass

    def test_put_monitoring_settings_vendor_v3(self):
        """Test case for put_monitoring_settings_vendor_v3

        Update monitoring settings [vendor]  # noqa: E501
        """
        pass

    def test_put_offer_retention_settings_manufacturer_v3(self):
        """Test case for put_offer_retention_settings_manufacturer_v3

        Update offer retention settings [manufacturer]  # noqa: E501
        """
        pass

    def test_put_offer_retention_settings_vendor_v3(self):
        """Test case for put_offer_retention_settings_vendor_v3

        Update offer retention settings [vendor]  # noqa: E501
        """
        pass

    def test_put_settings(self):
        """Test case for put_settings

        Update settings for contract  # noqa: E501
        """
        pass

    def test_put_vendor_settings_vendor_v2(self):
        """Test case for put_vendor_settings_vendor_v2

        Update repricing settings  # noqa: E501
        """
        pass

    def test_save_include_delivery_costs(self):
        """Test case for save_include_delivery_costs

        Update includes delivery costs setting  # noqa: E501
        """
        pass

    def test_update_alert_settings(self):
        """Test case for update_alert_settings

        Update alert settings  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
