# coding: utf-8

"""
    Pricemonitor API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.6673
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pricemonitor_api_client
from pricemonitor_api_client.models.post_orders_bulk_api_response_data import PostOrdersBulkApiResponseData  # noqa: E501
from pricemonitor_api_client.rest import ApiException

class TestPostOrdersBulkApiResponseData(unittest.TestCase):
    """PostOrdersBulkApiResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PostOrdersBulkApiResponseData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pricemonitor_api_client.models.post_orders_bulk_api_response_data.PostOrdersBulkApiResponseData()  # noqa: E501
        if include_optional :
            return PostOrdersBulkApiResponseData(
                orders = [
                    {"referrer":"referrer","productMappings":[{"source":"source","target":"target"},{"source":"source","target":"target"}],"orderId":"orderId","totalPrice":5.637376656633329,"origin":"origin","currency":"currency","creationDate":"2000-01-23T04:56:07.000+00:00","items":[{"unitPrice":6.027456183070403,"itemId":"itemId","quantity":1,"taxPercentage":5.962133916683182},{"unitPrice":6.027456183070403,"itemId":"itemId","quantity":1,"taxPercentage":5.962133916683182}],"shippingCosts":0.8008281904610115}
                    ], 
                version = '0'
            )
        else :
            return PostOrdersBulkApiResponseData(
        )

    def testPostOrdersBulkApiResponseData(self):
        """Test PostOrdersBulkApiResponseData"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
