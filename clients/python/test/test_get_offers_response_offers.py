# coding: utf-8

"""
    Pricemonitor API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.6714
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pricemonitor_api_client
from pricemonitor_api_client.models.get_offers_response_offers import GetOffersResponseOffers  # noqa: E501
from pricemonitor_api_client.rest import ApiException

class TestGetOffersResponseOffers(unittest.TestCase):
    """GetOffersResponseOffers unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GetOffersResponseOffers
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pricemonitor_api_client.models.get_offers_response_offers.GetOffersResponseOffers()  # noqa: E501
        if include_optional :
            return GetOffersResponseOffers(
                approved = True, 
                attributes = [
                    {"value":"value","key":"key"}
                    ], 
                availability = None, 
                creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                delivery_costs = 1.337, 
                domain = '0', 
                max_delivery_time = None, 
                min_delivery_time = None, 
                price = 1.337, 
                product_name = '0', 
                url = '0', 
                vendor = '0', 
                vendor_id_on_domain = '0'
            )
        else :
            return GetOffersResponseOffers(
        )

    def testGetOffersResponseOffers(self):
        """Test GetOffersResponseOffers"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
