# coding: utf-8

"""
    Pricemonitor API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.6331
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pricemonitor_api_client
from pricemonitor_api_client.models.com_patagona_pricemonitor_share_api_user_company import ComPatagonaPricemonitorShareApiUserCompany  # noqa: E501
from pricemonitor_api_client.rest import ApiException

class TestComPatagonaPricemonitorShareApiUserCompany(unittest.TestCase):
    """ComPatagonaPricemonitorShareApiUserCompany unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ComPatagonaPricemonitorShareApiUserCompany
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pricemonitor_api_client.models.com_patagona_pricemonitor_share_api_user_company.ComPatagonaPricemonitorShareApiUserCompany()  # noqa: E501
        if include_optional :
            return ComPatagonaPricemonitorShareApiUserCompany(
                id = 1.337, 
                name = '0', 
                contracts = [
                    {"name":"name","active":true,"id":6.027456183070403,"type":"type","sid":"sid"}
                    ]
            )
        else :
            return ComPatagonaPricemonitorShareApiUserCompany(
                id = 1.337,
                name = '0',
                contracts = [
                    {"name":"name","active":true,"id":6.027456183070403,"type":"type","sid":"sid"}
                    ],
        )

    def testComPatagonaPricemonitorShareApiUserCompany(self):
        """Test ComPatagonaPricemonitorShareApiUserCompany"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
