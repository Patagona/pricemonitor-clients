# coding: utf-8

"""
    Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts and more.

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.7082
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pricemonitor_api_client
from pricemonitor_api_client.models.com_patagona_pricemonitor_share_api_api_offer_v2 import ComPatagonaPricemonitorShareApiApiOfferV2  # noqa: E501
from pricemonitor_api_client.rest import ApiException

class TestComPatagonaPricemonitorShareApiApiOfferV2(unittest.TestCase):
    """ComPatagonaPricemonitorShareApiApiOfferV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ComPatagonaPricemonitorShareApiApiOfferV2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pricemonitor_api_client.models.com_patagona_pricemonitor_share_api_api_offer_v2.ComPatagonaPricemonitorShareApiApiOfferV2()  # noqa: E501
        if include_optional :
            return ComPatagonaPricemonitorShareApiApiOfferV2(
                delivery_costs = 1.337, 
                url = '0', 
                vendor_domain_id = '0', 
                price = 1.337, 
                availability = True, 
                attributes = [
                    pricemonitor_api_client.models.com/patagona/pricemonitor/share/api/api_offer_attribute_v2.com.patagona.pricemonitor.share.api.ApiOfferAttributeV2(
                        key = '0', 
                        value = '0', )
                    ], 
                vendor_name = '0', 
                retrieval_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                id = '0', 
                product_name = '0', 
                currency = '0', 
                min_delivery_hours = 56, 
                max_delivery_hours = 56
            )
        else :
            return ComPatagonaPricemonitorShareApiApiOfferV2(
                delivery_costs = 1.337,
                url = '0',
                price = 1.337,
                attributes = [
                    pricemonitor_api_client.models.com/patagona/pricemonitor/share/api/api_offer_attribute_v2.com.patagona.pricemonitor.share.api.ApiOfferAttributeV2(
                        key = '0', 
                        value = '0', )
                    ],
                vendor_name = '0',
                id = '0',
                product_name = '0',
                currency = '0',
        )

    def testComPatagonaPricemonitorShareApiApiOfferV2(self):
        """Test ComPatagonaPricemonitorShareApiApiOfferV2"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
