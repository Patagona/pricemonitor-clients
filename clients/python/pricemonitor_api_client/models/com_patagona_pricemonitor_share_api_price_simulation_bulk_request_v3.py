# coding: utf-8

"""
    Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts and more.

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.7130
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pricemonitor_api_client.configuration import Configuration


class ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'strategy_builder': 'object',
        'simulation_requests': 'list[ComPatagonaPricemonitorShareApiProductPriceSimulationRequest]',
        'calculation_timestamp': 'datetime',
        'data_time_range': 'ComPatagonaPricemonitorShareApiOffsetTimeRange',
        'own_shops': 'list[ComPatagonaPricemonitorShareApiOwnShopMapping]'
    }

    attribute_map = {
        'strategy_builder': 'strategyBuilder',
        'simulation_requests': 'simulationRequests',
        'calculation_timestamp': 'calculationTimestamp',
        'data_time_range': 'dataTimeRange',
        'own_shops': 'ownShops'
    }

    def __init__(self, strategy_builder=None, simulation_requests=None, calculation_timestamp=None, data_time_range=None, own_shops=None, local_vars_configuration=None):  # noqa: E501
        """ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._strategy_builder = None
        self._simulation_requests = None
        self._calculation_timestamp = None
        self._data_time_range = None
        self._own_shops = None
        self.discriminator = None

        if strategy_builder is not None:
            self.strategy_builder = strategy_builder
        self.simulation_requests = simulation_requests
        if calculation_timestamp is not None:
            self.calculation_timestamp = calculation_timestamp
        if data_time_range is not None:
            self.data_time_range = data_time_range
        if own_shops is not None:
            self.own_shops = own_shops

    @property
    def strategy_builder(self):
        """Gets the strategy_builder of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501


        :return: The strategy_builder of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :rtype: object
        """
        return self._strategy_builder

    @strategy_builder.setter
    def strategy_builder(self, strategy_builder):
        """Sets the strategy_builder of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.


        :param strategy_builder: The strategy_builder of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :type: object
        """

        self._strategy_builder = strategy_builder

    @property
    def simulation_requests(self):
        """Gets the simulation_requests of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501

        List of product price simulation requests. The list may have a maximum 10 requests.  # noqa: E501

        :return: The simulation_requests of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :rtype: list[ComPatagonaPricemonitorShareApiProductPriceSimulationRequest]
        """
        return self._simulation_requests

    @simulation_requests.setter
    def simulation_requests(self, simulation_requests):
        """Sets the simulation_requests of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.

        List of product price simulation requests. The list may have a maximum 10 requests.  # noqa: E501

        :param simulation_requests: The simulation_requests of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :type: list[ComPatagonaPricemonitorShareApiProductPriceSimulationRequest]
        """
        if self.local_vars_configuration.client_side_validation and simulation_requests is None:  # noqa: E501
            raise ValueError("Invalid value for `simulation_requests`, must not be `None`")  # noqa: E501

        self._simulation_requests = simulation_requests

    @property
    def calculation_timestamp(self):
        """Gets the calculation_timestamp of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501

        If provided, then the price calculation will be simulated with the specified timestamp. This can be useful for simulating time-based strategies. If not provided, the current timestamp will be used.  # noqa: E501

        :return: The calculation_timestamp of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :rtype: datetime
        """
        return self._calculation_timestamp

    @calculation_timestamp.setter
    def calculation_timestamp(self, calculation_timestamp):
        """Sets the calculation_timestamp of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.

        If provided, then the price calculation will be simulated with the specified timestamp. This can be useful for simulating time-based strategies. If not provided, the current timestamp will be used.  # noqa: E501

        :param calculation_timestamp: The calculation_timestamp of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :type: datetime
        """

        self._calculation_timestamp = calculation_timestamp

    @property
    def data_time_range(self):
        """Gets the data_time_range of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501


        :return: The data_time_range of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :rtype: ComPatagonaPricemonitorShareApiOffsetTimeRange
        """
        return self._data_time_range

    @data_time_range.setter
    def data_time_range(self, data_time_range):
        """Sets the data_time_range of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.


        :param data_time_range: The data_time_range of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :type: ComPatagonaPricemonitorShareApiOffsetTimeRange
        """

        self._data_time_range = data_time_range

    @property
    def own_shops(self):
        """Gets the own_shops of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501

        Useful for detecting own offers of our customers. This ensures the separation between own and competitor offers. If not provided, the own offers will be detected based on the currently configured own shop mappings.  # noqa: E501

        :return: The own_shops of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :rtype: list[ComPatagonaPricemonitorShareApiOwnShopMapping]
        """
        return self._own_shops

    @own_shops.setter
    def own_shops(self, own_shops):
        """Sets the own_shops of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.

        Useful for detecting own offers of our customers. This ensures the separation between own and competitor offers. If not provided, the own offers will be detected based on the currently configured own shop mappings.  # noqa: E501

        :param own_shops: The own_shops of this ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3.  # noqa: E501
        :type: list[ComPatagonaPricemonitorShareApiOwnShopMapping]
        """

        self._own_shops = own_shops

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiPriceSimulationBulkRequestV3):
            return True

        return self.to_dict() != other.to_dict()
