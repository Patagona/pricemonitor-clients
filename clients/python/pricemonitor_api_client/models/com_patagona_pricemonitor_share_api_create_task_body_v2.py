# coding: utf-8

"""
    Pricemonitor API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.6587
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pricemonitor_api_client.configuration import Configuration


class ComPatagonaPricemonitorShareApiCreateTaskBodyV2(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'task_type': 'str',
        'data': 'object',
        'trigger_follow_up_task': 'bool'
    }

    attribute_map = {
        'task_type': 'taskType',
        'data': 'data',
        'trigger_follow_up_task': 'triggerFollowUpTask'
    }

    def __init__(self, task_type=None, data=None, trigger_follow_up_task=None, local_vars_configuration=None):  # noqa: E501
        """ComPatagonaPricemonitorShareApiCreateTaskBodyV2 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._task_type = None
        self._data = None
        self._trigger_follow_up_task = None
        self.discriminator = None

        self.task_type = task_type
        if data is not None:
            self.data = data
        if trigger_follow_up_task is not None:
            self.trigger_follow_up_task = trigger_follow_up_task

    @property
    def task_type(self):
        """Gets the task_type of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501

        The type of the task to be created. Can be any of [alert, backend.tasks.pricemonitor.offers.monitoring, backend.tasks.pricemonitor.offers.preprocessing, backend.tasks.pricemonitor.callback]  # noqa: E501

        :return: The task_type of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501
        :rtype: str
        """
        return self._task_type

    @task_type.setter
    def task_type(self, task_type):
        """Sets the task_type of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.

        The type of the task to be created. Can be any of [alert, backend.tasks.pricemonitor.offers.monitoring, backend.tasks.pricemonitor.offers.preprocessing, backend.tasks.pricemonitor.callback]  # noqa: E501

        :param task_type: The task_type of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and task_type is None:  # noqa: E501
            raise ValueError("Invalid value for `task_type`, must not be `None`")  # noqa: E501

        self._task_type = task_type

    @property
    def data(self):
        """Gets the data of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501


        :return: The data of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.


        :param data: The data of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501
        :type: object
        """

        self._data = data

    @property
    def trigger_follow_up_task(self):
        """Gets the trigger_follow_up_task of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501

        optional flag to specify whether or not to trigger the next task. Currently only integrated to trigger callbacks after preprocessing  # noqa: E501

        :return: The trigger_follow_up_task of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501
        :rtype: bool
        """
        return self._trigger_follow_up_task

    @trigger_follow_up_task.setter
    def trigger_follow_up_task(self, trigger_follow_up_task):
        """Sets the trigger_follow_up_task of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.

        optional flag to specify whether or not to trigger the next task. Currently only integrated to trigger callbacks after preprocessing  # noqa: E501

        :param trigger_follow_up_task: The trigger_follow_up_task of this ComPatagonaPricemonitorShareApiCreateTaskBodyV2.  # noqa: E501
        :type: bool
        """

        self._trigger_follow_up_task = trigger_follow_up_task

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiCreateTaskBodyV2):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiCreateTaskBodyV2):
            return True

        return self.to_dict() != other.to_dict()
