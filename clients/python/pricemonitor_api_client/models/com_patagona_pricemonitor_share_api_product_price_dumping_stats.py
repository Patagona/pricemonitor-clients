# coding: utf-8

"""
    Pricemonitor API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.6592
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pricemonitor_api_client.configuration import Configuration


class ComPatagonaPricemonitorShareApiProductPriceDumpingStats(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'products_at_min_price': 'int',
        'unique_product_initiated_price_dumpings': 'int',
        'unique_product_potentially_initiated_price_dumpings': 'int',
        'initiated_price_dumpings': 'int',
        'potentially_initiated_price_dumpings': 'int'
    }

    attribute_map = {
        'products_at_min_price': 'productsAtMinPrice',
        'unique_product_initiated_price_dumpings': 'uniqueProductInitiatedPriceDumpings',
        'unique_product_potentially_initiated_price_dumpings': 'uniqueProductPotentiallyInitiatedPriceDumpings',
        'initiated_price_dumpings': 'initiatedPriceDumpings',
        'potentially_initiated_price_dumpings': 'potentiallyInitiatedPriceDumpings'
    }

    def __init__(self, products_at_min_price=None, unique_product_initiated_price_dumpings=None, unique_product_potentially_initiated_price_dumpings=None, initiated_price_dumpings=None, potentially_initiated_price_dumpings=None, local_vars_configuration=None):  # noqa: E501
        """ComPatagonaPricemonitorShareApiProductPriceDumpingStats - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._products_at_min_price = None
        self._unique_product_initiated_price_dumpings = None
        self._unique_product_potentially_initiated_price_dumpings = None
        self._initiated_price_dumpings = None
        self._potentially_initiated_price_dumpings = None
        self.discriminator = None

        self.products_at_min_price = products_at_min_price
        self.unique_product_initiated_price_dumpings = unique_product_initiated_price_dumpings
        self.unique_product_potentially_initiated_price_dumpings = unique_product_potentially_initiated_price_dumpings
        self.initiated_price_dumpings = initiated_price_dumpings
        self.potentially_initiated_price_dumpings = potentially_initiated_price_dumpings

    @property
    def products_at_min_price(self):
        """Gets the products_at_min_price of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501

        This field denotes the number of products at the min price from the queried vendors, at the respective newest timestamp per domain and product.  # noqa: E501

        :return: The products_at_min_price of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :rtype: int
        """
        return self._products_at_min_price

    @products_at_min_price.setter
    def products_at_min_price(self, products_at_min_price):
        """Sets the products_at_min_price of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.

        This field denotes the number of products at the min price from the queried vendors, at the respective newest timestamp per domain and product.  # noqa: E501

        :param products_at_min_price: The products_at_min_price of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and products_at_min_price is None:  # noqa: E501
            raise ValueError("Invalid value for `products_at_min_price`, must not be `None`")  # noqa: E501

        self._products_at_min_price = products_at_min_price

    @property
    def unique_product_initiated_price_dumpings(self):
        """Gets the unique_product_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501


        :return: The unique_product_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :rtype: int
        """
        return self._unique_product_initiated_price_dumpings

    @unique_product_initiated_price_dumpings.setter
    def unique_product_initiated_price_dumpings(self, unique_product_initiated_price_dumpings):
        """Sets the unique_product_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.


        :param unique_product_initiated_price_dumpings: The unique_product_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and unique_product_initiated_price_dumpings is None:  # noqa: E501
            raise ValueError("Invalid value for `unique_product_initiated_price_dumpings`, must not be `None`")  # noqa: E501

        self._unique_product_initiated_price_dumpings = unique_product_initiated_price_dumpings

    @property
    def unique_product_potentially_initiated_price_dumpings(self):
        """Gets the unique_product_potentially_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501


        :return: The unique_product_potentially_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :rtype: int
        """
        return self._unique_product_potentially_initiated_price_dumpings

    @unique_product_potentially_initiated_price_dumpings.setter
    def unique_product_potentially_initiated_price_dumpings(self, unique_product_potentially_initiated_price_dumpings):
        """Sets the unique_product_potentially_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.


        :param unique_product_potentially_initiated_price_dumpings: The unique_product_potentially_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and unique_product_potentially_initiated_price_dumpings is None:  # noqa: E501
            raise ValueError("Invalid value for `unique_product_potentially_initiated_price_dumpings`, must not be `None`")  # noqa: E501

        self._unique_product_potentially_initiated_price_dumpings = unique_product_potentially_initiated_price_dumpings

    @property
    def initiated_price_dumpings(self):
        """Gets the initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501


        :return: The initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :rtype: int
        """
        return self._initiated_price_dumpings

    @initiated_price_dumpings.setter
    def initiated_price_dumpings(self, initiated_price_dumpings):
        """Sets the initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.


        :param initiated_price_dumpings: The initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and initiated_price_dumpings is None:  # noqa: E501
            raise ValueError("Invalid value for `initiated_price_dumpings`, must not be `None`")  # noqa: E501

        self._initiated_price_dumpings = initiated_price_dumpings

    @property
    def potentially_initiated_price_dumpings(self):
        """Gets the potentially_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501


        :return: The potentially_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :rtype: int
        """
        return self._potentially_initiated_price_dumpings

    @potentially_initiated_price_dumpings.setter
    def potentially_initiated_price_dumpings(self, potentially_initiated_price_dumpings):
        """Sets the potentially_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.


        :param potentially_initiated_price_dumpings: The potentially_initiated_price_dumpings of this ComPatagonaPricemonitorShareApiProductPriceDumpingStats.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and potentially_initiated_price_dumpings is None:  # noqa: E501
            raise ValueError("Invalid value for `potentially_initiated_price_dumpings`, must not be `None`")  # noqa: E501

        self._potentially_initiated_price_dumpings = potentially_initiated_price_dumpings

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiProductPriceDumpingStats):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiProductPriceDumpingStats):
            return True

        return self.to_dict() != other.to_dict()
