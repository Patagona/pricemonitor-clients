# coding: utf-8

"""
    Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts and more.

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: undefined
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pricemonitor_api_client.configuration import Configuration


class ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'domain': 'str',
        'competitor_offer_count': 'int'
    }

    attribute_map = {
        'domain': 'domain',
        'competitor_offer_count': 'competitorOfferCount'
    }

    def __init__(self, domain=None, competitor_offer_count=None, local_vars_configuration=None):  # noqa: E501
        """ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._domain = None
        self._competitor_offer_count = None
        self.discriminator = None

        self.domain = domain
        self.competitor_offer_count = competitor_offer_count

    @property
    def domain(self):
        """Gets the domain of this ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31.  # noqa: E501

        This field specifies the domain where the competitor offers are sourced from. It's a string representing the domain name, such as \"google.de\".  # noqa: E501

        :return: The domain of this ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31.  # noqa: E501
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31.

        This field specifies the domain where the competitor offers are sourced from. It's a string representing the domain name, such as \"google.de\".  # noqa: E501

        :param domain: The domain of this ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and domain is None:  # noqa: E501
            raise ValueError("Invalid value for `domain`, must not be `None`")  # noqa: E501

        self._domain = domain

    @property
    def competitor_offer_count(self):
        """Gets the competitor_offer_count of this ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31.  # noqa: E501

        The number of competitor offers available in the specified domain.  # noqa: E501

        :return: The competitor_offer_count of this ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31.  # noqa: E501
        :rtype: int
        """
        return self._competitor_offer_count

    @competitor_offer_count.setter
    def competitor_offer_count(self, competitor_offer_count):
        """Sets the competitor_offer_count of this ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31.

        The number of competitor offers available in the specified domain.  # noqa: E501

        :param competitor_offer_count: The competitor_offer_count of this ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and competitor_offer_count is None:  # noqa: E501
            raise ValueError("Invalid value for `competitor_offer_count`, must not be `None`")  # noqa: E501

        self._competitor_offer_count = competitor_offer_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiDomainOfferStatisticsV31):
            return True

        return self.to_dict() != other.to_dict()
