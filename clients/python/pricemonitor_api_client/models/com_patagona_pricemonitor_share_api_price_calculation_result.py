# coding: utf-8

"""
    Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts and more.

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.7094
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pricemonitor_api_client.configuration import Configuration


class ComPatagonaPricemonitorShareApiPriceCalculationResult(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'competitive_pricing_recommendation_result': 'ComPatagonaPricemonitorShareApiPriceCalculationResultCompetitivePricingRecommendationResult',
        'no_price_calculated': 'ComPatagonaPricemonitorShareApiPriceCalculationResultNoPriceCalculated',
        'formula_recommendation_result': 'ComPatagonaPricemonitorShareApiPriceCalculationResultFormulaRecommendationResult',
        'rounding_price_recommendation_result': 'ComPatagonaPricemonitorShareApiRoundingPriceRecommendationResult',
        'price_calculation_failure': 'ComPatagonaPricemonitorShareApiPriceCalculationResultPriceCalculationFailure'
    }

    attribute_map = {
        'competitive_pricing_recommendation_result': 'competitivePricingRecommendationResult',
        'no_price_calculated': 'noPriceCalculated',
        'formula_recommendation_result': 'formulaRecommendationResult',
        'rounding_price_recommendation_result': 'roundingPriceRecommendationResult',
        'price_calculation_failure': 'priceCalculationFailure'
    }

    def __init__(self, competitive_pricing_recommendation_result=None, no_price_calculated=None, formula_recommendation_result=None, rounding_price_recommendation_result=None, price_calculation_failure=None, local_vars_configuration=None):  # noqa: E501
        """ComPatagonaPricemonitorShareApiPriceCalculationResult - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._competitive_pricing_recommendation_result = None
        self._no_price_calculated = None
        self._formula_recommendation_result = None
        self._rounding_price_recommendation_result = None
        self._price_calculation_failure = None
        self.discriminator = None

        if competitive_pricing_recommendation_result is not None:
            self.competitive_pricing_recommendation_result = competitive_pricing_recommendation_result
        if no_price_calculated is not None:
            self.no_price_calculated = no_price_calculated
        if formula_recommendation_result is not None:
            self.formula_recommendation_result = formula_recommendation_result
        if rounding_price_recommendation_result is not None:
            self.rounding_price_recommendation_result = rounding_price_recommendation_result
        if price_calculation_failure is not None:
            self.price_calculation_failure = price_calculation_failure

    @property
    def competitive_pricing_recommendation_result(self):
        """Gets the competitive_pricing_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501


        :return: The competitive_pricing_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :rtype: ComPatagonaPricemonitorShareApiPriceCalculationResultCompetitivePricingRecommendationResult
        """
        return self._competitive_pricing_recommendation_result

    @competitive_pricing_recommendation_result.setter
    def competitive_pricing_recommendation_result(self, competitive_pricing_recommendation_result):
        """Sets the competitive_pricing_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.


        :param competitive_pricing_recommendation_result: The competitive_pricing_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :type: ComPatagonaPricemonitorShareApiPriceCalculationResultCompetitivePricingRecommendationResult
        """

        self._competitive_pricing_recommendation_result = competitive_pricing_recommendation_result

    @property
    def no_price_calculated(self):
        """Gets the no_price_calculated of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501


        :return: The no_price_calculated of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :rtype: ComPatagonaPricemonitorShareApiPriceCalculationResultNoPriceCalculated
        """
        return self._no_price_calculated

    @no_price_calculated.setter
    def no_price_calculated(self, no_price_calculated):
        """Sets the no_price_calculated of this ComPatagonaPricemonitorShareApiPriceCalculationResult.


        :param no_price_calculated: The no_price_calculated of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :type: ComPatagonaPricemonitorShareApiPriceCalculationResultNoPriceCalculated
        """

        self._no_price_calculated = no_price_calculated

    @property
    def formula_recommendation_result(self):
        """Gets the formula_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501


        :return: The formula_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :rtype: ComPatagonaPricemonitorShareApiPriceCalculationResultFormulaRecommendationResult
        """
        return self._formula_recommendation_result

    @formula_recommendation_result.setter
    def formula_recommendation_result(self, formula_recommendation_result):
        """Sets the formula_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.


        :param formula_recommendation_result: The formula_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :type: ComPatagonaPricemonitorShareApiPriceCalculationResultFormulaRecommendationResult
        """

        self._formula_recommendation_result = formula_recommendation_result

    @property
    def rounding_price_recommendation_result(self):
        """Gets the rounding_price_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501


        :return: The rounding_price_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :rtype: ComPatagonaPricemonitorShareApiRoundingPriceRecommendationResult
        """
        return self._rounding_price_recommendation_result

    @rounding_price_recommendation_result.setter
    def rounding_price_recommendation_result(self, rounding_price_recommendation_result):
        """Sets the rounding_price_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.


        :param rounding_price_recommendation_result: The rounding_price_recommendation_result of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :type: ComPatagonaPricemonitorShareApiRoundingPriceRecommendationResult
        """

        self._rounding_price_recommendation_result = rounding_price_recommendation_result

    @property
    def price_calculation_failure(self):
        """Gets the price_calculation_failure of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501


        :return: The price_calculation_failure of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :rtype: ComPatagonaPricemonitorShareApiPriceCalculationResultPriceCalculationFailure
        """
        return self._price_calculation_failure

    @price_calculation_failure.setter
    def price_calculation_failure(self, price_calculation_failure):
        """Sets the price_calculation_failure of this ComPatagonaPricemonitorShareApiPriceCalculationResult.


        :param price_calculation_failure: The price_calculation_failure of this ComPatagonaPricemonitorShareApiPriceCalculationResult.  # noqa: E501
        :type: ComPatagonaPricemonitorShareApiPriceCalculationResultPriceCalculationFailure
        """

        self._price_calculation_failure = price_calculation_failure

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiPriceCalculationResult):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComPatagonaPricemonitorShareApiPriceCalculationResult):
            return True

        return self.to_dict() != other.to_dict()
