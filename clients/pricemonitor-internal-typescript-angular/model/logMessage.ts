/**
 * Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts, and more.  This API supports both public endpoints for customer integration and internal endpoints for platform management. All endpoints are authenticated using either Basic Authentication or JWT Bearer tokens.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.7173
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Individual log message with severity level and contextual information
 */
export interface LogMessage { 
    /**
     * The actual log message content to be published
     */
    message: string;
    /**
     * Log message severity level, ordered by priority (highest to lowest):  - **fatal**: Critical errors causing system termination - **error**: Serious errors requiring immediate attention - **warn**: Deprecated APIs, poor API usage, or unexpected situations - **info**: General progress and state information for end users - **debug**: Detailed information for application developers and support - **trace**: Most detailed information for deep debugging 
     */
    severity: LogMessage.SeverityEnum;
    /**
     * Name of the integrated system or application component generating the log
     */
    component: string;
    /**
     * Specific entity or source within the component for additional categorization
     */
    source: string;
    /**
     * The contract identifier associated with this log message
     */
    contractId?: string;
}
export namespace LogMessage {
    export type SeverityEnum = 'fatal' | 'error' | 'warn' | 'info' | 'debug' | 'trace';
    export const SeverityEnum = {
        Fatal: 'fatal' as SeverityEnum,
        Error: 'error' as SeverityEnum,
        Warn: 'warn' as SeverityEnum,
        Info: 'info' as SeverityEnum,
        Debug: 'debug' as SeverityEnum,
        Trace: 'trace' as SeverityEnum
    };
}


