/**
 * Pricemonitor API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.5605
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface LogMessage { 
    /**
     * The information that needs to be published
     */
    message: string;
    /**
     * Determines how severe is the information. The ENUM values are listed in the descreasing order of their priority.<br> 1. trace - gives more detailed information than any other level in the hierarchy<br> 2. debug - helps developer to debug application and is generally useful for providing support to the application developers<br> 3. info  - gives the progress and chosen state information and is generally useful for end user<br> 4. warn  - use of deprecated APIs, poor use of API, ‘almost’ errors, other runtime situations that are undesirable or unexpected, but not necessarily “wrong”.<br> 5. error - gives information about a serious error which needs to be addressed and may result in unstable state<br> 6. fatal - such errors result in premature termination and you don’t often get this error<br>
     */
    severity: LogMessage.SeverityEnum;
    /**
     * The name of the integrated system.
     */
    component: string;
    /**
     * Anything within the component that can be considered as an entity to further categorize the log message.
     */
    source: string;
    /**
     * The ID of the contract
     */
    contractId?: string;
}
export namespace LogMessage {
    export type SeverityEnum = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'fatal';
    export const SeverityEnum = {
        Trace: 'trace' as SeverityEnum,
        Debug: 'debug' as SeverityEnum,
        Info: 'info' as SeverityEnum,
        Warn: 'warn' as SeverityEnum,
        Error: 'error' as SeverityEnum,
        Fatal: 'fatal' as SeverityEnum
    };
}


