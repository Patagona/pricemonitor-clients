/**
 * Omnia 2.0 API The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0 and Pricemonitor. It is used to manage products, offers, contracts, and more.  This API supports both public endpoints for customer integration and internal endpoints for platform management. All endpoints are authenticated using either Basic Authentication or JWT Bearer tokens.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.7187
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PricemonitorOneOfProductsQuery } from './pricemonitorOneOfProductsQuery';
import { PricemonitorOffsetTimeRange } from './pricemonitorOffsetTimeRange';
import { PricemonitorPagination } from './pricemonitorPagination';


/**
 * Represents a paginated query for price recommendation approvals. <br> If no filter is provided, the response will contain all available data, paginated according to the `pagination` parameter. <br> <br> Notes: <br> - At maximum it\'s allowed to query 1,000 records (pagination limit). - If `status` is not provided, all statuses are included in the results.<br> - If `latestOnly` is true, only the most recent approval per product is returned. If false, all matching records are returned.
 */
export interface PricemonitorPriceRecommendationsApprovalQueryRequestV3 { 
    productFilter?: PricemonitorOneOfProductsQuery;
    /**
     * Boolean indicating whether to return only the most recent approval per product. <br> If true, only the most recent record per product within the time range is returned. <br> If false, all records within the time range are returned.
     */
    latestOnly: boolean;
    range: PricemonitorOffsetTimeRange;
    /**
     * Optional set of statuses to filter the approvals by their current status. <br> If omitted, all statuses are included.
     */
    status?: Array<string>;
    pagination: PricemonitorPagination;
}

