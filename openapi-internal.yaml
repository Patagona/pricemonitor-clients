openapi: 3.0.0
info:
  contact:
    name: Patagona GmbH
    url: https://patagona.de/
  title: Pricemonitor API
  version: 0.0.5814
servers:
- description: Production server
  url: https://api.patagona.de
security:
- BasicAuth: []
- BearerAuth: []
tags:
- description: Manage your account
  name: account
- description: Company management related endpoints
  name: companies
- description: Manage your data-feeds
  name: feeds
- description: Manage your orders
  name: orders
- description: View price recommendations
  name: pricerecommendations
- description: Manage your products
  name: products
- description: Manage your contract
  name: settings
- description: See all of your tasks
  name: tasks
paths:
  /version:
    get:
      operationId: version
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionApiResponse'
          description: Current application version.
      security: []
      summary: Get the current application version
      tags:
      - controlpanel
      - internal
  /api/1/{contractId}/products/analysis/pricerecommendations:
    get:
      operationId: getPriceRecommendations
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Where to start fetching the recommendations
        example: 0
        explode: true
        in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Maximal number of results
        example: 100
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10000
          format: int32
          type: integer
        style: form
      - description: Timestamp of the oldest results
        example: 2019-01-01T00:00:00.000Z
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPriceRecommendationsResponse'
          description: No response was specified
      summary: Get price recommendations (deprecated)
      tags:
      - pricerecommendations
  /api/2/companies:
    post:
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The company's name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCompanyApiResponse'
          description: No response was specified
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The company name may not be empty
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User already belongs to a company
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The company could not be created
      summary: Allows users without one to create a new Company
      tags:
      - companies
  /api/2/companies/{companyId}/contracts:
    get:
      operationId: getCompanyContracts
      parameters:
      - example: 1
        explode: false
        in: path
        name: companyId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompanyContractsApiResponse'
          description: No response was specified
      summary: Get all contracts for given company
      tags:
      - companies
    post:
      operationId: addCompanyContract
      parameters:
      - example: 1
        explode: false
        in: path
        name: companyId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContractRequest'
        description: Contract to be added
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCompanyContractApiResponse'
          description: No response was specified
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to add contract for company ID
      summary: Add contract for given company
      tags:
      - companies
  /api/2/m/contracts/{contractId}/settings/callbacks:
    delete:
      operationId: deleteCallbackSettingsManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    get:
      operationId: getCallbacks
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Callbacks'
          description: '-'
        "404":
          description: Settings for this contract don't exist yet
      summary: Get callbacks
      tags:
      - settings
    put:
      operationId: putCallbacks
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Callbacks'
        description: Callbacks
        required: true
      responses:
        "200":
          description: '-'
        "404":
          description: Settings for this contract don't exist yet
      summary: Set callbacks
      tags:
      - settings
  /api/2/v/contracts/{contractId}/feeds:
    get:
      description: Feeds can contain offer-related information such as price recommendations.
        They can be configured to match individual demands.
      operationId: getFeeds
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
                uniqueItems: true
          description: No response was specified
      summary: Get all feeds
      tags:
      - feeds
    post:
      operationId: postFeedVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - feeds
  /api/2/v/contracts/{contractId}/feeds/{feedId}:
    delete:
      operationId: deleteFeedVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: feedId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - feeds
    get:
      description: A feed can contain offer-related information such as price recommendations.
        Feeds can be configured to match individual demands.
      operationId: getFeed
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the feed
        explode: false
        in: path
        name: feedId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
          description: No response was specified
        "404":
          description: Not found
      summary: Find feed by ID
      tags:
      - feeds
    put:
      operationId: putFeedVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: feedId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - feeds
  /api/2/v/contracts/{contractId}/feeds/{feedId}/export/delta:
    delete:
      description: Dismiss already fetched feed-entries, so they will not be part
        of future responses.
      operationId: excludeFetchedFeedData
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the feed
        explode: false
        in: path
        name: feedId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
          description: No response was specified
        "404":
          description: Not found
      summary: Dismiss already fetched feed-entries
      tags:
      - feeds
    get:
      operationId: getFeedExportDeltaVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: feedId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: fileName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - feeds
  /api/2/v/contracts/{contractId}/feeds/{feedId}/export/delta/{fileName}:
    get:
      description: In contrast of normal feeds, feed-deltas return only results, that
        are new since the last (DELETE-)request.
      operationId: getFeedExportDelta
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the feed
        explode: false
        in: path
        name: feedId
        required: true
        schema:
          type: string
        style: simple
      - description: fileName
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          default: my-feed.csv
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: No response was specified
        "404":
          description: Not found
      summary: Retrieve all feed-entries after last request
      tags:
      - feeds
  /api/2/v/contracts/{contractId}/feeds/{feedId}/export/{fileName}:
    get:
      description: Lets you download a file, containing all the data of the feed.
      operationId: getFeedExport
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the feed
        explode: false
        in: path
        name: feedId
        required: true
        schema:
          type: string
        style: simple
      - description: fileName
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          default: my-feed.csv
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: No response was specified
        "404":
          description: Not found
      summary: Export feed-data
      tags:
      - feeds
  /api/2/v/contracts/{contractId}/orders:
    post:
      operationId: postOrders
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostCustomerOrdersRequestV2'
        description: Orders to be added
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOrdersBulkApiResponse'
          description: Successfully added orders
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOrdersBulkApiResponse'
          description: Unable to add orders
      summary: Add orders in bulk
      tags:
      - orders
  /api/2/v/contracts/{contractId}/products:
    get:
      operationId: getProducts
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: "null"
        explode: false
        in: path
        name: attributes
        required: true
        schema:
          enum:
          - gtin
          - identifier
          - name
          - referencePrice
          - minPriceBoundary
          - maxPriceBoundary
          - tags
          - strategy
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
                uniqueItems: true
          description: No response was specified
      summary: Get all products
      tags:
      - products
    put:
      operationId: putProductsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/2/v/contracts/{contractId}/products/csv:
    put:
      description: |-
        Warning: Deletes all existing products.
                <br/>Note that this will not happen immediately. Instead, you receive the ID of a task that has been created.
                <br/>Furthermore you receive an URL which you can use to check if the task was executed successfully.
                <br>The csv file must contain following columns:
                <ul>
                  <li>productId - arbitrary string, can be used for the systems product id.</li>
                  <li>gtin - the GTIN of the product
                  <li>description - name or short description of the product
                  <li>referencePrice - arbitrary decimal number, usually the current price or recommended retail price (gross)
                  <li>minPriceBoundary - decimal number defining the lower price boundary (gross)
                  <li>maxPriceBoundary - decimal number defining the upper price boundary (gross)
                  <li>Additional columns are added as product tags. Tags are used for repricing strategies and several other
                  purpose.
                </ul>
                <br/>Column separator must be semicolon, the decimal separator must be dot. File encoding must be UTF-8.
      operationId: putCSVProducts
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/csv:
            schema:
              type: string
        description: CSV file containing the products
        required: true
      responses:
        "200":
          description: '-'
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdAndUrl'
          description: Accepted
      summary: Set products via CSV file
      tags:
      - products
  /api/2/v/contracts/{contractId}/result/offers:
    get:
      operationId: getOffers
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Start product index for pagination
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of products for pagination
        explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Timestamp of start of time range, formatted as ISO Date (i.e.
          2018-04-06T13:46:13Z) in UTC. If this value is omitted, the range is '{endDate}
          - 48 hours to {endDate}' if {endDate} is given or NOW - 48 hours if both
          are omitted.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Timestamp of end of time range, formatted as ISO Date (i.e. 2018-04-06T13:46:13Z)
          in UTC. If this value is omitted, the range is '{startDate} to {startDate}
          + 48 hours' if {startDate} is given or NOW - 48 hours if both are omitted.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOffersResponse'
          description: No response was specified
      summary: Get all offers for all products
      tags:
      - products
  /api/2/v/contracts/{contractId}/result/pricerecommendations:
    get:
      operationId: getPriceRecommendation
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Timestamp of start of time range, formatted as ISO Date (i.e.
          2018-04-06T13:46:13Z) in UTC
        explode: true
        in: query
        name: startTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Timestamp of end of time range, formatted as ISO Date (i.e. 2018-04-06T13:46:13Z)
          in UTC
        explode: true
        in: query
        name: endTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Start price-recommendation index for pagination
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of price-recommendations for pagination
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPriceRecommendationApiResponse'
          description: A paginated list of price recommendations is returned for the
            specified timerange. Only the newest price recommendations are returned
            in case of multiple price recommendations per product.
      summary: Get all price recommendations
      tags:
      - pricerecommendations
  /api/2/v/contracts/{contractId}/settings/domains:
    get:
      operationId: getDomainsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      type: string
                    type: array
          description: A list of configured domains is returned.
      tags:
      - internal
      - settings
    put:
      operationId: putDomains
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: Settings
        required: true
      responses:
        "200":
          description: The domains setting for this contract was saved.
        "404":
          description: Settings for this contract do not exist yet
      summary: Set contract domains
      tags:
      - settings
  /api/2/v/contracts/{contractId}/tasks:
    get:
      description: The search can be narrowed down by providing the IDs of the tasks,
        separated by comma
      operationId: getTasksVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Ids of the tasks
        explode: true
        in: query
        name: taskIdsFilter
        required: false
        schema:
          type: string
        style: form
      - description: Desired task type
        explode: true
        in: query
        name: taskTypeFilter
        required: false
        schema:
          type: string
        style: form
      - description: Maximal number of results
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      - description: Flag whether to include failures in the response
        explode: true
        in: query
        name: includeFailures
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Comma separated task state filter
        explode: true
        in: query
        name: taskState
        required: false
        schema:
          type: string
        style: form
      - description: Oldest returned creation date in UTC
        explode: true
        in: query
        name: minCreationDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Newest returned creation date in UTC
        explode: true
        in: query
        name: maxCreationDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskWithContractResourceApiResponse'
                type: array
                uniqueItems: true
          description: No response was specified
      summary: Find all tasks
      tags:
      - tasks
    post:
      operationId: createTaskVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - tasks
  /api/2/v/contracts/{contractId}/tasks/{taskId}:
    get:
      description: Returns a task, associated with a certain contract and identified
        by its ID
      operationId: getTaskVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the task
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithContractResourceApiResponse'
          description: No response was specified
        "404":
          description: Not found
      summary: Find task by ID
      tags:
      - tasks
    put:
      operationId: updateTaskVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - tasks
  /api/account:
    get:
      description: Returns the current user with its companies and contracts
      operationId: userInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.UserInfo'
          description: No response was specified
      summary: Details of the current user
      tags:
      - account
    post:
      operationId: userSignup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignupRequest'
        description: The user signup data
        required: true
      responses:
        "200":
          description: No response was specified
        "201":
          description: User was created and confirmation eMail was sent
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to create the user because of bad request data
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to create the user because of an unexpected error
      summary: Create a new user account in the Pricemonitor
      tags:
      - account
  /api/account/confirm/{token}:
    head:
      operationId: checkUserConfirmation
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response was specified
        "204":
          description: Confirmation token was found
        "404":
          description: No such confirmation token was found
      summary: Check if a specific confirmation token exists
      tags:
      - account
    post:
      operationId: confirmUser
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The password that should be set on the confirmed user
        required: true
      responses:
        "200":
          description: No response was specified
        "204":
          description: User was confirmed & logged in
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to confirm the user because of bad request data
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to confirm the user because of an unexpected error
      summary: Confirm an unconfirmed user
      tags:
      - account
  /api/v3/manufacturer/contracts/{contractId}/offers:
    get:
      description: Returns the newest offers for a given time range.
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Where to start fetching the products
        explode: true
        in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Maximum number of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10000
          format: int32
          type: integer
        style: form
      - description: Timestamp of start of time range, formatted as ISO Date (i.e.
          2018-04-06T13:46:13Z) in UTC. If this value is omitted, the range is '{endDate}
          - 48 hours to {endDate}' if {endDate} is given or NOW - 48 hours if both
          are omitted.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Timestamp of end of time range, formatted as ISO Date (i.e. 2018-04-06T13:46:13Z)
          in UTC. If this value is omitted, the range is '{startDate} to {startDate}
          + 48 hours' if {startDate} is given or NOW - 48 hours if both are omitted.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOffersApiResponse'
          description: A list of products with their corresponding offers.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned in case of invalid time range or a limit greater than
            10000.
      tags:
      - offers
  /api/v3/manufacturer/contracts/{contractId}/offers/shop/query:
    post:
      description: Get all offers of a shop. Please note that it might return offers
        for inactive products.
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.QueryOffersOfShopRequestV3'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOffersOfShopV3ApiResponse'
          description: Returns offers of the shop
      tags:
      - products
      - internal
  /api/v3/manufacturer/contracts/{contractId}/offers/stats/query:
    post:
      description: 'This operation is used to get offer statistics (e.g. offer count,
        average price) grouped by product and domain. Warning: This endpoint contains
        complex query structure and will be replaced in the future. Please note that
        offer statistics can only be computed for at maximum 2500 products at a time.'
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOfferStatisticsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOfferStatisticsApiResponse'
          description: Returns a list of offer statistics per product.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned in case of unparsable request body JSON or unsupported
            filter.
      tags:
      - products
      - internal
    summary: Get offer statistics per product
  /api/v3/manufacturer/contracts/{contractId}/offers/stats:
    get:
      operationId: getOfferStatisticsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Timestamp of start of time range, formatted as ISO Date (i.e.
          2018-04-06T13:46:13Z) in UTC. If this value is omitted, the range is '{endDate}
          - 48 hours to {endDate}' if {endDate} is given or NOW - 48 hours if both
          are omitted.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Timestamp of end of time range, formatted as ISO Date (i.e. 2018-04-06T13:46:13Z)
          in UTC. If this value is omitted, the range is '{startDate} to {startDate}
          + 48 hours' if {startDate} is given or NOW - 48 hours if both are omitted.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: includeDeliveryCosts
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferStatisticsV3ApiResponse'
          description: Returns a list of offer statistics per product.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Specified time range is invalid (> 48h).
      summary: Get offer statistics per product of a contract. Only the latest offers
        per product and domain the are taken into account.
      tags:
      - offers
      - internal
  /api/v3/manufacturer/contracts/{contractId}/products:
    delete:
      operationId: deleteProductsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: updatedMax
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
    put:
      description: |-
        This operation is used to import products into the pricemonitor.
        This process is represented by a task, which is processed asynchronously.
        In the response you will receive a url which is used to check the status of the import process. <br>

        When the process is done all products in csv file from the request body will be in the pricemonitor.
        Products that were already present before have been updated and new products have been added. <br>

        Warning: All products that were in the pricemonitor before but are not present in the new import will be deleted.

        Identification of the products is done based on the identifying attributes (see parameter: patagona-product-identifying-attributes)
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - example: text/csv
        explode: false
        in: header
        name: content-type
        required: true
        schema:
          enum:
          - text/csv
          type: string
        style: simple
      - description: Comma separated list of csv columns that identify a product uniquely
        example: id-column
        explode: false
        in: header
        name: patagona-product-identifying-attributes
        required: true
        schema:
          type: string
        style: simple
      - description: Csv column that contains the product name
        example: name-column
        explode: false
        in: header
        name: patagona-product-name
        required: true
        schema:
          type: string
        style: simple
      - description: Csv column that contains the reference price
        example: reference-price-column
        explode: false
        in: header
        name: patagona-product-reference-price
        required: true
        schema:
          type: string
        style: simple
      - description: Csv column that contains the gtin
        example: gtin-column
        explode: false
        in: header
        name: patagona-product-gtin
        required: false
        schema:
          type: string
        style: simple
      - description: Csv column that contains an id (There is no requirement for this
          field to be unique)
        example: id-column
        explode: false
        in: header
        name: patagona-product-customer-id
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          Decimal separator used for parsing numbers \
          The values for patagona-decimal-separator, patagona-csv-column-separator and patagona-csv-quotation-character must be different from one another. \
          Available values: ",", "."
        example: "."
        explode: false
        in: header
        name: patagona-decimal-separator
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          The csv column separator \
          The values for patagona-decimal-separator, patagona-csv-column-separator and patagona-csv-quotation-character must be different from one another.
        example: ','
        explode: false
        in: header
        name: patagona-csv-column-separator
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          The csv quotation character \
          The values for patagona-decimal-separator, patagona-csv-column-separator and patagona-csv-quotation-character must be different from one another.
        example: '"'
        explode: false
        in: header
        name: patagona-csv-quotation-character
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/csv:
            schema:
              type: string
        description: CSV file containing the products
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProductsApiResponse'
          description: |-
            The field data.url in the returned object allows to check the status of the import process. It will point to the endpoint GET /api/2/v/contracts/{contractId}/tasks/{taskId}. \
            The field data.id is the task id corresponding to the product import.
      summary: Set products via CSV file
      tags:
      - products
  /api/v3/vendor/contracts/{contractId}/offers:
    get:
      description: Returns the newest offers for a given time range.
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Where to start fetching the products
        example: 0
        explode: true
        in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Maximum number of results
        example: 10000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10000
          format: int32
          type: integer
        style: form
      - description: Timestamp of start of time range, formatted as ISO Date (i.e.
          2018-04-06T13:46:13Z) in UTC. If this value is omitted, the range is '{endDate}
          - 48 hours to {endDate}' if {endDate} is given or NOW - 48 hours if both
          are omitted.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Timestamp of end of time range, formatted as ISO Date (i.e. 2018-04-06T13:46:13Z)
          in UTC. If this value is omitted, the range is '{startDate} to {startDate}
          + 48 hours' if {startDate} is given or NOW - 48 hours if both are omitted.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOffersApiResponse'
          description: A list of products with their corresponding offers.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned in case of invalid time range or a limit greater than
            10000.
      tags:
      - offers
  /api/v3/vendor/contracts/{contractId}/offers/query:
    post:
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductOffersApiQuery'
        description: |-
          The request body specifies which offers will be searched for.<br>
          Warning: It's highly recommended to not use this endpoint since it is error-prone due to complex query structure!
          Supported are queries with three different types of filters:<br>
          1. Filtering for offers of a certain product<br> This can be done by a ComparisonFilter with
            * the `left` side being a `StringValueProvider` with the `attributeName` value "productId"
            * the `right` side being a `StringConstantValueProvider` with the `value` being the actual pricemonitor product ID to filter offers for
            * the `comparison` being a `StringEquality`

          2. Filtering for valid offers of a certain product<br> This can be done by an AndFilter with
            * a) A product filter (see first supported filter)
            * b) A NotFilter which contains a ComparisonFilter
              * the `left` side being a `NumberValueProvider` with the `attributeName` value "ignoredBy"
              * the `right` side being a `NumberConstantValueProvider` with the `value` being the numeric contract id to filter offers for
              * the `comparison` being a `NumberEquality`

          3. Filtering for offers of a certain vendor<br> This can be done by a ComparisonFilter with
            * the `left` side being a `StringValueProvider` with the `attributeName` value "reseller_name"
            * the `right` side being a `StringConstantValueProvider` with the `value` being the actual vendor name to filter offers for
            * the `comparison` being a `StringEquality`

          Note: This endpoint will only return the newest offers for each product for a given time range.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOffersApiResponse'
          description: Returns either an Error or a list of ApiOffers matching the
            given filter.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned in case of unparsable request JSON or unsupported
            filter/sorting.
      tags:
      - offers
  /api/v3/vendor/contracts/{contractId}/offers/shop/query:
    post:
      description: Get all offers of a shop. Please note that it might return offers
        for inactive products.
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.QueryOffersOfShopRequestV3'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOffersOfShopV3ApiResponse'
          description: Returns offers of the shop
      tags:
      - products
      - internal
  /api/v3/vendor/contracts/{contractId}/offers/pricedumpingstats:
    post:
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PriceDumpingStatsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPriceDumpingStatsApiResponse'
          description: Returns the price dumping statistics in the given time range.
      tags:
      - products
  /api/v3/vendor/contracts/{contractId}/offers/stats/query:
    post:
      description: 'This operation is used to get offer statistics (e.g. offer count,
        average price) grouped by product and domain. Warning: This endpoint contains
        complex query structure and will be replaced in the future. Please note that
        offer statistics can only be computed for at maximum 2500 products at a time.'
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOfferStatisticsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOfferStatisticsApiResponse'
          description: Returns a list of offer statistics per product.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned in case of unparsable request body JSON or unsupported
            filter.
      tags:
      - products
      - internal
    summary: Get offer statistics per product
  /api/v3/vendor/contracts/{contractId}/orders:
    delete:
      operationId: deleteOrders
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrdersApiResponse'
          description: Successfully deleted all orders
      summary: Delete all orders for this contract
      tags:
      - orders
    get:
      operationId: getOrdersVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - orders
  /api/v3/vendor/contracts/{contractId}/products:
    delete:
      description: Delete all products or delete products by a last updated timestamp.
      operationId: deleteProducts
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Last updated timestamp of products, formatted as ISO Date (i.e.
          2019-11-20T13:46:13Z) in UTC.<br> Products can be deleted which haven't
          been updated since the specified timestamp.<br> If the query parameter is
          missing all products are deleted.
        explode: true
        in: query
        name: updatedMax
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductsApiResponse'
          description: Returns the number of deleted products.
      summary: Delete products
      tags:
      - products
    post:
      description: |-
        This operation is used to import products into the pricemonitor:<br>
        Products that are already present will be updated and new products will be added. Identification of the products is done based on the identifying attributes, which need to be provided via the request body.<br><br>
        Attention:<br> This endpoint should only be used when dealing with large number of products at your side is an issue. Otherwise please use the PUT-counterpart of this endpoint which accepts products via a csv file.<br><br>
        Note:<br> This endpoint should be used in conjunction with: DELETE  /api/v3/vendor/contracts/{contractId}/products.<br><br>
        Procedure:<br> 1. Add your products in bulks with multiple requests via this endpoint.<br> 2. Send a DELETE request to /api/v3/vendor/contracts/{contractId}/products
           and set the parameter updatedMax to a date which is older or equal to your first request from step 1.
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - example: application/json
        explode: false
        in: header
        name: content-type
        required: true
        schema:
          enum:
          - application/json
          type: string
        style: simple
      - description: 'The decimal separator is used for parsing numbers in tags. English
          and German number formats are supported: dot and comma.'
        example: "."
        explode: false
        in: header
        name: patagona-tags-decimal-separator
        required: true
        schema:
          enum:
          - "."
          - ','
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProductsRequest'
        description: The body contains the products which should be added
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkedPostProductsApiResponse'
          description: The response provides sorted import results in respective to
            the order of the provided products.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to add products because of invalid request data
      summary: Add products in bulk
      tags:
      - products
    put:
      description: |-
        This operation is used to import products into the pricemonitor.
        This process is represented by a task, which is processed asynchronously.
        In the response you will receive a url which is used to check the status of the import process. <br>

        When the process is done all products in csv file from the request body will be in the pricemonitor.
        Products that were already present before have been updated and new products have been added. <br>

        Warning: All products that were in the pricemonitor before but are not present in the new import will be deleted.

        Identification of the products is done based on the identifying attributes (see parameter: patagona-product-identifying-attributes)
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - example: text/csv
        explode: false
        in: header
        name: content-type
        required: true
        schema:
          enum:
          - text/csv
          type: string
        style: simple
      - description: Comma separated list of csv columns that identify a product uniquely
        example: id-column
        explode: false
        in: header
        name: patagona-product-identifying-attributes
        required: true
        schema:
          type: string
        style: simple
      - description: Csv column that contains the product name
        example: name-column
        explode: false
        in: header
        name: patagona-product-name
        required: true
        schema:
          type: string
        style: simple
      - description: Csv column that contains the reference price
        example: reference-price-column
        explode: false
        in: header
        name: patagona-product-reference-price
        required: true
        schema:
          type: string
        style: simple
      - description: Csv column that contains the min price
        example: min-price-column
        explode: false
        in: header
        name: patagona-product-min-price
        required: true
        schema:
          type: string
        style: simple
      - description: Csv column that contains the max price
        example: max-price-column
        explode: false
        in: header
        name: patagona-product-max-price
        required: true
        schema:
          type: string
        style: simple
      - description: Csv column that contains the gtin
        example: max-price-column
        explode: false
        in: header
        name: patagona-product-gtin
        required: false
        schema:
          type: string
        style: simple
      - description: Csv column that contains an id (There is no requirement for this
          field to be unique)
        example: id-column
        explode: false
        in: header
        name: patagona-product-customer-id
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          Decimal separator used for parsing numbers \
          The values for patagona-decimal-separator, patagona-csv-column-separator and patagona-csv-quotation-character must be different from one another. \
          Available values: ",", "."
        example: "."
        explode: false
        in: header
        name: patagona-decimal-separator
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          The csv column separator \
          It can be provided either as text or as Base64 encoded string (e.g. needed for tab as separator). \
          The values for patagona-decimal-separator, patagona-csv-column-separator and patagona-csv-quotation-character must be different from one another.
        example: ','
        explode: false
        in: header
        name: patagona-csv-column-separator
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          The csv quotation character \
          The values for patagona-decimal-separator, patagona-csv-column-separator and patagona-csv-quotation-character must be different from one another.
        example: '"'
        explode: false
        in: header
        name: patagona-csv-quotation-character
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/csv:
            schema:
              type: string
        description: CSV file containing the products
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProductsApiResponse'
          description: |-
            The field data.url in the returned object allows to check the status of the import process. It will point to the endpoint GET /api/2/v/contracts/{contractId}/tasks/{taskId}. \
            The field data.id is the task id corresponding to the product import.
      summary: Set products via CSV file
      tags:
      - products
  /api/v3/vendor/contracts/{contractId}/products/{productId}/extendedtags:
    get:
      operationId: getExtendedTags
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the product
        example: 1
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExtendedTagsApiResponse'
          description: Returns a list of ExtendedTags for the given product.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Given product does not exist.
      summary: Return the extended tags for the given product
      tags:
      - products
  /api/v3/vendor/contracts/{contractId}/plugin:
    delete:
      operationId: deletePluginRegistration
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginRegistrationEmptyApiResponse'
          description: Plugin registration for given contract deleted successfully.
      summary: Delete the plugin registration for given contract
      tags:
      - pluginregistration
    get:
      operationId: getPluginRegistration
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginRegistrationApiResponse'
          description: Returns a plugin registration for given contract.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Given plugin registration does not exist.
      summary: Return the plugin registration for given contract
      tags:
      - pluginregistration
    put:
      operationId: putPluginRegistration
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPluginRegistrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginRegistrationEmptyApiResponse'
          description: Plugin registration for given contract stored successfully.
      summary: Create and/or update the plugin registration for given contract
      tags:
      - pluginregistration
  /api/v3/log/messages:
    post:
      operationId: postLogMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogMessages'
        required: true
      responses:
        "200":
          description: The logs have been stored successfully.
      summary: Stores the log messages. This endpoint aims to improve the API-integration
        process. One could integrate the Pricemonitor API in his/her own system and
        publish the integration logs so that Patagona could analyze them.
      tags:
      - logs
  /controlpanel/api/companies:
    get:
      parameters:
      - description: Start of the pagination
        explode: false
        in: path
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: simple
      - description: Number of elements per page
        explode: false
        in: path
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.AdminCompanyV2'
          description: A list of companies was loaded
      summary: Get a list of all companies
      tags:
      - internal
      - controlpanel
    post:
      operationId: addCompany
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/api/contracts:
    get:
      operationId: getAllContracts
      responses:
        "200":
          description: A list of contracts was loaded
      summary: Get a list of all contracts
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/api/portals:
    get:
      operationId: getAllPortals
      responses:
        "200":
          description: A list of portals was loaded
      summary: Get a list of all portals
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/api/users:
    get:
      operationId: getAllUsers
      responses:
        "200":
          description: A list of users was loaded
      summary: Get a list of all users
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/users:
    post:
      operationId: addUser
      responses:
        "200":
          description: A new user was added
      summary: Add a new user
      tags:
      - internal
      - undocumented
      - controlpanel
  /api/1/{contractId}/products/analysis/pricerecommendations/stats/{portal}:
    get:
      operationId: getStats
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: portal
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - pricerecommendations
  /api/1/{contractId}/products/analysis/timestamps:
    get:
      operationId: getTimeStamps
      parameters:
      - explode: false
        in: path
        name: contractId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - pricerecommendations
  /api/1/{contractId}/products/articlescountbyportal:
    get:
      operationId: getProductMetricsByContract
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: end
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/1/{contractId}/products/offers:
    get:
      operationId: rawOffers
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/1/{contractId}/products/orderscountbyportal:
    get:
      operationId: getOrdersCountByPortalByContract
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - orders
  /api/1/{contractId}/products/sales:
    post:
      operationId: saveSales
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/1/{contractId}/settings:
    get:
      operationId: getSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.GetContractSettingsResponseV1'
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PutAdminContractSettingsBody'
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PutAdminContractSettingsBody'
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/1/{contractId}/settings/alerts:
    get:
      operationId: getAlertSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    post:
      operationId: createAlertSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/1/{contractId}/settings/alerts/{alertId}:
    delete:
      operationId: deleteAlertSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: updateAlertSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/1/{contractId}/settings/dynamicmonitoring:
    delete:
      operationId: deleteDynamicMonitoringSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    get:
      operationId: getDynamicMonitoringSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putDynamicMonitoringSettings
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/1/{contractId}/settings/include_delivery_costs:
    post:
      operationId: saveIncludeDeliveryCosts
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/1/{contractId}/tasks:
    get:
      operationId: getTasks
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: tasks
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: attributes
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: taskType
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - tasks
    post:
      operationId: createTask
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - tasks
  /api/1/{contractId}/tasks/{taskId}:
    get:
      operationId: getTask
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - tasks
  /api/1/{contractId}/tasks/{taskId}/state:
    get:
      operationId: getTaskState
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - tasks
  /api/1/{contractId}/vendors/{vendor}/positions:
    post:
      operationId: positionDistribution
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: vendor
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: day
        required: true
        schema:
          format: date-time
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}:
    get:
      operationId: getManufacturerManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - companies
  /api/2/m/contracts/{contractId}/products/csv:
    put:
      operationId: putProductsCSVManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/2/m/contracts/{contractId}/products/tags:
    get:
      operationId: getTagsManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/2/m/contracts/{contractId}/products/tags/{key}:
    get:
      operationId: getTagValuesManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/2/m/contracts/{contractId}/result/contract/stats:
    get:
      operationId: statsManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: A ISO 8601 timestamp which marks the end of a 48h time range
          in which the data is collected
        explode: true
        in: query
        name: session
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ContractStats'
          description: 'Get the contract statistics: product count, vendor count,
            found offers count (filters applied), active portals count, found offers
            count (no filters applied)'
      tags:
      - internal
      - offers
  /api/2/m/contracts/{contractId}/result/offersegmentation:
    post:
      operationId: segmentOffersManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}/result/pricecutters:
    post:
      operationId: getPriceCuttersManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: session
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: includeDeliveryCosts
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}/result/pricesbyday/productid/{productId}:
    post:
      operationId: pricesByDayByProductIdManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The product ID to filter for
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PricesByDayByProductIdRequestV2'
        description: Query all known prices for a given day & product ID. Can be filtered
          by using the selectors.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PricesByDayByProductIdResponseV2'
                type: array
          description: The list of all known prices for the queried day & product
            ID
      tags:
      - internal
      - offers
  /api/2/m/contracts/{contractId}/result/priceviolations:
    get:
      operationId: getProductPriceViolationsManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: end
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: includeDeliveryCosts
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: referencePriceDelta
        required: true
        schema:
          format: double
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}/result/timestamps:
    get:
      operationId: timestampsManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}/result/validation:
    post:
      operationId: validateOffersManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}/result/vendors/cheapest:
    post:
      operationId: getCheapestVendorsManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: session
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: includeDeliveryCosts
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.TagFilteredVendorsRequest'
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}/result/vendors/domaindistribution:
    post:
      operationId: vendorsPerDomainManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: session
        required: true
        schema:
          format: date-time
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.TagFilteredVendorsRequest'
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}/result/vendors/list:
    post:
      operationId: getVendorsByDomainManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: domain
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: includeDeliveryCosts
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: session
        required: true
        schema:
          format: date-time
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.TagFilteredVendorsRequest'
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostVendorsByDomainResponse'
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/m/contracts/{contractId}/settings/imagetag:
    put:
      operationId: putImageTagManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/m/contracts/{contractId}/settings/monitoring:
    get:
      description: Get the current monitoring settings for a given contract
      operationId: getMonitoringSettingsManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: The current monitoring settings object
      tags:
      - internal
      - settings
    put:
      description: Update the monitoring settings for a given contract
      operationId: putMonitoringSettingsManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: The monitoring settings object to be written to the database
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Returns the successfully updated monitoring settings object
      tags:
      - internal
      - settings
  /api/2/m/contracts/{contractId}/tasks:
    get:
      description: Returns a list of task objects for the given contract
      operationId: getTasksManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: Comma separated list of task IDs to filter for
        explode: true
        in: query
        name: taskIdsFilter
        required: false
        schema:
          type: string
        style: form
      - description: A list of task types to filter for
        explode: true
        in: query
        name: taskTypeFilter
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of task states to filter for
        explode: true
        in: query
        name: taskState
        required: true
        schema:
          items:
            enum:
            - pending
            - executing
            - succeeded
            - failed
            type: string
          type: array
        style: form
      - description: Ignore all tasks created earlier than this date (ISO 8601)
        explode: true
        in: query
        name: minCreationDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Ignore all tasks created later than this date (ISO 8601)
        explode: true
        in: query
        name: maxCreationDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The maximum number of tasks returned
        explode: true
        in: query
        name: limit
        required: true
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      - description: Include failed tasks
        explode: true
        in: query
        name: includeFailures
        required: true
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GenericTask'
                type: array
          description: The list of tasks for the given contract
      tags:
      - internal
      - tasks
    post:
      description: Create a new task
      operationId: createTaskManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.CreateTaskBodyV2'
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTaskWithUrl'
          description: The new task was successfully created
      tags:
      - internal
      - tasks
  /api/2/m/contracts/{contractId}/tasks/{taskId}:
    get:
      description: Get the task designated by the taskId parameter
      operationId: getTaskManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTask'
          description: The task was found and is returned
        "404":
          description: No task with given taskId was found
      tags:
      - internal
      - tasks
    put:
      description: Update an existing task
      operationId: updateTaskManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequestV2'
        description: The new task object to be written to the database
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTask'
          description: The task was successfully updated and the given data is returned
      tags:
      - internal
  /api/2/m/contracts/{contractId}/tasks/{taskId}/data:
    description: Returns the payload data given during creation of the requested task
    get:
      operationId: getTaskDataManufacturerV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: The payload data of the requested task is returned
        "404":
          description: The task with the given ID could not be found
      tags:
      - internal
      - tasks
  /api/2/users/{userId}/role/{roleName}:
    delete:
      operationId: deleteUserRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - account
    put:
      operationId: updateUserRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - account
  /api/2/v/contracts:
    get:
      operationId: getContractsVendorV2
      parameters:
      - explode: true
        in: query
        name: maxCreationDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: minExpirationDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - companies
  /api/2/v/contracts/{contractId}:
    delete:
      operationId: deleteContractVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - companies
    get:
      operationId: getVendorVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - companies
  /api/2/v/contracts/{contractId}/feeds/{feedId}/export:
    get:
      operationId: getFeedExportVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: feedId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: fileName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - feeds
  /api/2/v/contracts/{contractId}/offerfilters/{listType}/complex:
    get:
      operationId: getComplexOfferFiltersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: listType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferFilterApiResponse'
          description: List of the filters to ignore the individual offers.
      summary: Get all complex filters for the given contract.
      tags:
      - internal
      - offers
    put:
      operationId: putComplexOfferFiltersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: listType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferFilterRequest'
        description: List of the filter that needs to be considered to ignore the
          individual offers.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferFilterApiResponse'
          description: List of the filters that have been sent as the request body.
      summary: Add the complex filters for the given contract.
      tags:
      - internal
      - offers
  /api/2/v/contracts/{contractId}/offerfilters/{listType}/products:
    get:
      operationId: getProductFiltersByRangeVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: listType
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: List of the filters per product to ignore the individual offers.
      summary: Get all the filters product-wise for the given contract.
      tags:
      - internal
      - offers
  /api/2/v/contracts/{contractId}/offerfilters/{listType}/products/{productId}:
    get:
      operationId: getProductFiltersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: listType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferFilterApiResponse'
          description: List of the filters to ignore the individual offers.
      summary: Get all the filters of a given product for the given contract.
      tags:
      - internal
      - products
    put:
      operationId: putProductFiltersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: listType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferFilterRequest'
        description: List of the filter that needs to be considered to ignore the
          individual offers.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferFilterApiResponse'
          description: List of the filters that have been sent as the request body.
      summary: Store the filters of a given product for the given contract.
      tags:
      - internal
      - products
  /api/2/v/contracts/{contractId}/offerfilters/:listType/products/query:
    post:
      operationId: getProductFiltersByIDVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/v/contracts/{contractId}/offerfilters/{listType}/vendors:
    get:
      operationId: getOfferFiltersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: listType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: List of the filters to ignore the individual offers. Offers
            are filtered against vendor name either for all the domain or for a specific
            domain.
      summary: Get all the vendor filters for the given contract.
      tags:
      - internal
      - offers
    put:
      operationId: putOfferFiltersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: listType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: List of the filters that needs to be considered to ignore the
          individual offers.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: List of the filters that have been sent as the request body.
      summary: Store the vendor filters for the given contract.
      tags:
      - internal
      - offers
  /api/2/v/contracts/{contractId}/offers:
    post:
      operationId: postOffersInABulkVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/v/contracts/{contractId}/offers/{productId}:
    post:
      operationId: postOffersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/v/contracts/{contractId}/productidentifiermapping:
    get:
      operationId: getMappingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: inputType
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: identifiers
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
    post:
      operationId: postMappingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/2/v/contracts/{contractId}/products/import:
    post:
      operationId: shopIntegrationPostRequestVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/2/v/contracts/{contractId}/products/tags:
    get:
      operationId: getTagsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/2/v/contracts/{contractId}/products/tags/{key}:
    get:
      operationId: getTagValuesVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/2/v/contracts/{contractId}/result/offersegmentation:
    post:
      operationId: segmentOffersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/v/contracts/{contractId}/result/pricecutters:
    post:
      operationId: getPriceCuttersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: session
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: includeDeliveryCosts
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/v/contracts/{contractId}/result/pricerecommendations/query:
    description: |
      This endpoint is used to query certain price recommendations. <br>
      Warning: This endpoint contains complex query structure and will be replaced in the future.
    post:
      operationId: queryPriceRecommendationsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceRecommendationApiQueryV2'
        description: The request body specifies which price recommendations will be
          searched for.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPriceRecommendationsV2ApiResponse'
          description: |
            A paginated list of price recommendations is returned for the specified timerange. <br>
            Only the newest price recommendations are returned in case of multiple price recommendations per product.
      tags:
      - internal
      - pricerecommendations
  /api/2/v/contracts/{contractId}/result/pricerecommendationstats:
    get:
      operationId: getPriceRecommendationStatsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: startTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: maxPositions
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - pricerecommendations
  /api/2/v/contracts/{contractId}/result/priceviolations:
    get:
      operationId: getProductPriceViolationsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: end
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: includeDeliveryCosts
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: referencePriceDelta
        required: true
        schema:
          format: double
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/v/contracts/{contractId}/result/validation:
    post:
      operationId: validateOffersVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/2/v/contracts/{contractId}/settings/callbacks:
    delete:
      operationId: deleteCallbackSettingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    get:
      operationId: getCallbacksVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putCallbacksVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/currency:
    get:
      operationId: getCurrencyVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putCurrencyVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/ebay/authorizations:
    get:
      operationId: getAllEbayAuthorizationsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    post:
      operationId: postEbayAuthorizationVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/ebay/authorizations/{authIds}:
    get:
      operationId: getEbayAuthorizationsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: authIds
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/ebay/token:
    get:
      operationId: getActiveEbayTokenVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/ebay/tokens:
    get:
      operationId: getAllEbayTokensVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/imagetag:
    put:
      operationId: putImageTagVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/import:
    delete:
      operationId: deleteImportSettingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    get:
      operationId: getImportSettingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putImportSettingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/monitoring:
    get:
      operationId: getMonitoringSettingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putMonitoringSettingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/repricing:
    get:
      operationId: getVendorSettings_V2VendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putVendorSettingsVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/2/v/contracts/{contractId}/settings/repricingstrategy:
    delete:
      operationId: deleteRepricingStrategyVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - pricerecommendations
    get:
      operationId: getRepricingStrategyVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - pricerecommendations
    put:
      operationId: putRepricingStrategyVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - pricerecommendations
  /api/2/v/contracts/{contractId}/tasks/{taskId}/data:
    get:
      operationId: getTaskDataVendorV2
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - tasks
  /api/account/password/reset:
    post:
      operationId: requestNewPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostNewPasswordRequest'
        description: Request a new password.
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: Eine E-Mail mit Anweisungen zum Zurücksetzen des Passworts
                  wurde versandt. Bitte überprüfen Sie Ihren Spam-Ordner und ggf.
                  die angegebene E-Mail-Adresse, falls in den nächsten Minuten keine
                  E-Mail ankommen sollte.
                type: string
          description: Successful response upon password request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Invalid request body is specified
      summary: Request a new password
      tags:
      - internal
      - account
    put:
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PutResetPasswordRequest'
        description: Reset a password
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: Das Passwort wurde erfolgreich geändert.
                type: string
          description: Password changed successfully.
        "400":
          content:
            text/plain:
              schema:
                example: Der benutzte Link ist abgelaufen, bitte benutzen Sie die
                  Passwort-Vergessen Funktion erneut.
                type: string
          description: Password didn't change successfully.
      summary: Reset the password
      tags:
      - internal
      - account
  /api/login/token/{token}:
    get:
      operationId: loginByAuthToken
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security: []
      tags:
      - internal
      - undocumented
      - account
  /api/v3/manufacturer/contracts/{contractId}:
    get:
      operationId: getManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManufacturerV3ApiResponse'
          description: Contract Information
      summary: Get the contract information
      tags:
      - internal
      - companies
  /api/v3/manufacturer/contracts/{contractId}/monitoringpipeline/v1/searchattempts:
    post:
      operationId: monitoringPipelineUpsertSearchAttemptsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/v3/manufacturer/contracts/{contractId}/offers/query:
    post:
      operationId: queryOffersManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - offers
  /api/v3/manufacturer/contracts/{contractId}/offers/pricedumpingstats:
    post:
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PriceDumpingStatsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPriceDumpingStatsApiResponse'
          description: Returns the price dumping statistics in the given time range.
      tags:
      - products
  /api/v3/manufacturer/contracts/{contractId}/products/{productId}:
    patch:
      operationId: patchProductManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/v3/manufacturer/contracts/{contractId}/products/{productId}/extendedtags:
    get:
      operationId: getExtendedTagsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/v3/manufacturer/contracts/{contractId}/products/query:
    description: This endpoint can be used for querying either all products or certain
      products by product ids.
    post:
      operationId: queryProductsByFilterManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryProductsRequestV3'
        description: The body contains the products query.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProductsByFilterManufacturerV3ApiResponse'
          description: Returns a list of found products.
      tags:
      - internal
      - products
    summary: Get products of a contract
  /api/v3.1/manufacturer/contracts/{contractId}/products/query:
    description: This endpoint can be used for querying either all products or certain
      products by the 'customerProductId' or 'productId'.
    post:
      operationId: queryProductsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiQuery'
        description: |
          The body contains the products query. <br>
          Currently, it supports only product queries for two attributes:<br>
          <ul>
            <li> by "customerProductId"</li>
            <li> by "productId" (Patagona's internal product id). Allowed values for 'productId' are numerical integer values</li>
          </ul>
          The maximum allowed limit in the pagination is 10000. <br>
          Pagination works with respective to the given products query. <br>
          This is most relevant when querying for a set of customerProductId's. <br>
          When the requests are chunked over a set of ids, it is easiest to provide up to 10000 customerProductId's in the query and keep the pagination at start: 0, limit: 10000. <br>
          The only allowed pattern is currently: <br>
          { <br>
          &nbsp;&nbsp;"pagination": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"start": ${start}, <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"limit": ${limit} <br>
          &nbsp;&nbsp;}, <br>
          &nbsp;&nbsp;"filter": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"oneOf": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [${customerProductIds as a list of strings}] <br>
          &nbsp;&nbsp;&nbsp;&nbsp;} <br>
          &nbsp;&nbsp;} <br>
          } <br>
          <br>
          example: <br>
          { <br>
          &nbsp;&nbsp;"pagination": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"start": 0, <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"limit": 10 <br>
          &nbsp;&nbsp;}, <br>
          &nbsp;&nbsp;"filter": { <br>
          &nbsp;&nbsp;"oneOf": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"] <br>
          &nbsp;&nbsp;&nbsp;&nbsp;} <br>
          &nbsp;&nbsp;} <br>
          } <br>
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProductsManufacturerV3ApiResponse'
          description: Returns a list of found products.
      tags:
      - products
    summary: Get products of a contract
  /api/v3/manufacturer/contracts/{contractId}/settings/customer:
    get:
      operationId: getCustomerContractSettingsManufaturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerContractSettingsApiResponse'
          description: Settings for this contract.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putCustomerContractSettingsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.CustomerContractSettings'
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCustomerContractSettingsApiResponse'
          description: Settings for this contract.
      tags:
      - internal
      - undocumented
      - settings
  /api/v3/manufacturer/contracts/{contractId}/settings/monitoring:
    get:
      operationId: getMonitoringSettingsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putMonitoringSettingsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/v3/manufacturer/contracts/{contractId}/settings/offerretention:
    get:
      operationId: getOfferRetentionSettingsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: contractType
        required: true
        schema:
          enum:
          - Pricemonitor for manufacturers
          - Pricemonitor for resellers
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putOfferRetentionSettingsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: contractType
        required: true
        schema:
          enum:
          - Pricemonitor for manufacturers
          - Pricemonitor for resellers
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/v3/vendor/contracts/{contractId}:
    get:
      operationId: getVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - companies
  /api/v3/vendor/contracts/{contractId}/monitoringpipeline/v1/searchattempts:
    post:
      operationId: monitoringPipelineUpsertSearchAttemptsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/v3/vendor/contracts/{contractId}/products/{productId}:
    patch:
      operationId: patchProductVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - products
  /api/v3/vendor/contracts/{contractId}/products/monitoringstatus:
    get:
      operationId: getProductMonitoringStatusVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The product ids for which the monitoring state should be returned
        explode: true
        in: query
        name: productIds
        required: true
        schema:
          items:
            type: integer
          maxItems: 1000
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductMonitoringStatusVendorV3ApiResponse'
          description: Monitoring status of the queried products
      tags:
      - products
  /api/v3/vendor/contracts/{contractId}/products/monitoringstatus/stats:
    get:
      operationId: getProductMonitoringStatusStatsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductMonitoringStatusStatsVendorV3ApiResponse'
          description: Contains the monitoring status stats per domain
      tags:
      - products
      - undocumented
      - internal
  /api/v3/vendor/contracts/{contractId}/products/query:
    description: This endpoint can be used for querying either all products or certain
      products by product ids.
    post:
      operationId: queryProductsByFilterVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryProductsRequestV3'
        description: The body contains the products query.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProductsByFilterVendorV3ApiResponse'
          description: Returns a list of found products.
      tags:
      - internal
      - products
    summary: Query products of a contract
  /api/v3/vendor/contracts/{contractId}/products/{productId}/pricerecommendationhistory:
    description: This endpoint returns all price recommendations for one product within
      a given time range
    get:
      operationId: getProductPriceRecommendationHistory
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the product in pricemonitor
        example: 862342
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      - description: Timestamp of start of time range, formatted as ISO Date (i.e.
          2018-04-06T13:46:13Z) in UTC. If this value is omitted, the range is '{endDate}
          - 48 hours to {endDate}' if {endDate} is given or NOW - 48 hours if both
          are omitted.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Timestamp of end of time range, formatted as ISO Date (i.e. 2018-04-06T13:46:13Z)
          in UTC. If this value is omitted, the range is '{startDate} to {startDate}
          + 48 hours' if {startDate} is given or NOW - 48 hours if both are omitted.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPriceRecommendationHistoryApiResponse'
          description: A list of price recommendations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: E.g. when the time range spans more than 48h.
      tags:
      - products
    summary: Get price recommendations of one product in time range
  /api/v3.1/vendor/contracts/{contractId}/products/query:
    description: This endpoint can be used for querying either all products or certain
      products by the 'customerProductId' or 'productId'.
    post:
      operationId: queryProductsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiQuery'
        description: |
          The body contains the products query. <br>
          Currently, it supports only product queries for two attributes:<br>
          <ul>
            <li> by "customerProductId"</li>
            <li> by "productId" (Patagona's internal product id). Allowed values for 'productId' are numerical integer values</li>
          </ul>
          The maximum allowed limit in the pagination is 10000. <br>
          Pagination works with respective to the given products query. <br>
          This is most relevant when querying for a set of customerProductId's. <br>
          When the requests are chunked over a set of ids, it is easiest to provide up to 10000 customerProductId's in the query and keep the pagination at start: 0, limit: 10000. <br>
          The only allowed pattern is currently: <br>
          { <br>
          &nbsp;&nbsp;"pagination": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"start": ${start}, <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"limit": ${limit} <br>
          &nbsp;&nbsp;}, <br>
          &nbsp;&nbsp;"filter": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"oneOf": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [${customerProductIds as a list of strings}] <br>
          &nbsp;&nbsp;&nbsp;&nbsp;} <br>
          &nbsp;&nbsp;} <br>
          } <br>
          <br>
          example: <br>
          { <br>
          &nbsp;&nbsp;"pagination": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"start": 0, <br>
          &nbsp;&nbsp;&nbsp;&nbsp;"limit": 10 <br>
          &nbsp;&nbsp;}, <br>
          &nbsp;&nbsp;"filter": { <br>
          &nbsp;&nbsp;"oneOf": { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"] <br>
          &nbsp;&nbsp;&nbsp;&nbsp;} <br>
          &nbsp;&nbsp;} <br>
          } <br>
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProductsVendorV3ApiResponse'
          description: Returns a list of found products.
      tags:
      - products
    summary: Query products of a contract
  /api/v3/vendor/contracts/{contractId}/settings/customer:
    get:
      operationId: getCustomerContractSettingsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerContractSettingsApiResponse'
          description: Settings for this contract.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putCustomerContractSettingsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.CustomerContractSettings'
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCustomerContractSettingsApiResponse'
          description: Settings for this contract.
      tags:
      - internal
      - undocumented
      - settings
  /api/v3/vendor/contracts/{contractId}/settings/monitoring:
    get:
      operationId: getMonitoringSettingsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putMonitoringSettingsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /api/v3/vendor/contracts/{contractId}/settings/offerretention:
    get:
      operationId: getOfferRetentionSettingsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: contractType
        required: true
        schema:
          enum:
          - Pricemonitor for manufacturers
          - Pricemonitor for resellers
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
    put:
      operationId: putOfferRetentionSettingsVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: contractType
        required: true
        schema:
          enum:
          - Pricemonitor for manufacturers
          - Pricemonitor for resellers
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - settings
  /controlpanel/api/companies/{companyId}:
    get:
      operationId: getCompany
      parameters:
      - explode: false
        in: path
        name: companyId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - companies
  /controlpanel/api/companies/{companyId}/users:
    get:
      operationId: getUsers
      parameters:
      - explode: false
        in: path
        name: companyId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - companies
  /controlpanel/api/companies/{companyId}/users/{userId}:
    delete:
      operationId: removeUser
      parameters:
      - explode: false
        in: path
        name: companyId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - companies
  /controlpanel/api/tasks:
    get:
      operationId: getAllTasks
      parameters:
      - explode: true
        in: query
        name: contractId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: taskId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: taskType
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: taskState
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: minCreationDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: maxCreationDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/api/tasks/stats:
    get:
      operationId: getTasksStats
      parameters:
      - explode: true
        in: query
        name: sinceSeconds
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/api/users/{email}:
    get:
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/companies/{id}/users/{email}:
    put:
      operationId: addCompanyUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/users/{email}/authtokens:
    post:
      operationId: createAuthToken
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/users/{email}/authtokens/{token}:
    delete:
      operationId: deleteAuthToken
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
    put:
      operationId: updateAuthToken
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/vendorexport/{vendor}:
    get:
      operationId: vendorData
      parameters:
      - explode: false
        in: path
        name: vendor
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: minPrice
        required: true
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: maxPrice
        required: true
        schema:
          format: double
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /controlpanel/vendors:
    get:
      operationId: listVendors
      parameters:
      - explode: true
        in: query
        name: nameFilter
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - internal
      - undocumented
      - controlpanel
  /login:
    post:
      operationId: authenticate
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Authenticate with the API and create a session
      security: []
      tags:
      - undocumented
      - account
  /logout:
    post:
      operationId: logout
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Deauthenticate with the API and destroy the current session
      security: []
      tags:
      - undocumented
      - account
  /api/account/password:
    put:
      operationId: changePassword
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Change the current users password
      tags:
      - undocumented
      - account
  /api/2/v/contracts/{contractId}/shop-integration/{path}:
    get:
      operationId: shopIntegrationGetRequest
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The shop-integration path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
    post:
      operationId: shopIntegrationPostRequest
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The shop-integration path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
  /api/2/log/messages:
    post:
      operationId: postLogMessage
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - logs
  /api/2/domains:
    get:
      operationId: allAvailablePortals
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - settings
  /api/v3/vendor/contracts/{contractId}/monitoringpipeline/{path}:
    post:
      operationId: monitoringPipelinePostRequestVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The monitoring-pipeline path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
  /api/v3/manufacturer/contracts/{contractId}/monitoringpipeline/{path}:
    post:
      operationId: monitoringPipelinePostRequestManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The monitoring-pipeline path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
  /api/v3/vendor/contracts/{contractId}/scheduler/{path}:
    delete:
      operationId: schedulerDeleteRequestVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The scheduler path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
    get:
      operationId: schedulerGetRequestVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The scheduler path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
    post:
      operationId: schedulerPostRequestVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The scheduler path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
    put:
      operationId: schedulerPutRequestVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The scheduler path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
  /api/v3/manufacturer/contracts/{contractId}/scheduler/{path}:
    delete:
      operationId: schedulerDeleteRequestManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The scheduler path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
    get:
      operationId: schedulerGetRequestManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The scheduler path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
    post:
      operationId: schedulerPostRequestManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The scheduler path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
    put:
      operationId: schedulerPutRequestManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The scheduler path to be called
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
      - undocumented
      - internal
  /api/v3/vendor/contracts/{contractId}/settings/monitoringschedules:
    get:
      operationId: getMonitoringSchedulesVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMonitoringSchedulesApiResponse'
          description: List of monitoring schedules.
      summary: Get all the monitoring schedules for a specified contract.
      tags:
      - monitoring-schedules
      - internal
    post:
      operationId: postMonitoringScheduleVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3'
        description: Request body for creating monitoring schedule.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMonitoringSchedulesApiResponse'
          description: Monitoring schedule has been created successfully.
      summary: Add a monitoring schedule for a given contract.
      tags:
      - internal
      - monitoring-schedules
  /api/v3/vendor/contracts/{contractId}/settings/monitoringschedules/{scheduleId}:
    delete:
      operationId: deleteMonitoringScheduleVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of a monitoring schedule
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.DeleteByNumericIdApiResponse'
          description: Monitoring schedule has been deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified monitoring schedule does not exist.
      summary: Delete a monitoring schedule for a given contract.
      tags:
      - internal
      - monitoring-schedules
    put:
      operationId: putMonitoringScheduleVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of a monitoring schedule
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3'
        description: Request body for updating monitoring schedule.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMonitoringSchedulesApiResponse'
          description: Monitoring schedule has been updated successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified monitoring schedule does not exist.
      summary: Update a monitoring schedule for a given contract.
      tags:
      - internal
      - monitoring-schedules
  /api/v3/vendor/contracts/{contractId}/settings/monitoringschedules/{scheduleId}/execute:
    post:
      operationId: executeMonitoringScheduleVendorV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of a monitoring schedule
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Monitoring task was successfully created and is executing
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Couldn't find any monitoring schedules for given schedule id.
            No monitoring task was created
      summary: Trigger a monitoring pipeline task for vendor for configured monitoring
        schedule
      tags:
      - internal
      - monitoring-schedules
  /api/v3/manufacturer/contracts/{contractId}/settings/monitoringschedules:
    get:
      operationId: getMonitoringSchedulesManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMonitoringSchedulesApiResponse'
          description: List of monitoring schedules.
      summary: Get all the monitoring schedules for a specified contract.
      tags:
      - monitoring-schedules
      - internal
    post:
      operationId: postMonitoringScheduleManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3'
        description: Request body for creating monitoring schedule.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMonitoringSchedulesApiResponse'
          description: Monitoring schedule has been created successfully.
      summary: Add a monitoring schedule for a given contract.
      tags:
      - internal
      - monitoring-schedules
  /api/v3/manufacturer/contracts/{contractId}/settings/monitoringschedules/{scheduleId}:
    delete:
      operationId: deleteMonitoringScheduleManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of a monitoring schedule
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.DeleteByNumericIdApiResponse'
          description: Monitoring schedule has been deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified monitoring schedule does not exist.
      summary: Delete a monitoring schedule for a given contract.
      tags:
      - internal
      - monitoring-schedules
    put:
      operationId: putMonitoringScheduleManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of a monitoring schedule
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3'
        description: Request body for updating monitoring schedule.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMonitoringSchedulesApiResponse'
          description: Monitoring schedule has been updated successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified monitoring schedule does not exist.
      summary: Update a monitoring schedule for a given contract.
      tags:
      - internal
      - monitoring-schedules
  /api/v3/manufacturer/contracts/{contractId}/settings/monitoringschedules/{scheduleId}/execute:
    post:
      operationId: executeMonitoringScheduleManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of a monitoring schedule
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Monitoring task was successfully created and is executing
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Couldn't find any monitoring schedules for given schedule id.
            No monitoring task was created
      summary: Trigger a monitoring pipeline task for manufacturer for configured
        monitoring schedule
      tags:
      - internal
      - monitoring-schedules
  /api/v3/manufacturer/contracts/{contractId}/vendors:
    get:
      operationId: getVendorShopMappingsManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVendorShopMappingsApiResponse'
          description: List of vendors along with their associated shops.
      summary: Get all the vendors along with their associated shops for a specified
        contract.
      tags:
      - vendor-shop-mapping
      - internal
    post:
      operationId: postVendorShopMappingManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostVendorShopMappingRequestV3'
        description: Request body for creating a new vendor and associate shops with
          it. Please note that atleast one shop is required for a successful creation.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorShopMappingV3ApiResponse'
          description: Vendor shop mapping has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified vendor name is empty. Or the specified shops
            are empty.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified vendor name already exists in our system.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified shops do not exist in our system.
      summary: Add a new vendor for a given contract and associate shops with the
        given vendor.
      tags:
      - internal
      - vendor-shop-mapping
  /api/v3/manufacturer/contracts/{contractId}/vendors/{vendorId}:
    delete:
      operationId: deleteVendorShopMappingManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of vendor shop mapping
        example: 1
        explode: false
        in: path
        name: vendorId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.DeleteByNumericIdApiResponse'
          description: A vendor and associated shops have been deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified vendor does not exist.
      summary: Delete a vendor and associated shops for a given contract.
      tags:
      - vendor-shop-mapping
      - internal
    get:
      operationId: getVendorShopMappingManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of vendor shop mapping
        example: 1
        explode: false
        in: path
        name: vendorId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorShopMappingV3ApiResponse'
          description: Get vendor along with their associated shop for given vendor
            id and contract.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Vendor doesn't exist for given vendor id.
      summary: Get vendor along with their associated shop for given vendor id and
        contract.
      tags:
      - vendor-shop-mapping
      - internal
    put:
      operationId: putVendorShopMappingManufacturerV3
      parameters:
      - description: ID of the contract
        example: qbcxvb
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of vendor shop mapping
        example: 1
        explode: false
        in: path
        name: vendorId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostVendorShopMappingRequestV3'
        description: Request body for updating an existing vendor and associate shops
          with it. Please note that atleast one shop is required for a successful
          creation.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorShopMappingV3ApiResponse'
          description: Vendor shop mapping has been successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified vendor name is empty. Or the specified shops
            are empty.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified vendor name already exists in our system.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified shops do not exist in our system.
      summary: Update an existing vendor for a given contract and associate shops
        with the given vendor.
      tags:
      - internal
      - vendor-shop-mapping
  /api/v3/account:
    post:
      operationId: postAccountV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostAccountRequestV3'
        description: Request body for creating a new user account. It must contain
          name, email and password.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountResponseV3ApiResponse'
          description: The account information of the newly created account.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Returned if:
            - The Request body is not a valid JSON string
            - The user account name is empty
            - The email doesn't match a valid email format
            - The password length is less than 6 characters long
            - The enpoint was requested too often
            - The given email address already exists
      security: []
      summary: Create a new user account
      tags:
      - account
  /api/v3/account/token/access:
    post:
      operationId: requestAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostAccessTokenRequestV3'
        description: Request body contains credentials i.e email address and password.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccessTokenResponseV3ApiResponse'
          description: Access token response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Returned if:
            - The request body is not a valid JSON string.
            - The email address is invalid.
            - The given email address does not exist in our system.
            - Invalid credentials are specified.
      security: []
      summary: Issues a token which can be used to access protected resources of the
        Pricemonitor API.
      tags:
      - account
  /api/v3/account/token/refresh:
    post:
      description: |
        An access token, a refresh token and a refresh token id are issued upon valid credentials.
        See [/api/v3/account/token/access](#/account/requestAccessToken) for more details.
        When an access token expired, it can be re-issued (or refreshed) using the refresh token and refresh token id, the one obtained upon
        valid credentials.
      operationId: refreshAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostRefreshAccessTokenRequestV3'
        description: Request body contains the refresh token
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccessTokenResponseV3ApiResponse'
          description: Access token response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Returned if:
            - The request body is not a valid JSON string.
            - The refresh token is invalid and/or expired.
      security: []
      summary: Refresh an access token using the refresh token.
      tags:
      - account
components:
  parameters:
    scheduleIdParam:
      description: ID of a monitoring schedule
      explode: false
      in: path
      name: scheduleId
      required: true
      schema:
        type: integer
      style: simple
    productIdParam:
      description: ID of the product in pricemonitor
      example: 862342
      explode: false
      in: path
      name: productId
      required: true
      schema:
        type: string
      style: simple
    contractIdParam:
      description: ID of the contract
      example: qbcxvb
      explode: false
      in: path
      name: contractId
      required: true
      schema:
        type: string
      style: simple
    startDate:
      description: Timestamp of start of time range, formatted as ISO Date (i.e. 2018-04-06T13:46:13Z)
        in UTC. If this value is omitted, the range is '{endDate} - 48 hours to {endDate}'
        if {endDate} is given or NOW - 48 hours if both are omitted.
      explode: true
      in: query
      name: startDate
      required: false
      schema:
        format: date-time
        type: string
      style: form
    endDate:
      description: Timestamp of end of time range, formatted as ISO Date (i.e. 2018-04-06T13:46:13Z)
        in UTC. If this value is omitted, the range is '{startDate} to {startDate}
        + 48 hours' if {startDate} is given or NOW - 48 hours if both are omitted.
      explode: true
      in: query
      name: endDate
      required: false
      schema:
        format: date-time
        type: string
      style: form
    vendorIdParam:
      description: ID of vendor shop mapping
      example: 1
      explode: false
      in: path
      name: vendorId
      required: true
      schema:
        format: int64
        type: integer
      style: simple
  schemas:
    LogMessages:
      example:
        messages:
        - severity: info
          component: shopware or magento
          contractId: qbcxvb
          source: some.domain.name
          message: Some useful message
        - severity: info
          component: shopware or magento
          contractId: qbcxvb
          source: some.domain.name
          message: Some useful message
        version: "1"
      properties:
        version:
          description: The version parameter should always be 1.
          enum:
          - "1"
          type: string
        messages:
          items:
            $ref: '#/components/schemas/LogMessage'
          type: array
    LogMessage:
      example:
        severity: info
        component: shopware or magento
        contractId: qbcxvb
        source: some.domain.name
        message: Some useful message
      properties:
        message:
          description: The information that needs to be published
          example: Some useful message
          type: string
        severity:
          description: Determines how severe is the information. The ENUM values are
            listed in the descreasing order of their priority.<br> 1. trace - gives
            more detailed information than any other level in the hierarchy<br> 2.
            debug - helps developer to debug application and is generally useful for
            providing support to the application developers<br> 3. info  - gives the
            progress and chosen state information and is generally useful for end
            user<br> 4. warn  - use of deprecated APIs, poor use of API, ‘almost’
            errors, other runtime situations that are undesirable or unexpected, but
            not necessarily “wrong”.<br> 5. error - gives information about a serious
            error which needs to be addressed and may result in unstable state<br>
            6. fatal - such errors result in premature termination and you don’t often
            get this error<br>
          enum:
          - trace
          - debug
          - info
          - warn
          - error
          - fatal
          example: info
          type: string
        component:
          description: The name of the integrated system.
          example: shopware or magento
          type: string
        source:
          description: Anything within the component that can be considered as an
            entity to further categorize the log message.
          example: some.domain.name
          type: string
        contractId:
          description: The ID of the contract
          example: qbcxvb
          type: string
      required:
      - component
      - message
      - severity
      - source
    GenericFilter:
      description: This is a placeholder for filter expressions. They are using advanced
        features and are not covered by openapi. If you need to use filter expressions
        please contract us.
      type: object
    ApiContract:
      example:
        contractType: contractType
        companyName: companyName
        contractId: contractId
        active: true
        contractName: contractName
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        active:
          type: boolean
        companyName:
          type: string
        contractId:
          type: string
        contractName:
          type: string
        contractType:
          type: string
        expirationDate:
          format: date-time
          type: string
      type: object
    ApiError:
      example:
        code: code
        message: message
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    ApiErrorResponse:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          type: array
      type: object
    EmptyApiResponse:
      example:
        data: '{}'
      properties:
        data:
          type: object
    ApiOffer:
      example:
        ignored: true
        gtin: 6
        productId: productId
        retrievalDate: 2000-01-23T04:56:07.000+00:00
        availability: true
        creationDate: 2000-01-23T04:56:07.000+00:00
        vendorName: vendorName
        positionByTotalPrice: 2
        productName: productName
        url: url
        minDeliveryTime: 5
        vendorDomainId: vendorDomainId
        deliveryCosts: 0.8008281904610115
        maxDeliveryTime: 1
        price: 7.061401241503109
        domain: domain
        contractId: contractId
        attributes:
        - name: name
          value: value
        - name: name
          value: value
        currency: currency
        positionByUnitPrice: 5
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/OfferAttribute'
          type: array
        availability:
          type: boolean
        creationDate:
          format: date-time
          type: string
        contractId:
          type: string
        currency:
          type: string
        deliveryCosts:
          format: double
          type: number
        domain:
          type: string
        gtin:
          format: int64
          type: integer
        ignored:
          type: boolean
        maxDeliveryTime:
          type: integer
        minDeliveryTime:
          type: integer
        positionByUnitPrice:
          type: integer
        positionByTotalPrice:
          type: integer
        price:
          format: double
          type: number
        productId:
          type: string
        productName:
          type: string
        retrievalDate:
          format: date-time
          type: string
        url:
          type: string
        vendorDomainId:
          type: string
        vendorName:
          type: string
      required:
      - contractId
      - creationDate
      - currency
      - deliveryCosts
      - domain
      - ignored
      - price
      - productId
      - productName
      - url
      - vendorName
    ApiProduct:
      example:
        customerProductId: customerProductId
        gtin: 9
        referencePrice: 4.145608029883936
        maxPriceBoundary: 3.616076749251911
        name: name
        id: id
        minPriceBoundary: 2.027123023002322
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        customerProductId:
          type: string
        gtin:
          format: int64
          type: integer
        id:
          type: string
        maxPriceBoundary:
          format: double
          type: number
        minPriceBoundary:
          format: double
          type: number
        name:
          type: string
        referencePrice:
          format: double
          type: number
      required:
      - id
      - name
      - referencePrice
      - tags
      type: object
    PostProduct:
      example:
        customerProductId: customerProductId
        gtin: 12345678910123
        referencePrice: 19.99
        maxPriceBoundary: 56.78
        name: name
        minPriceBoundary: 12.34
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        customerProductId:
          type: string
        gtin:
          example: 12345678910123
          format: int64
          type: integer
        minPriceBoundary:
          example: 12.34
          format: double
          type: number
        maxPriceBoundary:
          example: 56.78
          format: double
          type: number
        name:
          type: string
        referencePrice:
          example: 19.99
          format: double
          type: number
      required:
      - maxPriceBoundary
      - minPriceBoundary
      - name
      - referencePrice
      - tags
      type: object
    Callbacks:
      example:
        pricemonitorCompleted:
        - headers:
            key: headers
          bodyTemplate: bodyTemplate
          method: method
          name: name
          url: url
        - headers:
            key: headers
          bodyTemplate: bodyTemplate
          method: method
          name: name
          url: url
      properties:
        pricemonitorCompleted:
          items:
            $ref: '#/components/schemas/Callbacks_pricemonitorCompleted'
          type: array
      type: object
    CreateCompanyResponse:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    CreateContractRequest:
      example:
        contractType: contractType
        contractName: contractName
      properties:
        contractName:
          type: string
        contractType:
          type: string
      type: object
    DeletedItemsResponse:
      example:
        deleted: 0
      properties:
        deleted:
          description: Number of deleted orders
          type: integer
      type: object
    ExtendedTag:
      example:
        stringValue: stringValue
        booleanValue: true
        integerValue: 6
        doubleValue: 0.8008281904610115
        label: label
      properties:
        booleanValue:
          type: boolean
        doubleValue:
          format: double
          type: number
        integerValue:
          format: int32
          type: integer
        label:
          type: string
        stringValue:
          type: string
      required:
      - label
      - stringValue
    OfferFilterRequest:
      items:
        $ref: '#/components/schemas/AndOfferFilter'
      type: array
    ConstantOfferFilter:
      example:
        constant:
          value: true
      properties:
        constant:
          $ref: '#/components/schemas/ConstantOfferFilter_constant'
    AndOfferFilter:
      example:
        and:
          filters:
          - constant:
              value: true
          - constant:
              value: true
      properties:
        and:
          $ref: '#/components/schemas/AndOfferFilter_and'
    OfferFilterApiResponse:
      example:
        data:
        - and:
            filters:
            - constant:
                value: true
            - constant:
                value: true
        - and:
            filters:
            - constant:
                value: true
            - constant:
                value: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/AndOfferFilter'
          type: array
    PluginRegistration:
      example:
        metricsUrl: metricsUrl
        pluginId: pluginId
        shopSystem: shopSystem
      properties:
        pluginId:
          type: string
        shopSystem:
          type: string
        metricsUrl:
          type: string
    PluginRegistrationApiResponse:
      example:
        data:
          metricsUrl: metricsUrl
          pluginId: pluginId
          shopSystem: shopSystem
      properties:
        data:
          $ref: '#/components/schemas/PluginRegistration'
    PluginRegistrationEmptyApiResponse:
      example:
        data: '{}'
      properties:
        data:
          type: object
    PutPluginRegistrationRequest:
      allOf:
      - $ref: '#/components/schemas/PluginRegistration'
      - $ref: '#/components/schemas/PutPluginRegistrationRequest_allOf'
    Feed:
      example:
        deltaUrl: deltaUrl
        csvDecimalSeparator: csvDecimalSeparator
        contractId: contractId
        format: format
        name: name
        lastAccessed: 2000-01-23T04:56:07.000+00:00
        csvSeparator: csvSeparator
        id: id
        lastDeletion: 2000-01-23T04:56:07.000+00:00
        fields:
        - default: default
          name: name
          label: label
        - default: default
          name: name
          label: label
        version: 0
        url: url
      properties:
        contractId:
          type: string
        csvDecimalSeparator:
          type: string
        csvSeparator:
          type: string
        deltaUrl:
          type: string
        fields:
          items:
            $ref: '#/components/schemas/Feed_fields'
          type: array
        format:
          type: string
        id:
          type: string
        lastAccessed:
          format: date-time
          type: string
        lastDeletion:
          format: date-time
          type: string
        name:
          type: string
        url:
          type: string
        version:
          format: int64
          type: integer
      type: object
    GetOffersResponse:
      description: A collection of products
      example:
        next: next
        total: 5
        data:
        - offers:
          - availability: '{}'
            creationDate: 2000-01-23T04:56:07.000+00:00
            productName: productName
            url: url
            vendorIdOnDomain: vendorIdOnDomain
            approved: true
            minDeliveryTime: '{}'
            deliveryCosts: 6.027456183070403
            maxDeliveryTime: '{}'
            price: 1.4658129805029452
            vendor: vendor
            domain: domain
            attributes:
            - value: value
              key: key
            - value: value
              key: key
          - availability: '{}'
            creationDate: 2000-01-23T04:56:07.000+00:00
            productName: productName
            url: url
            vendorIdOnDomain: vendorIdOnDomain
            approved: true
            minDeliveryTime: '{}'
            deliveryCosts: 6.027456183070403
            maxDeliveryTime: '{}'
            price: 1.4658129805029452
            vendor: vendor
            domain: domain
            attributes:
            - value: value
              key: key
            - value: value
              key: key
          gtin: 0
          productId: productId
          tags:
          - value: value
            key: key
          - value: value
            key: key
        - offers:
          - availability: '{}'
            creationDate: 2000-01-23T04:56:07.000+00:00
            productName: productName
            url: url
            vendorIdOnDomain: vendorIdOnDomain
            approved: true
            minDeliveryTime: '{}'
            deliveryCosts: 6.027456183070403
            maxDeliveryTime: '{}'
            price: 1.4658129805029452
            vendor: vendor
            domain: domain
            attributes:
            - value: value
              key: key
            - value: value
              key: key
          - availability: '{}'
            creationDate: 2000-01-23T04:56:07.000+00:00
            productName: productName
            url: url
            vendorIdOnDomain: vendorIdOnDomain
            approved: true
            minDeliveryTime: '{}'
            deliveryCosts: 6.027456183070403
            maxDeliveryTime: '{}'
            price: 1.4658129805029452
            vendor: vendor
            domain: domain
            attributes:
            - value: value
              key: key
            - value: value
              key: key
          gtin: 0
          productId: productId
          tags:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        data:
          items:
            $ref: '#/components/schemas/GetOffersResponse_data'
          type: array
        next:
          type: string
        total:
          format: int64
          type: integer
      type: object
    GetPriceRecommendationsResponse:
      example:
        next: next
        priceRecommendations:
        - identifier: identifier
          gtin: 6
          recommendedPrice: 1.4658129805029452
          currentPrice: 0.8008281904610115
          currency: currency
        - identifier: identifier
          gtin: 6
          recommendedPrice: 1.4658129805029452
          currentPrice: 0.8008281904610115
          currency: currency
      properties:
        next:
          type: string
        priceRecommendations:
          items:
            $ref: '#/components/schemas/GetPriceRecommendationsResponse_priceRecommendations'
          type: array
      type: object
    OfferAttribute:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
    Pagination:
      example:
        limit: 0
        start: 6
      properties:
        limit:
          default: 100
          type: integer
        start:
          type: integer
      required:
      - start
    OffersQuerySortOrderV30:
      example:
        metric: TotalPrice
        order: asc
      properties:
        metric:
          enum:
          - TotalPrice
          - Price
          type: string
        order:
          enum:
          - asc
          type: string
      required:
      - metric
      - order
    PriceRecommendationQuerySortOrderV2:
      example:
        metric: productId
        order: asc
      properties:
        metric:
          enum:
          - productId
          - RelativePriceChangePercentage
          type: string
        order:
          enum:
          - asc
          - desc
          type: string
      required:
      - metric
      - order
    QueryProductsRequestV3:
      example:
        filter:
          comparison: StringInSequence
          left: '{}'
          right: '{}'
          type: ComparisonFilter
        pagination:
          limit: 0
          start: 6
      properties:
        filter:
          $ref: '#/components/schemas/ProductsFilter'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - pagination
    PostOfferStatisticsRequest:
      example:
        filter:
          comparison: StringInSequence
          left: '{}'
          right: '{}'
          type: ComparisonFilter
        ownShopNames:
          key:
          - ownShopNames
          - ownShopNames
        range:
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        includeDeliveryCosts: true
      properties:
        filter:
          $ref: '#/components/schemas/ProductsFilter'
        includeDeliveryCosts:
          type: boolean
        ownShopNames:
          additionalProperties:
            items:
              type: string
            type: array
          description: Providing own shops names enables calculating shop positions.
            The keys are domain names. The values are lists of shop names.
          type: object
        range:
          $ref: '#/components/schemas/TimeRange'
      required:
      - filter
      - includeDeliveryCosts
      - ownShopNames
      - range
    ProductsFilter:
      description: Specific filter for certain products
      example:
        comparison: StringInSequence
        left: '{}'
        right: '{}'
        type: ComparisonFilter
      properties:
        type:
          enum:
          - ComparisonFilter
          type: string
        left:
          properties:
            type:
              enum:
              - StringValueProvider
              type: string
            attributeName:
              enum:
              - productId
              type: string
        right:
          properties:
            type:
              enum:
              - SequenceOfStringConstantValueProvider
              type: string
            value:
              description: List of internal pricemonitor product ids
              items:
                type: string
              type: array
        comparison:
          enum:
          - StringInSequence
          type: string
      type: object
    PostOfferStatisticsApiResponse:
      example:
        data:
        - productId: productId
          statsByDomain:
            key:
              offerCount: 4
              minPrice: 9.99
              averagePrice: 14.97
              ownPosition:
                price: 12.49
                position: 2
        - productId: productId
          statsByDomain:
            key:
              offerCount: 4
              minPrice: 9.99
              averagePrice: 14.97
              ownPosition:
                price: 12.49
                position: 2
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProductOfferStatistics'
          type: array
      type: object
    ProductOfferStatistics:
      example:
        productId: productId
        statsByDomain:
          key:
            offerCount: 4
            minPrice: 9.99
            averagePrice: 14.97
            ownPosition:
              price: 12.49
              position: 2
      properties:
        productId:
          description: The internal product id of the pricemonitor
          type: string
        statsByDomain:
          additionalProperties:
            $ref: '#/components/schemas/OfferStatistics'
          description: The offer statistics are grouped by domain.
          type: object
      type: object
    OfferStatistics:
      example:
        offerCount: 4
        minPrice: 9.99
        averagePrice: 14.97
        ownPosition:
          price: 12.49
          position: 2
      properties:
        averagePrice:
          description: The average price of the offers
          format: double
          type: number
        minPrice:
          description: The lowest price of the offers
          format: double
          type: number
        offerCount:
          description: The number of the found offers
          type: integer
        ownPosition:
          $ref: '#/components/schemas/ShopRank'
      required:
      - averagePrice
      - minPrice
      - offerCount
      type: object
    Product:
      description: A product defined by its attributes
      example:
        gtin: 0
        referencePrice: 5.962133916683182
        maxPriceBoundary: 6.027456183070403
        productId: productId
        name: name
        minPriceBoundary: 1.4658129805029452
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        gtin:
          format: int64
          type: integer
        maxPriceBoundary:
          format: double
          type: number
        minPriceBoundary:
          format: double
          type: number
        name:
          type: string
        productId:
          type: string
        referencePrice:
          format: double
          type: number
      type: object
    ProductAndOffers:
      properties:
        offers:
          items:
            $ref: '#/components/schemas/ApiOffer'
          type: array
        product:
          $ref: '#/components/schemas/ApiProduct'
      type: object
    ProductOffersApiQuery:
      example:
        filter: '{}'
        pagination:
          limit: 0
          start: 6
        range:
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        sort:
          metric: TotalPrice
          order: asc
      properties:
        filter:
          description: This is a placeholder for filter expressions. They are using
            advanced features and are not covered by openapi. If you need to use filter
            expressions please contract us.
          type: object
        pagination:
          $ref: '#/components/schemas/Pagination'
        range:
          $ref: '#/components/schemas/TimeRange'
        sort:
          $ref: '#/components/schemas/OffersQuerySortOrderV30'
      required:
      - pagination
      - range
    PriceRecommendationApiQueryV2:
      example:
        filter: '{}'
        pagination:
          limit: 0
          start: 6
        range:
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        sort:
          metric: productId
          order: asc
      properties:
        filter:
          description: This is a placeholder for filter expressions. They are using
            advanced features and are not covered by openapi. If you need to use filter
            expressions please contract us.
          type: object
        pagination:
          $ref: '#/components/schemas/Pagination'
        range:
          $ref: '#/components/schemas/TimeRange'
        sort:
          $ref: '#/components/schemas/PriceRecommendationQuerySortOrderV2'
      required:
      - pagination
      - range
    DeleteProductsApiResponse:
      example:
        data:
          deleted: 0
      properties:
        data:
          $ref: '#/components/schemas/DeleteProductsApiResponse_data'
    PostProductsRequest:
      description: Request body which contains products
      example:
        identifyingAttributes:
        - null
        - null
        version: "2"
        products:
        - customerProductId: customerProductId
          gtin: 12345678910123
          referencePrice: 19.99
          maxPriceBoundary: 56.78
          name: name
          minPriceBoundary: 12.34
          tags:
          - value: value
            key: key
          - value: value
            key: key
        - customerProductId: customerProductId
          gtin: 12345678910123
          referencePrice: 19.99
          maxPriceBoundary: 56.78
          name: name
          minPriceBoundary: 12.34
          tags:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        products:
          description: Products which should be added to the pricemonitor
          items:
            $ref: '#/components/schemas/PostProduct'
          type: array
        version:
          description: Version of the request body. Only version 2 is supported.
          enum:
          - "2"
          type: string
        identifyingAttributes:
          description: Non-empty list of product attributes which identify your products
            uniquely
          items:
            $ref: '#/components/schemas/PostProductsIdentifyingAttribute'
          type: array
      required:
      - identifyingAttributes
      - products
      - version
      type: object
    PostProductsIdentifyingAttribute:
      description: Additionally you can use your product tags
      enum:
      - customerProductId
      - gtin
      - name
      type: string
    BulkedPostProductsApiResponse:
      example:
        data:
        - data:
            productId: productId
          errors:
          - code: code
            message: message
          - code: code
            message: message
        - data:
            productId: productId
          errors:
          - code: code
            message: message
          - code: code
            message: message
      properties:
        data:
          items:
            $ref: '#/components/schemas/PostProductsApiResponse'
          type: array
      type: object
    PostProductsApiResponse:
      example:
        data:
          productId: productId
        errors:
        - code: code
          message: message
        - code: code
          message: message
      properties:
        data:
          $ref: '#/components/schemas/PostProductsApiResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          type: array
      type: object
    ShopRank:
      properties:
        position:
          type: integer
        price:
          format: double
          type: number
      required:
      - position
      - price
    Tag:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    Task:
      example:
        id: id
        url: url
      properties:
        id:
          type: string
        url:
          type: string
    TaskIdAndUrl:
      properties:
        id:
          type: string
        url:
          type: string
      type: object
    TaskWithContractResourceApiResponse:
      example:
        taskType: taskType
        failures:
        - messageId: messageId
          attributes:
            key: '{}'
        - messageId: messageId
          attributes:
            key: '{}'
        data:
        - data
        - data
        contractId: contractId
        finishDate: 2000-01-23T04:56:07.000+00:00
        state: state
        creationDate: 2000-01-23T04:56:07.000+00:00
        parentId: parentId
        startDate: 2000-01-23T04:56:07.000+00:00
        taskId: taskId
      properties:
        contractId:
          type: string
        creationDate:
          format: date-time
          type: string
        data:
          items:
            type: string
          type: array
        failures:
          items:
            $ref: '#/components/schemas/TaskWithContractResourceApiResponse_failures'
          type: array
        finishDate:
          format: date-time
          type: string
        parentId:
          type: string
        startDate:
          format: date-time
          type: string
        state:
          type: string
        taskId:
          type: string
        taskType:
          type: string
      type: object
    TimeRange:
      example:
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        end:
          format: date-time
          type: string
        start:
          format: date-time
          type: string
      required:
      - end
      - start
    UserSignupRequest:
      example:
        name: name
        email: email
      properties:
        email:
          type: string
        name:
          type: string
      type: object
    GenericTask:
      description: A basic task type. Additional fields can be contained depending
        on specific task type.
      example:
        result: '{}'
        taskType: taskType
        failures:
        - '{}'
        - '{}'
        failureCode: failureCode
        data: '{}'
        finishDate: 2000-01-23T04:56:07.000+00:00
        state: pending
        creationDate: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23T04:56:07.000+00:00
        taskId: taskId
        parentId: parentId
      properties:
        creationDate:
          description: The creation date of this task
          format: date-time
          type: string
        startDate:
          description: The timestamp of when processing of this task was started
          format: date-time
          type: string
        finishDate:
          description: The timestamp of when processing of this task finished
          format: date-time
          type: string
        state:
          description: The current processing state of this task
          enum:
          - pending
          - executing
          - succeeded
          - failed
          type: string
        failures:
          description: Schemaless. If any errors occured during processing, these
            will be contained here.
          items:
            type: object
          type: array
        taskId:
          description: The unique ID of this task
          type: string
        parentId:
          description: The parents unique taskId, if any parent exists
          type: string
        taskType:
          description: The identifier string for the type of task
          type: string
        data:
          description: Schemaless. Contains the payload of the task given during task
            creation.
          type: object
        result:
          description: Schemaless. Contains the processing result for this task. Type
            is dependent on task type.
          type: object
        failureCode:
          description: If any error occured the error code for this error will be
            contained here.
          type: string
      required:
      - creationDate
      - state
      - taskId
      - taskType
    GenericTaskWithUrl:
      allOf:
      - $ref: '#/components/schemas/GenericTask'
      - $ref: '#/components/schemas/GenericTaskWithUrl_allOf'
    UpdateTaskRequestV2:
      allOf:
      - $ref: '#/components/schemas/GenericTask'
      - $ref: '#/components/schemas/UpdateTaskRequestV2_allOf'
    VersionApiResponse:
      additionalProperties: false
      example:
        data:
          version: version
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApplicationVersion'
      required:
      - data
      type: object
    CreateCompanyApiResponse:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
      properties:
        data:
          $ref: '#/components/schemas/CreateCompanyResponse'
      required:
      - data
      type: object
    GetCompanyContractsApiResponse:
      additionalProperties: false
      example:
        data:
        - contractType: contractType
          companyName: companyName
          contractId: contractId
          active: true
          contractName: contractName
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - contractType: contractType
          companyName: companyName
          contractId: contractId
          active: true
          contractName: contractName
          expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApiContract'
          type: array
      required:
      - data
      type: object
    AddCompanyContractApiResponse:
      additionalProperties: false
      example:
        data:
          contractType: contractType
          companyName: companyName
          contractId: contractId
          active: true
          contractName: contractName
          expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ApiContract'
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.PostCustomerOrdersRequestV2:
      additionalProperties: false
      description: Request body containing bulked orders
      properties:
        orders:
          description: Orders in bulk
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderV2'
          type: array
        version:
          description: Version of orders
          type: string
      required:
      - orders
      - version
      type: object
    com.patagona.pricemonitor.share.api.CustomerOrderV2:
      additionalProperties: false
      description: An order placed in a shop.
      example:
        referrer: referrer
        productMappings:
        - source: source
          target: target
        - source: source
          target: target
        orderId: orderId
        totalPrice: 5.637376656633329
        origin: origin
        currency: currency
        creationDate: 2000-01-23T04:56:07.000+00:00
        items:
        - unitPrice: 6.027456183070403
          itemId: itemId
          quantity: 1
          taxPercentage: 5.962133916683182
        - unitPrice: 6.027456183070403
          itemId: itemId
          quantity: 1
          taxPercentage: 5.962133916683182
        shippingCosts: 0.8008281904610115
      properties:
        shippingCosts:
          description: Shipping costs of the order
          type: number
        orderId:
          description: Unique id of an order. It must mean unique in the shop, not
            in the pricemonitor.
          type: string
        items:
          description: List of bought items
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderItemV2'
          type: array
        totalPrice:
          description: Total price of the order
          type: number
        productMappings:
          description: A relation from the products in your system to the pricemonitor.
            Currently it must contain exactly one element.
          items:
            $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_CustomerOrderV2_productMappings'
          type: array
        origin:
          description: Origin of an order, e.g. the online shop were the order is
            placed
          type: string
        creationDate:
          description: Date when the order is created in UTC
          format: date-time
          type: string
        currency:
          description: 'Currency used in the order. ISO 4217 Currency Codes: e.g.
            EUR'
          type: string
        referrer:
          description: Referrer of an order. Third party (e.g. marketplace) which
            referred the customer to the online shop
          type: string
      required:
      - creationDate
      - currency
      - items
      - orderId
      - origin
      - productMappings
      - shippingCosts
      - totalPrice
      type: object
    com.patagona.pricemonitor.share.api.CustomerOrderItemV2:
      additionalProperties: false
      description: A ordered item
      example:
        unitPrice: 6.027456183070403
        itemId: itemId
        quantity: 1
        taxPercentage: 5.962133916683182
      properties:
        itemId:
          description: Id of the item in the customer's system. It is expected to
            be the customerProductId. It should be guaranteed that the itemId can
            be always assigned to only one product or variant.
          type: string
        unitPrice:
          description: Unit price of an item
          type: number
        quantity:
          description: How often the item was purchased
          type: integer
        taxPercentage:
          description: Tax percentage applied on unit price, e.g. 20 for 20% tax
          type: number
      required:
      - itemId
      - quantity
      - taxPercentage
      - unitPrice
      type: object
    PostOrdersBulkApiResponse:
      example:
        data:
        - data:
            orders:
            - referrer: referrer
              productMappings:
              - source: source
                target: target
              - source: source
                target: target
              orderId: orderId
              totalPrice: 5.637376656633329
              origin: origin
              currency: currency
              creationDate: 2000-01-23T04:56:07.000+00:00
              items:
              - unitPrice: 6.027456183070403
                itemId: itemId
                quantity: 1
                taxPercentage: 5.962133916683182
              - unitPrice: 6.027456183070403
                itemId: itemId
                quantity: 1
                taxPercentage: 5.962133916683182
              shippingCosts: 0.8008281904610115
            - referrer: referrer
              productMappings:
              - source: source
                target: target
              - source: source
                target: target
              orderId: orderId
              totalPrice: 5.637376656633329
              origin: origin
              currency: currency
              creationDate: 2000-01-23T04:56:07.000+00:00
              items:
              - unitPrice: 6.027456183070403
                itemId: itemId
                quantity: 1
                taxPercentage: 5.962133916683182
              - unitPrice: 6.027456183070403
                itemId: itemId
                quantity: 1
                taxPercentage: 5.962133916683182
              shippingCosts: 0.8008281904610115
            version: version
          errors:
          - code: code
            message: message
          - code: code
            message: message
        - data:
            orders:
            - referrer: referrer
              productMappings:
              - source: source
                target: target
              - source: source
                target: target
              orderId: orderId
              totalPrice: 5.637376656633329
              origin: origin
              currency: currency
              creationDate: 2000-01-23T04:56:07.000+00:00
              items:
              - unitPrice: 6.027456183070403
                itemId: itemId
                quantity: 1
                taxPercentage: 5.962133916683182
              - unitPrice: 6.027456183070403
                itemId: itemId
                quantity: 1
                taxPercentage: 5.962133916683182
              shippingCosts: 0.8008281904610115
            - referrer: referrer
              productMappings:
              - source: source
                target: target
              - source: source
                target: target
              orderId: orderId
              totalPrice: 5.637376656633329
              origin: origin
              currency: currency
              creationDate: 2000-01-23T04:56:07.000+00:00
              items:
              - unitPrice: 6.027456183070403
                itemId: itemId
                quantity: 1
                taxPercentage: 5.962133916683182
              - unitPrice: 6.027456183070403
                itemId: itemId
                quantity: 1
                taxPercentage: 5.962133916683182
              shippingCosts: 0.8008281904610115
            version: version
          errors:
          - code: code
            message: message
          - code: code
            message: message
      properties:
        data:
          items:
            $ref: '#/components/schemas/PostOrdersBulkApiResponse_data_1'
          type: array
      type: object
    GetPriceRecommendationApiResponse:
      additionalProperties: false
      example:
        data:
        - relativePriceChangePercentage: 3.616076749251911
          customerProductId: customerProductId
          gtin: 9.301444243932576
          productId: productId
          originalTags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          oldPrice: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          originalMaxPriceBoundary: 4.145608029883936
          newPosition: 2
          originalMinPriceBoundary: 7.386281948385884
          oldDeliveryCosts: 1.4658129805029452
          deliveryCosts: 6.027456183070403
          price: 2.3021358869347655
          relevantDomain: relevantDomain
          currency: currency
          oldPosition: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        - relativePriceChangePercentage: 3.616076749251911
          customerProductId: customerProductId
          gtin: 9.301444243932576
          productId: productId
          originalTags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          oldPrice: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          originalMaxPriceBoundary: 4.145608029883936
          newPosition: 2
          originalMinPriceBoundary: 7.386281948385884
          oldDeliveryCosts: 1.4658129805029452
          deliveryCosts: 6.027456183070403
          price: 2.3021358869347655
          relevantDomain: relevantDomain
          currency: currency
          oldPosition: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        meta:
          totalSize: 1
          start: 1
          limit: 1
          nextUrl: nextUrl
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiPriceRecommendation'
          type: array
        meta:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PaginationResponse'
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.UserInfo:
      additionalProperties: false
      description: This case class is used for serializing user-information for the
        account-endpoints
      example:
        companies:
        - name: name
          id: 0.8008281904610115
          contracts:
          - name: name
            active: true
            id: 6.027456183070403
            type: type
            sid: sid
          - name: name
            active: true
            id: 6.027456183070403
            type: type
            sid: sid
        - name: name
          id: 0.8008281904610115
          contracts:
          - name: name
            active: true
            id: 6.027456183070403
            type: type
            sid: sid
          - name: name
            active: true
            id: 6.027456183070403
            type: type
            sid: sid
        roles:
        - roles
        - roles
        name: name
        lastActiveDate: lastActiveDate
        id: 1.4658129805029452
        email: email
      properties:
        name:
          description: The user's name
          type: string
        companies:
          description: The companies of the user
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.UserCompany'
          type: array
        lastActiveDate:
          description: The last time the user was active
          type: string
        email:
          description: The user's mail-address
          type: string
        id:
          description: The id of the user
          type: number
        roles:
          description: The user's role
          items:
            type: string
          type: array
      required:
      - companies
      - email
      - id
      - lastActiveDate
      - name
      - roles
      type: object
    com.patagona.pricemonitor.share.api.UserCompany:
      additionalProperties: false
      description: This case class is used for serializing company-information for
        the account-endpoints
      example:
        name: name
        id: 0.8008281904610115
        contracts:
        - name: name
          active: true
          id: 6.027456183070403
          type: type
          sid: sid
        - name: name
          active: true
          id: 6.027456183070403
          type: type
          sid: sid
      properties:
        id:
          description: The company's id
          type: number
        name:
          description: The company's name
          type: string
        contracts:
          description: The company's contracts
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.UserContract'
          type: array
      required:
      - contracts
      - id
      - name
      type: object
    com.patagona.pricemonitor.share.api.UserContract:
      additionalProperties: false
      description: This case class is used for serializing contract-information for
        the account-endpoints
      example:
        name: name
        active: true
        id: 6.027456183070403
        type: type
        sid: sid
      properties:
        name:
          description: The contract's name
          type: string
        id:
          description: The contract's id
          type: number
        type:
          type: string
        sid:
          description: The contract's string-id
          type: string
        active:
          description: The contract status
          type: boolean
      required:
      - active
      - id
      - name
      - sid
      - type
      type: object
    GetOffersApiResponse:
      additionalProperties: false
      example:
        data:
        - offers:
          - ignored: true
            gtin: 6
            productId: productId
            retrievalDate: 2000-01-23T04:56:07.000+00:00
            availability: true
            creationDate: 2000-01-23T04:56:07.000+00:00
            vendorName: vendorName
            positionByTotalPrice: 2
            productName: productName
            url: url
            minDeliveryTime: 5
            vendorDomainId: vendorDomainId
            deliveryCosts: 0.8008281904610115
            maxDeliveryTime: 1
            price: 7.061401241503109
            domain: domain
            contractId: contractId
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            currency: currency
            positionByUnitPrice: 5
          - ignored: true
            gtin: 6
            productId: productId
            retrievalDate: 2000-01-23T04:56:07.000+00:00
            availability: true
            creationDate: 2000-01-23T04:56:07.000+00:00
            vendorName: vendorName
            positionByTotalPrice: 2
            productName: productName
            url: url
            minDeliveryTime: 5
            vendorDomainId: vendorDomainId
            deliveryCosts: 0.8008281904610115
            maxDeliveryTime: 1
            price: 7.061401241503109
            domain: domain
            contractId: contractId
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            currency: currency
            positionByUnitPrice: 5
          product:
            customerProductId: customerProductId
            gtin: 9
            referencePrice: 4.145608029883936
            maxPriceBoundary: 3.616076749251911
            name: name
            id: id
            minPriceBoundary: 2.027123023002322
            tags:
            - value: value
              key: key
            - value: value
              key: key
        - offers:
          - ignored: true
            gtin: 6
            productId: productId
            retrievalDate: 2000-01-23T04:56:07.000+00:00
            availability: true
            creationDate: 2000-01-23T04:56:07.000+00:00
            vendorName: vendorName
            positionByTotalPrice: 2
            productName: productName
            url: url
            minDeliveryTime: 5
            vendorDomainId: vendorDomainId
            deliveryCosts: 0.8008281904610115
            maxDeliveryTime: 1
            price: 7.061401241503109
            domain: domain
            contractId: contractId
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            currency: currency
            positionByUnitPrice: 5
          - ignored: true
            gtin: 6
            productId: productId
            retrievalDate: 2000-01-23T04:56:07.000+00:00
            availability: true
            creationDate: 2000-01-23T04:56:07.000+00:00
            vendorName: vendorName
            positionByTotalPrice: 2
            productName: productName
            url: url
            minDeliveryTime: 5
            vendorDomainId: vendorDomainId
            deliveryCosts: 0.8008281904610115
            maxDeliveryTime: 1
            price: 7.061401241503109
            domain: domain
            contractId: contractId
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            currency: currency
            positionByUnitPrice: 5
          product:
            customerProductId: customerProductId
            gtin: 9
            referencePrice: 4.145608029883936
            maxPriceBoundary: 3.616076749251911
            name: name
            id: id
            minPriceBoundary: 2.027123023002322
            tags:
            - value: value
              key: key
            - value: value
              key: key
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProductAndOffers_2'
          type: array
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.QueryOffersOfShopRequestV3:
      additionalProperties: false
      properties:
        shop:
          type: string
        endDate:
          format: date-time
          type: string
        start:
          type: integer
        limit:
          type: integer
        startDate:
          format: date-time
          type: string
      required:
      - endDate
      - limit
      - shop
      - start
      - startDate
      type: object
    QueryOffersOfShopV3ApiResponse:
      additionalProperties: false
      example:
        data:
        - ignored: true
          gtin: 2.3021358869347655
          productId: productId
          retrievalDate: 2000-01-23T04:56:07.000+00:00
          availability: true
          vendorName: vendorName
          creationDate: 2000-01-23T04:56:07.000+00:00
          positionByTotalPrice: 0
          url: url
          productName: productName
          minDeliveryTime: 5
          vendorDomainId: vendorDomainId
          deliveryCosts: 6.027456183070403
          maxDeliveryTime: 1
          price: 5.962133916683182
          domain: domain
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          currency: currency
          positionByUnitPrice: 7
        - ignored: true
          gtin: 2.3021358869347655
          productId: productId
          retrievalDate: 2000-01-23T04:56:07.000+00:00
          availability: true
          vendorName: vendorName
          creationDate: 2000-01-23T04:56:07.000+00:00
          positionByTotalPrice: 0
          url: url
          productName: productName
          minDeliveryTime: 5
          vendorDomainId: vendorDomainId
          deliveryCosts: 6.027456183070403
          maxDeliveryTime: 1
          price: 5.962133916683182
          domain: domain
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          currency: currency
          positionByUnitPrice: 7
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer'
          type: array
      required:
      - data
      type: object
    GetOfferStatisticsV3ApiResponse:
      additionalProperties: false
      example:
        data:
        - productId: productId
          statsByDomain:
          - offerCount: 0
            domain: domain
            minPrice: 6.027456183070403
            averagePrice: 1.4658129805029452
          - offerCount: 0
            domain: domain
            minPrice: 6.027456183070403
            averagePrice: 1.4658129805029452
        - productId: productId
          statsByDomain:
          - offerCount: 0
            domain: domain
            minPrice: 6.027456183070403
            averagePrice: 1.4658129805029452
          - offerCount: 0
            domain: domain
            minPrice: 6.027456183070403
            averagePrice: 1.4658129805029452
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.GetOfferStatisticsV3'
          type: array
      required:
      - data
      type: object
    PutProductsApiResponse:
      additionalProperties: false
      example:
        data:
          id: id
          url: url
      properties:
        data:
          $ref: '#/components/schemas/Task'
      required:
      - data
      type: object
    QueryOffersApiResponse:
      additionalProperties: false
      example:
        data:
        - ignored: true
          gtin: 6
          productId: productId
          retrievalDate: 2000-01-23T04:56:07.000+00:00
          availability: true
          creationDate: 2000-01-23T04:56:07.000+00:00
          vendorName: vendorName
          positionByTotalPrice: 2
          productName: productName
          url: url
          minDeliveryTime: 5
          vendorDomainId: vendorDomainId
          deliveryCosts: 0.8008281904610115
          maxDeliveryTime: 1
          price: 7.061401241503109
          domain: domain
          contractId: contractId
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          currency: currency
          positionByUnitPrice: 5
        - ignored: true
          gtin: 6
          productId: productId
          retrievalDate: 2000-01-23T04:56:07.000+00:00
          availability: true
          creationDate: 2000-01-23T04:56:07.000+00:00
          vendorName: vendorName
          positionByTotalPrice: 2
          productName: productName
          url: url
          minDeliveryTime: 5
          vendorDomainId: vendorDomainId
          deliveryCosts: 0.8008281904610115
          maxDeliveryTime: 1
          price: 7.061401241503109
          domain: domain
          contractId: contractId
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          currency: currency
          positionByUnitPrice: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApiOffer'
          type: array
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.PriceDumpingStatsRequest:
      additionalProperties: false
      description: A request for price dumping statistics for the given shops.
      properties:
        startDate:
          description: Start of the timerange in which we search for price dumping
            events
          format: date-time
          type: string
        endDate:
          description: End of the timerange in which we search for price dumping events
          format: date-time
          type: string
        includeDeliveryCosts:
          description: Indicates if we consider price + delivery cost to detect price
            changes or only price
          type: boolean
        shops:
          description: Specifies for which shops we detect price dumping events
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ShopV3'
          type: array
          uniqueItems: true
      required:
      - endDate
      - includeDeliveryCosts
      - shops
      - startDate
      type: object
    com.patagona.pricemonitor.share.api.ShopV3:
      additionalProperties: false
      description: A shop, in terms of online shop, sells his products on a certain
        domain.
      example:
        domain: domain
        name: name
      properties:
        domain:
          description: Domain name
          type: string
        name:
          description: Shop name on given domain.
          type: string
      required:
      - domain
      - name
      type: object
    QueryPriceDumpingStatsApiResponse:
      additionalProperties: false
      example:
        data:
          statsOverAllomains:
            potentiallyInitiatedPriceDumpings: 6
            uniqueProductInitiatedPriceDumpings: 1
            uniqueProductPotentiallyInitiatedPriceDumpings: 5
            initiatedPriceDumpings: 0
          statsPerDomain:
          - domain: domain
            productPriceDumpingStats:
              potentiallyInitiatedPriceDumpings: 6
              uniqueProductInitiatedPriceDumpings: 1
              uniqueProductPotentiallyInitiatedPriceDumpings: 5
              initiatedPriceDumpings: 0
          - domain: domain
            productPriceDumpingStats:
              potentiallyInitiatedPriceDumpings: 6
              uniqueProductInitiatedPriceDumpings: 1
              uniqueProductPotentiallyInitiatedPriceDumpings: 5
              initiatedPriceDumpings: 0
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PriceDumpingStatsResponse'
      required:
      - data
      type: object
    DeleteOrdersApiResponse:
      additionalProperties: false
      example:
        data:
          deleted: 0
      properties:
        data:
          $ref: '#/components/schemas/DeletedItemsResponse'
      required:
      - data
      type: object
    GetExtendedTagsApiResponse:
      additionalProperties: false
      example:
        data:
        - stringValue: stringValue
          booleanValue: true
          integerValue: 6
          doubleValue: 0.8008281904610115
          label: label
        - stringValue: stringValue
          booleanValue: true
          integerValue: 6
          doubleValue: 0.8008281904610115
          label: label
      properties:
        data:
          items:
            $ref: '#/components/schemas/ExtendedTag'
          type: array
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.AdminCompanyV2:
      additionalProperties: false
      description: A company with its contracts used for data representation in the
        admin-endpoint
      example:
        name: name
        id: 0.8008281904610115
        contracts:
        - description: description
          active: true
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - description: description
          active: true
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The id of the company
          type: number
        name:
          description: The company's name
          type: string
        contracts:
          description: A list of the comapny's contracts
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.AdminContractV2'
          type: array
      required:
      - contracts
      - id
      - name
      type: object
    com.patagona.pricemonitor.share.api.AdminContractV2:
      additionalProperties: false
      description: A contract used for data representation in the admin-endpoint
      example:
        description: description
        active: true
        id: id
        creationDate: 2000-01-23T04:56:07.000+00:00
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        expirationDate:
          description: The date and time the contract expires
          format: date-time
          type: string
        description:
          description: The contract's description
          type: string
        id:
          description: The id of the contract
          type: string
        creationDate:
          description: The date and time the contract was created
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ContractType'
        active:
          description: The contract-status
          type: boolean
      required:
      - active
      - creationDate
      - description
      - id
      - type
      type: object
    com.patagona.pricemonitor.share.api.ContractType:
      enum:
      - Pricemonitor for manufacturers
      - Pricemonitor for resellers
      type: string
    com.patagona.pricemonitor.share.api.GetContractSettingsResponseV1:
      additionalProperties: false
      example:
        portals:
        - portals
        - portals
        msrpTag: msrpTag
        active: true
        type: type
        monitoringPriority: 6
        sid: sid
        features:
          disabled:
          - disabled
          - disabled
          enabled:
          - enabled
          - enabled
        mapTag: mapTag
        name: name
        company: company
        currency: currency
        includeDeliveryCosts: true
        id: 0.8008281904610115
        imageTag: imageTag
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          type: string
        expirationDate:
          format: date-time
          type: string
        portals:
          items:
            type: string
          type: array
        includeDeliveryCosts:
          type: boolean
        features:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ContractFeatures'
        imageTag:
          description: The name of the tag that contains the product image url
          type: string
        company:
          type: string
        id:
          type: number
        monitoringPriority:
          description: Priority of the contract in the monitoring queue
          type: integer
        currency:
          description: The contract's currency as three letter code
          type: string
        type:
          type: string
        sid:
          type: string
        msrpTag:
          description: The name of the tag that contains the manufacturers suggested
            retail price
          type: string
        mapTag:
          description: The name of the tag that contains the minimum advertised price
          type: string
        active:
          type: boolean
      required:
      - active
      - company
      - currency
      - features
      - id
      - includeDeliveryCosts
      - monitoringPriority
      - name
      - portals
      - sid
      - type
      type: object
    com.patagona.pricemonitor.share.api.ContractFeatures:
      additionalProperties: false
      example:
        disabled:
        - disabled
        - disabled
        enabled:
        - enabled
        - enabled
      properties:
        disabled:
          items:
            type: string
          type: array
        enabled:
          items:
            type: string
          type: array
      required:
      - disabled
      - enabled
      type: object
    com.patagona.pricemonitor.share.api.PutAdminContractSettingsBody:
      additionalProperties: false
      example:
        features:
          disabled:
          - disabled
          - disabled
          enabled:
          - enabled
          - enabled
        portals:
        - portals
        - portals
        name: name
        active: true
        id: 0.8008281904610115
        type: type
        monitoringPriority: 6
        expirationDate: 2000-01-23T04:56:07.000+00:00
        sid: sid
      properties:
        name:
          type: string
        expirationDate:
          format: date-time
          type: string
        portals:
          items:
            type: string
          type: array
        features:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ContractFeatures'
        id:
          type: number
        monitoringPriority:
          type: integer
        type:
          type: string
        sid:
          type: string
        active:
          type: boolean
      required:
      - active
      - features
      - id
      - name
      - portals
      - sid
      - type
      type: object
    com.patagona.pricemonitor.share.api.ContractStats:
      additionalProperties: false
      description: Contract statistics
      example:
        offerCount: 5.962133916683182
        vendorCount: 5.637376656633329
        portalCount: 6
        productCount: 0
        allOfferCount: 1.4658129805029452
      properties:
        productCount:
          description: The count of currently monitored products
          type: integer
        portalCount:
          description: The number of actively monitored domains
          type: integer
        allOfferCount:
          description: The number of offers found for the monitored products without
            any filters applied
          type: number
        offerCount:
          description: The number of offers found for the monitored products after
            filtering
          type: number
        vendorCount:
          description: The count of vendors found for the monitored products
          type: number
      required:
      - allOfferCount
      - offerCount
      - portalCount
      - productCount
      - vendorCount
      type: object
    com.patagona.pricemonitor.share.api.PricesByDayByProductIdRequestV2:
      additionalProperties: false
      description: A request for all known prices for a given day & product ID. Provides
        the option to filter the results using the `offerSelectors`.
      properties:
        day:
          description: The day for which to return the prices in ISO 8601
          format: date-time
          type: string
        offers:
          description: A list of `OfferSelector`s that allows filtering down the results.
            The selectors are combined using an OR operation. The list must contain
            at least one element.
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.OfferSelector'
          type: array
      required:
      - day
      - offers
      type: object
    com.patagona.pricemonitor.share.api.OfferSelector:
      additionalProperties: false
      description: Whitelist entry for offers based on different attributes.
      properties:
        domain:
          description: The domain
          type: string
        vendorName:
          description: The vendor name
          type: string
        productName:
          description: The product name
          type: string
      required:
      - domain
      - productName
      - vendorName
      type: object
    com.patagona.pricemonitor.share.api.PricesByDayByProductIdResponseV2:
      additionalProperties: false
      description: Contains all known prices for a given day & product ID for one
        domain & vendor combination.
      example:
        domain: domain
        vendorName: vendorName
        prices:
        - deliveryCosts: 6.027456183070403
          price: 0.8008281904610115
          timestamp: 2000-01-23T04:56:07.000+00:00
        - deliveryCosts: 6.027456183070403
          price: 0.8008281904610115
          timestamp: 2000-01-23T04:56:07.000+00:00
        productName: productName
      properties:
        domain:
          description: The domain these prices were found on
          type: string
        vendorName:
          description: The name of the vendor these prices were found for
          type: string
        productName:
          description: The name of the product the vendor is using
          type: string
        prices:
          description: A list of `PricesByDayByProductIdResponsePricePointV2` elements
            containing the prices
          items:
            $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_PricesByDayByProductIdResponseV2_prices'
          type: array
      required:
      - domain
      - prices
      - productName
      - vendorName
      type: object
    com.patagona.pricemonitor.share.api.TagFilteredVendorsRequest:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            type: string
          description: A list of key value pairs of product tags
          type: object
      type: object
    com.patagona.pricemonitor.share.api.PostVendorsByDomainResponse:
      additionalProperties: false
      example:
        next: next
        data:
        - minPriceCount: 5.637376656633329
          productsUnderReferencePrice: 1.4658129805029452
          portalName: portalName
          resellerName: resellerName
          averagePosition: 6.027456183070403
          averageDiscount: 0.8008281904610115
          productsCount: 5.962133916683182
        - minPriceCount: 5.637376656633329
          productsUnderReferencePrice: 1.4658129805029452
          portalName: portalName
          resellerName: resellerName
          averagePosition: 6.027456183070403
          averageDiscount: 0.8008281904610115
          productsCount: 5.962133916683182
        totalCount: 2
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ResellerSummaryByDomain'
          type: array
        next:
          type: string
        totalCount:
          type: integer
      required:
      - data
      - totalCount
      type: object
    com.patagona.pricemonitor.share.api.ResellerSummaryByDomain:
      additionalProperties: false
      example:
        minPriceCount: 5.637376656633329
        productsUnderReferencePrice: 1.4658129805029452
        portalName: portalName
        resellerName: resellerName
        averagePosition: 6.027456183070403
        averageDiscount: 0.8008281904610115
        productsCount: 5.962133916683182
      properties:
        averageDiscount:
          type: number
        averagePosition:
          type: number
        productsUnderReferencePrice:
          type: number
        portalName:
          type: string
        productsCount:
          type: number
        resellerName:
          type: string
        minPriceCount:
          type: number
      required:
      - averageDiscount
      - averagePosition
      - minPriceCount
      - portalName
      - productsCount
      - productsUnderReferencePrice
      - resellerName
      type: object
    com.patagona.pricemonitor.share.api.CreateTaskBodyV2:
      additionalProperties: false
      description: Definition of a task to be created.
      properties:
        taskType:
          description: The type of the task to be created. Can be any of [alert, backend.tasks.pricemonitor.offers.monitoring,
            backend.tasks.pricemonitor.offers.preprocessing, backend.tasks.pricemonitor.callback]
          type: string
        data:
          additionalProperties: false
          properties: {}
          type: object
      required:
      - taskType
      type: object
    org.json4s.JValue:
      additionalProperties: false
      properties: {}
      type: object
    QueryPriceRecommendationsV2ApiResponse:
      additionalProperties: false
      example:
        data:
        - relativePriceChangePercentage: 3.616076749251911
          customerProductId: customerProductId
          gtin: 9.301444243932576
          productId: productId
          originalTags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          oldPrice: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          originalMaxPriceBoundary: 4.145608029883936
          newPosition: 2
          originalMinPriceBoundary: 7.386281948385884
          oldDeliveryCosts: 1.4658129805029452
          deliveryCosts: 6.027456183070403
          price: 2.3021358869347655
          relevantDomain: relevantDomain
          currency: currency
          oldPosition: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        - relativePriceChangePercentage: 3.616076749251911
          customerProductId: customerProductId
          gtin: 9.301444243932576
          productId: productId
          originalTags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          oldPrice: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          originalMaxPriceBoundary: 4.145608029883936
          newPosition: 2
          originalMinPriceBoundary: 7.386281948385884
          oldDeliveryCosts: 1.4658129805029452
          deliveryCosts: 6.027456183070403
          price: 2.3021358869347655
          relevantDomain: relevantDomain
          currency: currency
          oldPosition: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        meta:
          totalSize: 1
          start: 1
          limit: 1
          nextUrl: nextUrl
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiPriceRecommendation'
          type: array
        meta:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PaginationResponse'
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.PutResetPasswordRequest:
      additionalProperties: false
      description: Request body for resetting the password
      properties:
        token:
          description: Received via email after requesting a new password.
          type: string
        password:
          description: Password entered by the user.
          type: string
      required:
      - password
      - token
      type: object
    com.patagona.pricemonitor.share.api.PostNewPasswordRequest:
      additionalProperties: false
      description: Request body for requesting a new password
      properties:
        email:
          description: Valid email address of an existing pricemonitor account.
          type: string
      required:
      - email
      type: object
    GetManufacturerV3ApiResponse:
      additionalProperties: false
      example:
        data:
          companyId: 0.8008281904610115
          description: description
          active: true
          creationDate: 2000-01-23T04:56:07.000+00:00
          expirationDate: 2000-01-23T04:56:07.000+00:00
          sid: sid
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.GetContractResponseV3'
      required:
      - data
      type: object
    QueryProductsByFilterManufacturerV3ApiResponse:
      additionalProperties: false
      example:
        data:
        - customerProductId: customerProductId
          gtin: 6.027456183070403
          referencePrice: 5.962133916683182
          maxPriceBoundary: 1.4658129805029452
          name: name
          id: id
          minPriceBoundary: 0.8008281904610115
          tags:
          - value: value
            key: key
          - value: value
            key: key
        - customerProductId: customerProductId
          gtin: 6.027456183070403
          referencePrice: 5.962133916683182
          maxPriceBoundary: 1.4658129805029452
          name: name
          id: id
          minPriceBoundary: 0.8008281904610115
          tags:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiProduct'
          type: array
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.ApiQuery:
      additionalProperties: false
      description: This model represents a paginated query. The filter parameter is
        optional, if it is not set, all values will be returned, paginated by the
        pagination parameter.
      properties:
        pagination:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Pagination'
        filter:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
      required:
      - pagination
      type: object
    com.patagona.pricemonitor.share.api.Pagination:
      additionalProperties: false
      description: This model describes a step in a paginated endpoint. It consists
        of the start index, set to 0 for the first page. The next page starts at (previous
        start) + limit. Reasonable values for the limit parameter depend on the specific
        endpoint.
      properties:
        start:
          type: integer
        limit:
          type: integer
      required:
      - limit
      - start
      type: object
    com.patagona.pricemonitor.share.api.Query:
      additionalProperties: false
      description: |-
        This class specifies a general query language, even though all fields are marked as optional, exactly one has
        to be specified.
        Please note that depending on the endpoint only a subset of the query language might be supported.
        Refer to the endpoint specific documentation to view the restrictions.
      example:
        regex:
          field: field
          pattern: pattern
        oneOf:
          field: field
          values:
          - values
          - values
        or:
        - null
        - null
        const: true
        in:
          field: field
        and:
        - null
        - null
        lt:
          field: field
          value: value
        eq:
          field: field
          value: value
        gt:
          field: field
          value: value
      properties:
        regex:
          $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_Query_regex'
        in:
          $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_Query_in'
        or:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
          type: array
        const:
          type: boolean
        not:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
        oneOf:
          $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_Query_oneOf'
        lt:
          $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_Query_lt'
        gt:
          $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_Query_lt'
        eq:
          $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_Query_lt'
        and:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
          type: array
      type: object
    QueryProductsManufacturerV3ApiResponse:
      additionalProperties: false
      example:
        data:
        - customerProductId: customerProductId
          gtin: 6.027456183070403
          referencePrice: 5.962133916683182
          maxPriceBoundary: 1.4658129805029452
          name: name
          id: id
          minPriceBoundary: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
        - customerProductId: customerProductId
          gtin: 6.027456183070403
          referencePrice: 5.962133916683182
          maxPriceBoundary: 1.4658129805029452
          name: name
          id: id
          minPriceBoundary: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiProductV3'
          type: array
      required:
      - data
      type: object
    GetCustomerContractSettingsApiResponse:
      additionalProperties: false
      example:
        data:
          imageUrlTag: imageUrlTag
          mapTag: mapTag
          domains:
          - domains
          - domains
          callbacks:
            pricemonitorCompleted:
            - headers:
                key: headers
              method: method
              bodyTemplate: bodyTemplate
              name: name
              url: url
            - headers:
                key: headers
              method: method
              bodyTemplate: bodyTemplate
              name: name
              url: url
          msrpTag: msrpTag
          currency: EUR
          includeDeliveryCosts: true
          dynamicMonitoring:
            threshold: 6.027456183070403
            analysisRange: 0
            adjustedInterval: 1
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.CustomerContractSettings'
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.CustomerContractSettings:
      additionalProperties: false
      description: CustomerContractSettings contains all settings adjustable by the
        pricemonitor customers.
      example:
        imageUrlTag: imageUrlTag
        mapTag: mapTag
        domains:
        - domains
        - domains
        callbacks:
          pricemonitorCompleted:
          - headers:
              key: headers
            method: method
            bodyTemplate: bodyTemplate
            name: name
            url: url
          - headers:
              key: headers
            method: method
            bodyTemplate: bodyTemplate
            name: name
            url: url
        msrpTag: msrpTag
        currency: EUR
        includeDeliveryCosts: true
        dynamicMonitoring:
          threshold: 6.027456183070403
          analysisRange: 0
          adjustedInterval: 1
      properties:
        includeDeliveryCosts:
          type: boolean
        domains:
          items:
            type: string
          type: array
        dynamicMonitoring:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.DynamicMonitoringSettings'
        currency:
          default: EUR
          description: The contract's currency as three letter code
          type: string
        imageUrlTag:
          description: The name of the tag that contains the product image url
          type: string
        callbacks:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Callbacks'
        msrpTag:
          description: The name of the tag that contains the manufacturers suggested
            retail price
          type: string
        mapTag:
          description: The name of the tag that contains the minimum advertised price
          type: string
      required:
      - domains
      - includeDeliveryCosts
      type: object
    com.patagona.pricemonitor.share.api.DynamicMonitoringSettings:
      additionalProperties: false
      example:
        threshold: 6.027456183070403
        analysisRange: 0
        adjustedInterval: 1
      properties:
        analysisRange:
          type: integer
        threshold:
          type: number
        adjustedInterval:
          type: integer
      required:
      - adjustedInterval
      - analysisRange
      - threshold
      type: object
    com.patagona.pricemonitor.share.api.Callbacks:
      additionalProperties: false
      example:
        pricemonitorCompleted:
        - headers:
            key: headers
          method: method
          bodyTemplate: bodyTemplate
          name: name
          url: url
        - headers:
            key: headers
          method: method
          bodyTemplate: bodyTemplate
          name: name
          url: url
      properties:
        pricemonitorCompleted:
          items:
            $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_Callbacks_pricemonitorCompleted'
          type: array
      required:
      - pricemonitorCompleted
      type: object
    PutCustomerContractSettingsApiResponse:
      additionalProperties: false
      example:
        data:
          imageUrlTag: imageUrlTag
          mapTag: mapTag
          domains:
          - domains
          - domains
          callbacks:
            pricemonitorCompleted:
            - headers:
                key: headers
              method: method
              bodyTemplate: bodyTemplate
              name: name
              url: url
            - headers:
                key: headers
              method: method
              bodyTemplate: bodyTemplate
              name: name
              url: url
          msrpTag: msrpTag
          currency: EUR
          includeDeliveryCosts: true
          dynamicMonitoring:
            threshold: 6.027456183070403
            analysisRange: 0
            adjustedInterval: 1
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.CustomerContractSettings'
      required:
      - data
      type: object
    GetProductMonitoringStatusVendorV3ApiResponse:
      additionalProperties: false
      example:
        data:
        - productId: 0.8008281904610115
          statusOnDomain:
          - completedAt: 2000-01-23T04:56:07.000+00:00
            domain: domain
            startedAt: 2000-01-23T04:56:07.000+00:00
            outcome:
              outcome: outcome
              successful: true
          - completedAt: 2000-01-23T04:56:07.000+00:00
            domain: domain
            startedAt: 2000-01-23T04:56:07.000+00:00
            outcome:
              outcome: outcome
              successful: true
        - productId: 0.8008281904610115
          statusOnDomain:
          - completedAt: 2000-01-23T04:56:07.000+00:00
            domain: domain
            startedAt: 2000-01-23T04:56:07.000+00:00
            outcome:
              outcome: outcome
              successful: true
          - completedAt: 2000-01-23T04:56:07.000+00:00
            domain: domain
            startedAt: 2000-01-23T04:56:07.000+00:00
            outcome:
              outcome: outcome
              successful: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatus'
          type: array
      required:
      - data
      type: object
    GetProductMonitoringStatusStatsVendorV3ApiResponse:
      additionalProperties: false
      example:
        data:
        - outcomes:
          - count: 1
            outcome: outcome
          - count: 1
            outcome: outcome
          domain: domain
          started: 0
          completed: 6
        - outcomes:
          - count: 1
            outcome: outcome
          - count: 1
            outcome: outcome
          domain: domain
          started: 0
          completed: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatusStats'
          type: array
      required:
      - data
      type: object
    QueryProductsByFilterVendorV3ApiResponse:
      additionalProperties: false
      example:
        data:
        - customerProductId: customerProductId
          gtin: 6.027456183070403
          referencePrice: 5.962133916683182
          maxPriceBoundary: 1.4658129805029452
          name: name
          id: id
          minPriceBoundary: 0.8008281904610115
          tags:
          - value: value
            key: key
          - value: value
            key: key
        - customerProductId: customerProductId
          gtin: 6.027456183070403
          referencePrice: 5.962133916683182
          maxPriceBoundary: 1.4658129805029452
          name: name
          id: id
          minPriceBoundary: 0.8008281904610115
          tags:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiProduct'
          type: array
      required:
      - data
      type: object
    GetPriceRecommendationHistoryApiResponse:
      additionalProperties: false
      example:
        data:
        - relativePriceChangePercentage: 3.616076749251911
          customerProductId: customerProductId
          gtin: 9.301444243932576
          productId: productId
          originalTags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          oldPrice: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          originalMaxPriceBoundary: 4.145608029883936
          newPosition: 2
          originalMinPriceBoundary: 7.386281948385884
          oldDeliveryCosts: 1.4658129805029452
          deliveryCosts: 6.027456183070403
          price: 2.3021358869347655
          relevantDomain: relevantDomain
          currency: currency
          oldPosition: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        - relativePriceChangePercentage: 3.616076749251911
          customerProductId: customerProductId
          gtin: 9.301444243932576
          productId: productId
          originalTags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          oldPrice: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          originalMaxPriceBoundary: 4.145608029883936
          newPosition: 2
          originalMinPriceBoundary: 7.386281948385884
          oldDeliveryCosts: 1.4658129805029452
          deliveryCosts: 6.027456183070403
          price: 2.3021358869347655
          relevantDomain: relevantDomain
          currency: currency
          oldPosition: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiPriceRecommendation'
          type: array
      required:
      - data
      type: object
    QueryProductsVendorV3ApiResponse:
      additionalProperties: false
      example:
        data:
        - customerProductId: customerProductId
          gtin: 6.027456183070403
          referencePrice: 5.962133916683182
          maxPriceBoundary: 1.4658129805029452
          name: name
          id: id
          minPriceBoundary: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
        - customerProductId: customerProductId
          gtin: 6.027456183070403
          referencePrice: 5.962133916683182
          maxPriceBoundary: 1.4658129805029452
          name: name
          id: id
          minPriceBoundary: 0.8008281904610115
          tags:
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
          - stringValue: stringValue
            integerValue: 5
            booleanValue: true
            doubleValue: 5.962133916683182
            label: label
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiProductV3'
          type: array
      required:
      - data
      type: object
    GetMonitoringSchedulesApiResponse:
      additionalProperties: false
      example:
        data:
        - schedulerJobId: schedulerJobId
          schedule: schedule
          quota: 0.8008281904610115
          unfulfilledOnly: true
          id: 6.027456183070403
          productQuery:
            regex:
              field: field
              pattern: pattern
            oneOf:
              field: field
              values:
              - values
              - values
            or:
            - null
            - null
            const: true
            in:
              field: field
            and:
            - null
            - null
            lt:
              field: field
              value: value
            eq:
              field: field
              value: value
            gt:
              field: field
              value: value
        - schedulerJobId: schedulerJobId
          schedule: schedule
          quota: 0.8008281904610115
          unfulfilledOnly: true
          id: 6.027456183070403
          productQuery:
            regex:
              field: field
              pattern: pattern
            oneOf:
              field: field
              values:
              - values
              - values
            or:
            - null
            - null
            const: true
            in:
              field: field
            and:
            - null
            - null
            lt:
              field: field
              value: value
            eq:
              field: field
              value: value
            gt:
              field: field
              value: value
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.MonitoringScheduleV3'
          type: array
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3:
      additionalProperties: false
      description: A request body containing monitoring schedule.
      properties:
        quota:
          description: 'Defines how many products should get monitored. Default to
            1.0 which means that all products are monitored. Allowed values: 0.0 <
            quota <= 1.0'
          type: number
        unfulfilledOnly:
          description: When it's set to true, then the monitoring considers only products
            on domains where no offers are found within 24h. Default false.
          type: boolean
        productQuery:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
        schedule:
          description: Only valid CRON expressions are allowed. See Cron spec [[https://www.alonsodomin.me/cron4s/userguide/index.html]]
          type: string
      required:
      - quota
      - schedule
      - unfulfilledOnly
      type: object
    PutMonitoringSchedulesApiResponse:
      additionalProperties: false
      example:
        data:
          schedulerJobId: schedulerJobId
          schedule: schedule
          quota: 0.8008281904610115
          unfulfilledOnly: true
          id: 6.027456183070403
          productQuery:
            regex:
              field: field
              pattern: pattern
            oneOf:
              field: field
              values:
              - values
              - values
            or:
            - null
            - null
            const: true
            in:
              field: field
            and:
            - null
            - null
            lt:
              field: field
              value: value
            eq:
              field: field
              value: value
            gt:
              field: field
              value: value
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.MonitoringScheduleV3'
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.DeleteByNumericIdApiResponse:
      additionalProperties: false
      description: Successful delete response.
      example:
        data: 0.8008281904610115
      properties:
        data:
          description: numeric id that has been deleted
          type: number
      required:
      - data
      type: object
    GetVendorShopMappingsApiResponse:
      additionalProperties: false
      example:
        data:
        - shops:
          - domain: domain
            name: name
          - domain: domain
            name: name
          id: 0.8008281904610115
          vendorName: vendorName
        - shops:
          - domain: domain
            name: name
          - domain: domain
            name: name
          id: 0.8008281904610115
          vendorName: vendorName
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.VendorShopMappingV3'
          type: array
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.PostVendorShopMappingRequestV3:
      additionalProperties: false
      description: Request body for creating a vendor and their associated shops.
      properties:
        vendorName:
          description: Vendor name
          type: string
        shops:
          description: List of associated shops
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ShopV3'
          type: array
          uniqueItems: true
      required:
      - shops
      - vendorName
      type: object
    VendorShopMappingV3ApiResponse:
      additionalProperties: false
      example:
        data:
          shops:
          - domain: domain
            name: name
          - domain: domain
            name: name
          id: 0.8008281904610115
          vendorName: vendorName
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.VendorShopMappingV3'
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.PostAccountRequestV3:
      additionalProperties: false
      description: A request body that contains information for creation of a new
        account.
      properties:
        name:
          description: Defines the name of the new user account.
          type: string
        email:
          description: Defines the email of the new user account.
          type: string
        password:
          description: Defines the password for the new user account.
          type: string
      required:
      - email
      - name
      - password
      type: object
    PostAccountResponseV3ApiResponse:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0.8008281904610115
          email: email
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostAccountResponseV3'
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.PostAccessTokenRequestV3:
      additionalProperties: false
      description: A request body holding credentials.
      properties:
        email:
          description: Email address
          type: string
        password:
          description: Password
          type: string
      required:
      - email
      - password
      type: object
    PostAccessTokenResponseV3ApiResponse:
      additionalProperties: false
      example:
        data:
          refreshTokenId: 0.8008281904610115
          tokenType: tokenType
          accessToken: accessToken
          expiresInSeconds: 6
          refreshToken: refreshToken
      properties:
        data:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.PostAccessTokenResponseV3'
      required:
      - data
      type: object
    com.patagona.pricemonitor.share.api.PostRefreshAccessTokenRequestV3:
      additionalProperties: false
      description: A request body holding the refresh token.
      properties:
        refreshToken:
          description: The refresh token issued at the time of issuing an access token.
          type: string
        refreshTokenId:
          description: The refresh token id issued at the time of issuing an access
            token.
          type: number
      required:
      - refreshToken
      - refreshTokenId
      type: object
    com.patagona.pricemonitor.share.api.ApplicationVersion:
      additionalProperties: false
      description: Current api version.
      example:
        version: version
      properties:
        version:
          description: version represented as X.Y.Z
          type: string
      required:
      - version
      type: object
    com.patagona.pricemonitor.share.api.ApiPriceRecommendation:
      additionalProperties: false
      description: Represents a price recommendation of the pricemonitor.
      example:
        relativePriceChangePercentage: 3.616076749251911
        customerProductId: customerProductId
        gtin: 9.301444243932576
        productId: productId
        originalTags:
        - stringValue: stringValue
          integerValue: 5
          booleanValue: true
          doubleValue: 5.962133916683182
          label: label
        - stringValue: stringValue
          integerValue: 5
          booleanValue: true
          doubleValue: 5.962133916683182
          label: label
        oldPrice: 0.8008281904610115
        tags:
        - stringValue: stringValue
          integerValue: 5
          booleanValue: true
          doubleValue: 5.962133916683182
          label: label
        - stringValue: stringValue
          integerValue: 5
          booleanValue: true
          doubleValue: 5.962133916683182
          label: label
        originalMaxPriceBoundary: 4.145608029883936
        newPosition: 2
        originalMinPriceBoundary: 7.386281948385884
        oldDeliveryCosts: 1.4658129805029452
        deliveryCosts: 6.027456183070403
        price: 2.3021358869347655
        relevantDomain: relevantDomain
        currency: currency
        oldPosition: 7
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        oldPrice:
          description: The price of the cheapest offer of the own shop(s) on the relevant
            domain
          type: number
        deliveryCosts:
          description: The delivery costs which were considered for the recommended
            price
          type: number
        timestamp:
          description: The timestamp when the price recommendation has been calculated
          format: date-time
          type: string
        oldDeliveryCosts:
          description: The delivery costs corresponding to `oldPrice`
          type: number
        tags:
          description: Additional information on this product
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag'
          type: array
        price:
          description: The recommended price of the relevant domain
          type: number
        oldPosition:
          description: The old position on the relevant domain
          type: integer
        gtin:
          description: GTIN of the product
          type: number
        relativePriceChangePercentage:
          description: Absolute percentage how the recommended price changed compared
            to the `oldPrice` e.g. 200 stands for 200% which means the recommended
            price has doubled
          type: number
        newPosition:
          description: The new position on the relevant domain
          type: integer
        customerProductId:
          description: The customer's id of the product
          type: string
        originalMaxPriceBoundary:
          description: Max price boundary during the time when the price was calculated
          type: number
        relevantDomain:
          description: The decisive domain of the price recommendation. It's been
            determined by the cheapest price recommendation.
          type: string
        originalMinPriceBoundary:
          description: Min price boundary during the time when the price was calculated
          type: number
        currency:
          description: The currency of the price recommendation.
          type: string
        productId:
          description: The internal product id of the pricemonitor
          type: string
        originalTags:
          description: 'List of tags which were set during the time when the price
            has been calculated. ATTENTION: These are historic tags which are maybe
            outdated or incomplete.'
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag'
          type: array
      required:
      - currency
      - originalMaxPriceBoundary
      - originalMinPriceBoundary
      - originalTags
      - price
      - productId
      - tags
      - timestamp
      type: object
    com.patagona.pricemonitor.share.api.ExtendedTag:
      additionalProperties: false
      description: 'Tags represent additional information of a product. Extended tags
        can contain evaluated values like numbers which are determined during product
        import. The `stringValue` is used for deriving the evaluated values. Example:
        You provide a tag with label "strategy" and `stringValue` "1" during product
        import. This will be evaluated to these extended values: - integerValue  1
        - doubleValue   1.0 - booleanValue  true'
      example:
        stringValue: stringValue
        integerValue: 5
        booleanValue: true
        doubleValue: 5.962133916683182
        label: label
      properties:
        doubleValue:
          description: The double value depends on the decimal separator which has
            been provided during product import.
          type: number
        integerValue:
          description: The integer value of the tag. It's only defined when the `stringValue`
            consists solely of digits.
          type: integer
        label:
          description: The name of the tag. It can't be empty.
          type: string
        stringValue:
          description: The text value of the tag.
          type: string
        booleanValue:
          description: The boolean value of the tag. It's only set to true when the
            `stringValue` is "1" or "true".
          type: boolean
      required:
      - label
      - stringValue
      type: object
    com.patagona.pricemonitor.share.api.PaginationResponse:
      additionalProperties: false
      description: This model describes the information passed to the user for a paginated
        request.
      example:
        totalSize: 1
        start: 1
        limit: 1
        nextUrl: nextUrl
      properties:
        nextUrl:
          description: the url that can be called to retrieve the next page, None
            if th last page has been requested
          type: string
        totalSize:
          description: the total number of elements that is paginated over
          type: integer
        start:
          description: the start index of the currently requested page
          type: integer
        limit:
          description: the number of elements in a full page
          type: integer
      required:
      - limit
      - start
      - totalSize
      type: object
    ProductAndOffers_2:
      example:
        offers:
        - ignored: true
          gtin: 6
          productId: productId
          retrievalDate: 2000-01-23T04:56:07.000+00:00
          availability: true
          creationDate: 2000-01-23T04:56:07.000+00:00
          vendorName: vendorName
          positionByTotalPrice: 2
          productName: productName
          url: url
          minDeliveryTime: 5
          vendorDomainId: vendorDomainId
          deliveryCosts: 0.8008281904610115
          maxDeliveryTime: 1
          price: 7.061401241503109
          domain: domain
          contractId: contractId
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          currency: currency
          positionByUnitPrice: 5
        - ignored: true
          gtin: 6
          productId: productId
          retrievalDate: 2000-01-23T04:56:07.000+00:00
          availability: true
          creationDate: 2000-01-23T04:56:07.000+00:00
          vendorName: vendorName
          positionByTotalPrice: 2
          productName: productName
          url: url
          minDeliveryTime: 5
          vendorDomainId: vendorDomainId
          deliveryCosts: 0.8008281904610115
          maxDeliveryTime: 1
          price: 7.061401241503109
          domain: domain
          contractId: contractId
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          currency: currency
          positionByUnitPrice: 5
        product:
          customerProductId: customerProductId
          gtin: 9
          referencePrice: 4.145608029883936
          maxPriceBoundary: 3.616076749251911
          name: name
          id: id
          minPriceBoundary: 2.027123023002322
          tags:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        offers:
          items:
            $ref: '#/components/schemas/ApiOffer'
          type: array
        product:
          $ref: '#/components/schemas/ApiProduct'
      type: object
    com.patagona.pricemonitor.share.api.ApiOffer:
      additionalProperties: false
      example:
        ignored: true
        gtin: 2.3021358869347655
        productId: productId
        retrievalDate: 2000-01-23T04:56:07.000+00:00
        availability: true
        vendorName: vendorName
        creationDate: 2000-01-23T04:56:07.000+00:00
        positionByTotalPrice: 0
        url: url
        productName: productName
        minDeliveryTime: 5
        vendorDomainId: vendorDomainId
        deliveryCosts: 6.027456183070403
        maxDeliveryTime: 1
        price: 5.962133916683182
        domain: domain
        attributes:
        - name: name
          value: value
        - name: name
          value: value
        currency: currency
        positionByUnitPrice: 7
      properties:
        positionByTotalPrice:
          type: integer
        deliveryCosts:
          type: number
        maxDeliveryTime:
          type: integer
        url:
          type: string
        vendorDomainId:
          type: string
        domain:
          type: string
        price:
          type: number
        minDeliveryTime:
          type: integer
        gtin:
          type: number
        positionByUnitPrice:
          type: integer
        availability:
          type: boolean
        attributes:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.OfferAttribute'
          type: array
        vendorName:
          type: string
        retrievalDate:
          format: date-time
          type: string
        creationDate:
          format: date-time
          type: string
        productName:
          type: string
        currency:
          type: string
        productId:
          type: string
        ignored:
          type: boolean
      required:
      - attributes
      - creationDate
      - currency
      - deliveryCosts
      - domain
      - ignored
      - positionByTotalPrice
      - positionByUnitPrice
      - price
      - productId
      - productName
      - url
      - vendorName
      type: object
    com.patagona.pricemonitor.share.api.OfferAttribute:
      additionalProperties: false
      description: Created by Andreas Frankenberger on 28.01.16.
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    com.patagona.pricemonitor.share.api.GetOfferStatisticsV3:
      additionalProperties: false
      description: Offer statistics of a product.
      example:
        productId: productId
        statsByDomain:
        - offerCount: 0
          domain: domain
          minPrice: 6.027456183070403
          averagePrice: 1.4658129805029452
        - offerCount: 0
          domain: domain
          minPrice: 6.027456183070403
          averagePrice: 1.4658129805029452
      properties:
        productId:
          description: Internal product identifier.
          type: string
        statsByDomain:
          description: List of offer statistics per domain
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.OfferStatsPerDomain'
          type: array
      required:
      - productId
      - statsByDomain
      type: object
    com.patagona.pricemonitor.share.api.OfferStatsPerDomain:
      additionalProperties: false
      description: Offer statistics per domain.
      example:
        offerCount: 0
        domain: domain
        minPrice: 6.027456183070403
        averagePrice: 1.4658129805029452
      properties:
        domain:
          description: Domain name
          type: string
        offerCount:
          description: Number of offers
          type: integer
        minPrice:
          description: Minimum price, rounded to two decimal places, in a set of offers.
          type: number
        averagePrice:
          description: Average price, rounded to two decimal places, in a set of offers.
          type: number
      required:
      - averagePrice
      - domain
      - minPrice
      - offerCount
      type: object
    com.patagona.pricemonitor.share.api.PriceDumpingStatsResponse:
      additionalProperties: false
      example:
        statsOverAllomains:
          potentiallyInitiatedPriceDumpings: 6
          uniqueProductInitiatedPriceDumpings: 1
          uniqueProductPotentiallyInitiatedPriceDumpings: 5
          initiatedPriceDumpings: 0
        statsPerDomain:
        - domain: domain
          productPriceDumpingStats:
            potentiallyInitiatedPriceDumpings: 6
            uniqueProductInitiatedPriceDumpings: 1
            uniqueProductPotentiallyInitiatedPriceDumpings: 5
            initiatedPriceDumpings: 0
        - domain: domain
          productPriceDumpingStats:
            potentiallyInitiatedPriceDumpings: 6
            uniqueProductInitiatedPriceDumpings: 1
            uniqueProductPotentiallyInitiatedPriceDumpings: 5
            initiatedPriceDumpings: 0
      properties:
        statsPerDomain:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.DomainPriceDumpingStats'
          type: array
        statsOverAllomains:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ProductPriceDumpingStats'
      required:
      - statsOverAllomains
      - statsPerDomain
      type: object
    com.patagona.pricemonitor.share.api.DomainPriceDumpingStats:
      additionalProperties: false
      description: This class contains the price dumping statistic for a single domain.
        A price dumping event exists if a vendor reduces the price below the minimum
        price at the previous timestamp while also selling the product at the new
        minimum price.
      example:
        domain: domain
        productPriceDumpingStats:
          potentiallyInitiatedPriceDumpings: 6
          uniqueProductInitiatedPriceDumpings: 1
          uniqueProductPotentiallyInitiatedPriceDumpings: 5
          initiatedPriceDumpings: 0
      properties:
        domain:
          type: string
        productPriceDumpingStats:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ProductPriceDumpingStats'
      required:
      - domain
      - productPriceDumpingStats
      type: object
    com.patagona.pricemonitor.share.api.ProductPriceDumpingStats:
      additionalProperties: false
      description: This class contains the number of price dumping events. The counts
        prefixed with "uniqueProduct" only count the events once per product, the
        non prefixed counts count every event. If we are unable to detect which vendor
        reduced the price first, because we only sampled the price when multiple vendors
        are at the same price, those events are counted in the fields infixed with
        "potetially".
      example:
        potentiallyInitiatedPriceDumpings: 6
        uniqueProductInitiatedPriceDumpings: 1
        uniqueProductPotentiallyInitiatedPriceDumpings: 5
        initiatedPriceDumpings: 0
      properties:
        initiatedPriceDumpings:
          type: integer
        potentiallyInitiatedPriceDumpings:
          type: integer
        uniqueProductInitiatedPriceDumpings:
          type: integer
        uniqueProductPotentiallyInitiatedPriceDumpings:
          type: integer
      required:
      - initiatedPriceDumpings
      - potentiallyInitiatedPriceDumpings
      - uniqueProductInitiatedPriceDumpings
      - uniqueProductPotentiallyInitiatedPriceDumpings
      type: object
    com.patagona.pricemonitor.share.api.GetContractResponseV3:
      additionalProperties: false
      description: Contract information
      example:
        companyId: 0.8008281904610115
        description: description
        active: true
        creationDate: 2000-01-23T04:56:07.000+00:00
        expirationDate: 2000-01-23T04:56:07.000+00:00
        sid: sid
      properties:
        expirationDate:
          description: The date when contract will expire.
          format: date-time
          type: string
        description:
          description: The description for the given contract provided by the end-user.
          type: string
        contractType:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ContractType'
        creationDate:
          description: The creation date of the contract.
          format: date-time
          type: string
        sid:
          description: Unique string id of the contract in pricemonitor.
          type: string
        companyId:
          description: The id of the company, in pricemonitor, to which contract belongs
            to.
          type: number
        active:
          description: Indicates if the contract is active or disabled.
          type: boolean
      required:
      - active
      - companyId
      - contractType
      - creationDate
      - description
      - sid
      type: object
    com.patagona.pricemonitor.share.api.ApiProduct:
      additionalProperties: false
      description: A product in the pricemonitor.
      example:
        customerProductId: customerProductId
        gtin: 6.027456183070403
        referencePrice: 5.962133916683182
        maxPriceBoundary: 1.4658129805029452
        name: name
        id: id
        minPriceBoundary: 0.8008281904610115
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        name:
          description: Name of the product.
          type: string
        tags:
          description: Additional information on this product.
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Tag'
          type: array
        minPriceBoundary:
          description: Maximum price which pricemonitor can recommend for the product.
            It won't recommend any price above this boundary.
          type: number
        gtin:
          description: GTIN of the product. Can be optionally.
          type: number
        customerProductId:
          description: The customer's id of the product. This field allows to link
            products in pricemonitor to products in the customer's system.
          type: string
        id:
          description: Id of the product in the pricemonitor.
          type: string
        maxPriceBoundary:
          description: Minimum price which pricemonitor can recommend for the product.
            It won't recommend any price below this boundary.
          type: number
        referencePrice:
          description: Some price that will be used as benchmark for certain components
            in pricemonitor.
          type: number
      required:
      - id
      - name
      - referencePrice
      - tags
      type: object
    com.patagona.pricemonitor.share.api.Tag:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    com.patagona.pricemonitor.share.api.ApiProductV3:
      additionalProperties: false
      description: A product in the pricemonitor.
      example:
        customerProductId: customerProductId
        gtin: 6.027456183070403
        referencePrice: 5.962133916683182
        maxPriceBoundary: 1.4658129805029452
        name: name
        id: id
        minPriceBoundary: 0.8008281904610115
        tags:
        - stringValue: stringValue
          integerValue: 5
          booleanValue: true
          doubleValue: 5.962133916683182
          label: label
        - stringValue: stringValue
          integerValue: 5
          booleanValue: true
          doubleValue: 5.962133916683182
          label: label
      properties:
        name:
          description: Name of the product.
          type: string
        tags:
          description: Additional information on this product.
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag'
          type: array
        minPriceBoundary:
          description: Maximum price which pricemonitor can recommend for the product.
            It won't recommend any price above this boundary.
          type: number
        gtin:
          description: GTIN of the product. Can be optionally.
          type: number
        customerProductId:
          description: The customer's id of the product. This field allows to link
            products in pricemonitor to products in the customer's system.
          type: string
        id:
          description: Id of the product in the pricemonitor.
          type: string
        maxPriceBoundary:
          description: Minimum price which pricemonitor can recommend for the product.
            It won't recommend any price below this boundary.
          type: number
        referencePrice:
          description: Some price that will be used as benchmark for certain components
            in pricemonitor.
          type: number
      required:
      - id
      - name
      - referencePrice
      - tags
      type: object
    com.patagona.pricemonitor.share.api.ProductMonitoringStatus:
      additionalProperties: false
      description: Describes the monitoring status of a product for all domains of
        the contract.
      example:
        productId: 0.8008281904610115
        statusOnDomain:
        - completedAt: 2000-01-23T04:56:07.000+00:00
          domain: domain
          startedAt: 2000-01-23T04:56:07.000+00:00
          outcome:
            outcome: outcome
            successful: true
        - completedAt: 2000-01-23T04:56:07.000+00:00
          domain: domain
          startedAt: 2000-01-23T04:56:07.000+00:00
          outcome:
            outcome: outcome
            successful: true
      properties:
        productId:
          description: The product that gets monitored
          type: number
        statusOnDomain:
          description: The monitoring status on each domain. It will contain an entry
            for each domain which is active for that contract.
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatusOnDomain'
          type: array
      required:
      - productId
      - statusOnDomain
      type: object
    com.patagona.pricemonitor.share.api.ProductMonitoringStatusOnDomain:
      additionalProperties: false
      description: Describes the monitoring status of a product on a certain domain.
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        domain: domain
        startedAt: 2000-01-23T04:56:07.000+00:00
        outcome:
          outcome: outcome
          successful: true
      properties:
        domain:
          description: The domain which gets monitored.
          type: string
        startedAt:
          description: The last time pricemonitor tried to monitor the product on
            the given domain. If this doesn't exist it mean's that pricemonitor haven't
            tried to monitor this product on the domain yet. One reason could be that
            the product is very new or the domain has just recently been added to
            the contract.
          format: date-time
          type: string
        completedAt:
          description: The last time pricemonitor completed monitoring the product
            on the given domain.
          format: date-time
          type: string
        outcome:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatusOnDomainOutcome'
      required:
      - domain
      type: object
    com.patagona.pricemonitor.share.api.ProductMonitoringStatusOnDomainOutcome:
      additionalProperties: false
      description: Describes the result of a monitoring attempt.
      example:
        outcome: outcome
        successful: true
      properties:
        successful:
          description: 'Defines if everything worked as expected. This is the case
            if: - Offers have been found for the product - The product exists on the
            domain but is currently not available - The product doesn''t exist on
            the domain'
          type: boolean
        outcome:
          description: 'Describes the outcome of the monitoring attempt. Can be one
            of: ProductNotFound, ProductNotAvailable, ProductFound, CaptchaFailure,
            LayoutFailure, RequestFailure, UnknownFailure, ProductSearchFailure, MissingTaskData,
            AlreadyCompletedTask, InvalidTaskSession, MissingContractId'
          type: string
      required:
      - outcome
      - successful
      type: object
    com.patagona.pricemonitor.share.api.ProductMonitoringStatusStats:
      additionalProperties: false
      example:
        outcomes:
        - count: 1
          outcome: outcome
        - count: 1
          outcome: outcome
        domain: domain
        started: 0
        completed: 6
      properties:
        domain:
          type: string
        started:
          type: integer
        completed:
          type: integer
        outcomes:
          items:
            $ref: '#/components/schemas/com_patagona_pricemonitor_share_api_ProductMonitoringStatusStats_outcomes'
          type: array
          uniqueItems: true
      required:
      - completed
      - domain
      - outcomes
      - started
      type: object
    com.patagona.pricemonitor.share.api.MonitoringScheduleV3:
      additionalProperties: false
      description: MonitoringScheduleV3 represents monitoring schedule that can be
        adjustable by the price-monitor customers.
      example:
        schedulerJobId: schedulerJobId
        schedule: schedule
        quota: 0.8008281904610115
        unfulfilledOnly: true
        id: 6.027456183070403
        productQuery:
          regex:
            field: field
            pattern: pattern
          oneOf:
            field: field
            values:
            - values
            - values
          or:
          - null
          - null
          const: true
          in:
            field: field
          and:
          - null
          - null
          lt:
            field: field
            value: value
          eq:
            field: field
            value: value
          gt:
            field: field
            value: value
      properties:
        productQuery:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
        quota:
          description: 'Defines how many products should get monitored. Default to
            1.0 which means that all products are monitored. Allowed values: 0.0 <
            quota <= 1.0'
          type: number
        unfulfilledOnly:
          description: When it's set to true, then the monitoring considers only products
            on domains where no offers are found within 24h. Default false.
          type: boolean
        id:
          description: Id that uniquely identifies a monitoring schedule.
          type: number
        schedule:
          description: Only valid CRON expressions are allowed. See Cron spec [[https://www.alonsodomin.me/cron4s/userguide/index.html]].
          type: string
        schedulerJobId:
          description: Internal job id used by the scheduler.
          type: string
      required:
      - id
      - quota
      - schedule
      - schedulerJobId
      - unfulfilledOnly
      type: object
    com.patagona.pricemonitor.share.api.VendorShopMappingV3:
      additionalProperties: false
      description: Online shops can have different names per domain despite they belong
        to the same entity. This entity is further called "vendor". A vendor shop
        mapping represents shops which are associated to a vendor.
      example:
        shops:
        - domain: domain
          name: name
        - domain: domain
          name: name
        id: 0.8008281904610115
        vendorName: vendorName
      properties:
        id:
          description: Unique identifier of a vendor
          type: number
        vendorName:
          description: Vendor name
          type: string
        shops:
          description: List of shops associated with the specified vendor
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ShopV3'
          type: array
          uniqueItems: true
      required:
      - id
      - shops
      - vendorName
      type: object
    com.patagona.pricemonitor.share.api.PostAccountResponseV3:
      additionalProperties: false
      description: A response body that contains information for a newly created account.
      example:
        name: name
        id: 0.8008281904610115
        email: email
      properties:
        id:
          description: Defines the Pricemonitor user id of newly create user account.
          type: number
        name:
          description: Defines name of newly create user account.
          type: string
        email:
          description: Defines the email of newly created user account.
          type: string
      required:
      - email
      - id
      - name
      type: object
    com.patagona.pricemonitor.share.api.PostAccessTokenResponseV3:
      additionalProperties: false
      description: Access token response.
      example:
        refreshTokenId: 0.8008281904610115
        tokenType: tokenType
        accessToken: accessToken
        expiresInSeconds: 6
        refreshToken: refreshToken
      properties:
        refreshTokenId:
          description: Refresh token id. This id would be required, in addition to
            {{refreshToken}}, to obtain new access token.
          type: number
        tokenType:
          description: 'Currently only one token type is supported: "bearer".'
          type: string
        expiresInSeconds:
          description: 'This specifies the time in seconds how long a token is valid.
            (Default: 900s)'
          type: integer
        refreshToken:
          description: If the access token will expire, then a refresh token is used
            to obtain new access token. Please note that refresh token has an expiration
            period of 1w. This means that after this period, one could not obtain
            new access token with expired refresh token.
          type: string
        accessToken:
          description: Access token in JSON Web Token (JWT) format. It ensures that
            a customer application is authorized to access the protected resources.
          type: string
      required:
      - accessToken
      - expiresInSeconds
      - refreshToken
      - refreshTokenId
      - tokenType
      type: object
    Callbacks_pricemonitorCompleted:
      example:
        headers:
          key: headers
        bodyTemplate: bodyTemplate
        method: method
        name: name
        url: url
      properties:
        bodyTemplate:
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        method:
          type: string
        name:
          type: string
        url:
          type: string
    ConstantOfferFilter_constant:
      example:
        value: true
      properties:
        value:
          type: boolean
    AndOfferFilter_and:
      example:
        filters:
        - constant:
            value: true
        - constant:
            value: true
      properties:
        filters:
          items:
            $ref: '#/components/schemas/ConstantOfferFilter'
          type: array
    PutPluginRegistrationRequest_allOf:
      properties:
        version:
          enum:
          - "1"
          type: string
    Feed_fields:
      example:
        default: default
        name: name
        label: label
      properties:
        default:
          type: string
        label:
          type: string
        name:
          type: string
    GetOffersResponse_attributes:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
    GetOffersResponse_offers:
      description: An offer by a specific vendor for a certain product
      example:
        availability: '{}'
        creationDate: 2000-01-23T04:56:07.000+00:00
        productName: productName
        url: url
        vendorIdOnDomain: vendorIdOnDomain
        approved: true
        minDeliveryTime: '{}'
        deliveryCosts: 6.027456183070403
        maxDeliveryTime: '{}'
        price: 1.4658129805029452
        vendor: vendor
        domain: domain
        attributes:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        approved:
          type: boolean
        attributes:
          items:
            $ref: '#/components/schemas/GetOffersResponse_attributes'
          type: array
        availability:
          type: object
        creationDate:
          format: date-time
          type: string
        deliveryCosts:
          format: double
          type: number
        domain:
          type: string
        maxDeliveryTime:
          type: object
        minDeliveryTime:
          type: object
        price:
          format: double
          type: number
        productName:
          type: string
        url:
          type: string
        vendor:
          type: string
        vendorIdOnDomain:
          type: string
    GetOffersResponse_data:
      description: The GTIN of a product and all of its offers
      example:
        offers:
        - availability: '{}'
          creationDate: 2000-01-23T04:56:07.000+00:00
          productName: productName
          url: url
          vendorIdOnDomain: vendorIdOnDomain
          approved: true
          minDeliveryTime: '{}'
          deliveryCosts: 6.027456183070403
          maxDeliveryTime: '{}'
          price: 1.4658129805029452
          vendor: vendor
          domain: domain
          attributes:
          - value: value
            key: key
          - value: value
            key: key
        - availability: '{}'
          creationDate: 2000-01-23T04:56:07.000+00:00
          productName: productName
          url: url
          vendorIdOnDomain: vendorIdOnDomain
          approved: true
          minDeliveryTime: '{}'
          deliveryCosts: 6.027456183070403
          maxDeliveryTime: '{}'
          price: 1.4658129805029452
          vendor: vendor
          domain: domain
          attributes:
          - value: value
            key: key
          - value: value
            key: key
        gtin: 0
        productId: productId
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        gtin:
          format: int64
          type: integer
        offers:
          items:
            $ref: '#/components/schemas/GetOffersResponse_offers'
          type: array
        productId:
          description: Unique product identifier within pricemonitor
          type: string
    GetPriceRecommendationsResponse_priceRecommendations:
      example:
        identifier: identifier
        gtin: 6
        recommendedPrice: 1.4658129805029452
        currentPrice: 0.8008281904610115
        currency: currency
      properties:
        currency:
          type: string
        currentPrice:
          format: double
          type: number
        gtin:
          format: int64
          type: integer
        identifier:
          type: string
        recommendedPrice:
          format: double
          type: number
    DeleteProductsApiResponse_data:
      example:
        deleted: 0
      properties:
        deleted:
          description: Number of deleted products
          type: integer
    PostProductsApiResponse_data:
      example:
        productId: productId
      properties:
        productId:
          description: The pricemonitor product id of the added product
          type: string
    TaskWithContractResourceApiResponse_failures:
      example:
        messageId: messageId
        attributes:
          key: '{}'
      properties:
        attributes:
          additionalProperties:
            type: object
          type: object
        messageId:
          type: string
    GenericTaskWithUrl_allOf:
      description: A basic task type containing the URL. Additional fields can be
        contained depending on specific task type.
      properties:
        url:
          description: The URL of the task
          type: string
      required:
      - url
    UpdateTaskRequestV2_allOf:
      properties:
        contractId:
          description: The contract SID to update the task for
          type: string
      required:
      - contractId
    com_patagona_pricemonitor_share_api_CustomerOrderV2_productMappings:
      example:
        source: source
        target: target
      properties:
        source:
          description: Identifier field within item. Only valid value is 'itemId'
          type: string
        target:
          description: Must be 'customerProductId' or 'productId' since plugins are
            still publishing both values. The semantics are actually the same. In
            both cases they address the customerProductId.
          type: string
      required:
      - source
      - target
    PostOrdersBulkApiResponse_data:
      example:
        orders:
        - referrer: referrer
          productMappings:
          - source: source
            target: target
          - source: source
            target: target
          orderId: orderId
          totalPrice: 5.637376656633329
          origin: origin
          currency: currency
          creationDate: 2000-01-23T04:56:07.000+00:00
          items:
          - unitPrice: 6.027456183070403
            itemId: itemId
            quantity: 1
            taxPercentage: 5.962133916683182
          - unitPrice: 6.027456183070403
            itemId: itemId
            quantity: 1
            taxPercentage: 5.962133916683182
          shippingCosts: 0.8008281904610115
        - referrer: referrer
          productMappings:
          - source: source
            target: target
          - source: source
            target: target
          orderId: orderId
          totalPrice: 5.637376656633329
          origin: origin
          currency: currency
          creationDate: 2000-01-23T04:56:07.000+00:00
          items:
          - unitPrice: 6.027456183070403
            itemId: itemId
            quantity: 1
            taxPercentage: 5.962133916683182
          - unitPrice: 6.027456183070403
            itemId: itemId
            quantity: 1
            taxPercentage: 5.962133916683182
          shippingCosts: 0.8008281904610115
        version: version
      properties:
        orders:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderV2'
          type: array
        version:
          type: string
    PostOrdersBulkApiResponse_data_1:
      example:
        data:
          orders:
          - referrer: referrer
            productMappings:
            - source: source
              target: target
            - source: source
              target: target
            orderId: orderId
            totalPrice: 5.637376656633329
            origin: origin
            currency: currency
            creationDate: 2000-01-23T04:56:07.000+00:00
            items:
            - unitPrice: 6.027456183070403
              itemId: itemId
              quantity: 1
              taxPercentage: 5.962133916683182
            - unitPrice: 6.027456183070403
              itemId: itemId
              quantity: 1
              taxPercentage: 5.962133916683182
            shippingCosts: 0.8008281904610115
          - referrer: referrer
            productMappings:
            - source: source
              target: target
            - source: source
              target: target
            orderId: orderId
            totalPrice: 5.637376656633329
            origin: origin
            currency: currency
            creationDate: 2000-01-23T04:56:07.000+00:00
            items:
            - unitPrice: 6.027456183070403
              itemId: itemId
              quantity: 1
              taxPercentage: 5.962133916683182
            - unitPrice: 6.027456183070403
              itemId: itemId
              quantity: 1
              taxPercentage: 5.962133916683182
            shippingCosts: 0.8008281904610115
          version: version
        errors:
        - code: code
          message: message
        - code: code
          message: message
      properties:
        data:
          $ref: '#/components/schemas/PostOrdersBulkApiResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          type: array
    com_patagona_pricemonitor_share_api_PricesByDayByProductIdResponseV2_prices:
      example:
        deliveryCosts: 6.027456183070403
        price: 0.8008281904610115
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        price:
          description: The price
          type: number
        deliveryCosts:
          description: The delivery costs
          type: number
        timestamp:
          description: The timestamp of when the price was found
          format: date-time
          type: string
      required:
      - deliveryCosts
      - price
      - timestamp
    com_patagona_pricemonitor_share_api_Query_regex:
      example:
        field: field
        pattern: pattern
      properties:
        field:
          type: string
        pattern:
          type: string
      required:
      - field
      - pattern
    com_patagona_pricemonitor_share_api_Query_in:
      example:
        field: field
      properties:
        field:
          type: string
        query:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
      required:
      - field
      - query
    com_patagona_pricemonitor_share_api_Query_oneOf:
      example:
        field: field
        values:
        - values
        - values
      properties:
        field:
          type: string
        values:
          items:
            type: string
          type: array
      required:
      - field
      - values
    com_patagona_pricemonitor_share_api_Query_lt:
      example:
        field: field
        value: value
      properties:
        field:
          type: string
        value:
          type: string
      required:
      - field
      - value
    com_patagona_pricemonitor_share_api_Callbacks_pricemonitorCompleted:
      example:
        headers:
          key: headers
        method: method
        bodyTemplate: bodyTemplate
        name: name
        url: url
      properties:
        method:
          type: string
        name:
          type: string
        bodyTemplate:
          type: string
        url:
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
      required:
      - headers
      - url
    com_patagona_pricemonitor_share_api_ProductMonitoringStatusStats_outcomes:
      example:
        count: 1
        outcome: outcome
      properties:
        outcome:
          type: string
        count:
          type: integer
      required:
      - count
      - outcome
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
