openapi: 3.1.0
info:
  contact:
    name: Omnia Retail
    url: https://www.omniaretail.com/
  title: Omnia 2.0 API
  summary: >-
    This is the API powering Omnia 2.0 and Pricemonitor, containing operations
    that can also be used directly by customers from their own systems.
  description: >
    The Omnia 2.0 API is RESTful and provides access to the backend of Omnia 2.0
    and Pricemonitor. It is used to manage products, offers, contracts, and
    more.


    This API supports both public endpoints for customer integration and
    internal endpoints for platform management.

    All endpoints are authenticated using either Basic Authentication or JWT
    Bearer tokens.
  version: 0.0.7263
  x-logo:
    url: >-
      https://www.omniaretail.com/hubfs/Omnia%20Logo%20SVG/Omnia_Retail_Full_Colour_Logo_On_White_RGB.svg
    altText: Omnia Retail
  license:
    name: Omnia Retail API license
    url: https://www.omniaretail.com/legal/
servers:
  - url: https://api.patagona.de
    description: Production API
  - url: https://dev.patagona.de
    description: Staging API
tags:
  - name: overview
    x-displayName: Overview
    x-traitTag: true
    description: "Overview, explanation and pointers to the API documentation.\n\n# Introduction\n\nThe Omnia 2.0 API (also known as the Pricemonitor API) gives access to the superpowers behind the Omnia Retail platform.\n\nThe [Omnia 2.0 app](https://app.omniaretail.com/) and the [Pricemonitor app](https://pricemonitor.patagona.de/) are the main consumers of this API, but we also have endpoints available to customers to integrate the API directly with their own systems.\n\n# Common use cases for Omnia 2.0\n\nThese are the common API operations for customers to integrate Omnia with their own systems:\n\n- Retrieve market data\n- Retrieve price recommendations\n- Manage your product assortment\n- Provide offers for custom sources\n\n# Retrieving Data from the API\n\nOmnia supports four patterns for pulling data. Choose the one that best fits your latency and operational needs.\n\n| #     | Pattern                                  | When to use                                      |\n| ----- |------------------------------------------|--------------------------------------------------|\n| **1** | **Continuous polling** ***(preferred)*** | Near‑real‑time feed with minimal peak load       |\n| **2** | **Full data export**                     | Point‑in‑time snapshots or back‑fills            |\n| **3** | **Webhooks\_(callbacks)**                 | Push notifications after a price‑calculation run |\n| **4** | **Task‑based export**                    | Poll a *task* until `succeeded`, then fetch data |\n\n> **Why polling is preferred**\\\n> Continuous polling evens out traffic, avoids large \"catch‑up\" imports and delivers data as soon as it becomes available.\n\n---\n\n## 1. Continuous polling window logic\n\nAll polling examples use **15‑minute, aligned windows** and a **page size of 1,000 items**. This combination has proven to be the sweet‑spot between freshness and throughput.\n\n- **Alignment rule**\_– round the current time **down** to the nearest quarter hour (`:00`, `:15`, `:30`, `:45`).\\\n  *Example*: If it is `12:23`, the aligned time *T* is `12:15`.\n- **Window**\_– `endDate = T − 15 min`, `startDate = endDate − 15 min`.\n- **Next run**\_– repeat every 15 minutes; no need to persist `startDate` because it is derived from the current time.\n\n| Runtime | startDate | endDate |\n| ------- | --------- | ------- |\n| 12:00   | 11:30     | 11:45   |\n| 12:15   | 11:45     | 12:00   |\n| 12:30   | 12:00     | 12:15   |\n| …       | …         | …       |\n\n\n## 2. Full data export\n\nUse this pattern when you need the *entire* dataset for a specific point in time.\\\nCall the corresponding endpoint and page through the result set exactly as shown in the pagination section below.\n\n## 3. Webhooks\_(Callbacks)\n\nOmnia can send an HTTP\_POST callback as soon as a **price calculation task** finishes.\\\nThis push‑style integration is optional and complements the polling patterns.\n\n### Workflow\n\n1. **Register** an HTTPS endpoint **per contract** like described in the [Callback section](#tag/settings/Callbacks).\n2. When a price calculation task reaches the `succeeded` state, Omnia POSTs a JSON payload to your URL.\n3. Your service must respond with **HTTP\_2xx**.\n\n### Authentication\n\n\nYou can define custom headers for receiving callbacks. For example, Omnia can include a **Bearer token** in the `Authorization` header.\\\nAdvanced schemes are **not supported**.\n\n### Advantages\n\n- You receive a notification immediately after a price calculation is completed, avoiding the need for polling.\n\n### Limitations\n\n- **Single slot** – registering a new callback **replaces** the previous one; track your current value.\n- You must host an Internet‑reachable HTTPS endpoint.\n- Callbacks fire **only after price calculations**; there are none for market data scrapes or updates.\n- Only token‑based authentication is supported.\n\n> For the full payload schema and retry policy see the [Callback section](#tag/settings/Callbacks).\n\n## 4. Task‑based export\n\nA **task** is an asynchronous job such as *market data scrape* or *price calculation*.\n\n1. Poll the task endpoint until `state = succeeded` *(see the [Task section](#tag/tasks) for the exact status list).*\n2. Trigger a [full data export (pattern\_2)](#2-full-data-export) to download the result.\n\nRelevant task types:\n\n- `backend.tasks.pricemonitor.offers.monitoring`\_– market‑data retrieval\n- `backend.tasks.pricemonitor.offers.preprocessing`\_– price calculation\n\n# Retrieve market data via API\n\nUse `GET /api/v3/vendor/contracts/{contractId}/offers` to fetch the newest offers in the market as described [here](#operation/getOffersVendorV3).\n\n### Quick integration steps — Market data\n\n1. **Align to 15‑min window**\\\n   *T*\_=\_now rounded down to the nearest `:00 / :15 / :30 / :45`\\\n   `endDate = T − 15 min`, `startDate = endDate − 15 min`\n2. **Request**\\\n   `GET /api/v3/vendor/contracts/{contractId}/offers?startDate={startDate}&endDate={endDate}&limit=1000&start=0`\n3. **Page**\\\n   Repeat with `start=1000,2000,…` until the response contains < 1000 items.\n4. **Schedule**\\\n   Repeat every 15 minutes.\n\n# Retrieve price recommendations via API\n\nUse `GET /api/2/v/contracts/{contractId}/result/pricerecommendations` to fetch calculated prices as described [here](#operation/getPriceRecommendation).\n\n### Quick integration steps — Price recommendations\n\n1. **Align to 15‑min window** *(same logic as above)*\n2. **Request**\\\n   `GET /api/2/v/contracts/{contractId}/result/pricerecommendations?startTime={startDate}&endTime={endDate}&limit=1000&start=0`\n3. **Page**\\\n   Repeat with `start=1000,2000,…` until the response contains < 1000 items.\n4. **Schedule**\\\n   Repeat every 15 minutes.\n\n> **Tip** – Market data and price recommendations share the same window logic, so both polls can be executed by the same cron job.\n\n## Query products via API\n\nUse [this operation](#operation/queryProductsVendorV3) to retrieve products via a query. It supports returning paged results. We recommend to retrieve with a page size of 10,000 products.\n\n## Manage your product assortment\n\nUse [this operation](#operation/postProductsImportVendorV3) to upload your product assortment in JSON format. We recommend that you provide your product data in multiple parts via sequential requests to this endpoint. After providing all data, you need to delete the old data via [this operation](#operation/deleteProducts) by specifying a timestamp just before your import.\n\nIf you cannot use the JSON format, as a fallback, we support uploading your product assortment to our system in CSV format via [this operation](#operation/putProductsImportVendorV3).\n\n## Provide offers for custom sources\n\nUse [this operation](#operation/postOffersInABulkVendorV2) to provide external offers for your products to our system.\n\n# Pagination\n\nAPI endpoints can potentially return a lot of items. Returning all data as one response to one request can overload the server, the database or the client. Returning all items may even be unnecessary when the client is only interested in the top N entries. So API operations that could return a lot of data support pagination. The pagination approach used in the latest version of API operations is described here.\n\n## Pagination basics\n\nOperations that support pagination:\n\n- Return a subset of all matching items based on parameters in the request. Such a subset is called a page.\n- Return the requested page as an array within a `data` object within the response.\n- Can return all matching items by subsequently requesting multiple pages.\n\nThere are no subsequent matching items if the number of items in a response is smaller than the requested `limit`.\n\n### `limit` parameter\n\nThis parameter defines how many items are returned at most in a singe response. This is also called the page size.\n\nThe API documentation states the range that is allowed to be specified by the client.\n\n### `start` parameter\n\nThis parameter defines from which item in the total result set this request wants data to be returned. It basically defines what page should be returned. The index of the first item is 0\\. If the value of `start` is beyond the number of matching items, an empty `data` array is returned in the response.\n\nPagination itself only works when the entries have a stable sorting. This is the responsibility of the API.\n\n## Example of paginated requests\n\nTo request items with a page size of 1000, these are the pagination parameter values to be used for subsequent requests\n\nrequest # | start | limit\n--------- | ----- | -----\n1st       | 0     | 1000\n2nd       | 1000  | 1000\n3rd       | 2000  | 1000\n...       | ...   | ...\n\nSo the values for each subsequent request can be calculated by `start = previous start + limit`. All the other parameters of the API request must keep the same value to get stable sorting for a stable total result set.\n\nA response looks like this:\n\n```json\n{\n   \"data\": [\n      <item 1>,\n      <item 2>,\n      ...\n   ]\n}\n```\n\nThe client must compare the number of items in the `data` array with the used `limit` parameter. If they are equal there is likely a next page. If the number of items returned is less than the page size, there is no next page.\n\n> Note: In rare cases there is no next page even though the response has no less than a page size of items. E.g. when there are 2000 total items and using a page size of 1000\\. Here the client will make a request with `start=1000` and `limit=1000`. The response for this 2nd page request will have 1000 items. Then the client can't know in advance if there are further pages and it has to make an additional request. This third page request will return an empty array.\n\n# Authentication\n\nThe API supports two authentication methods with distinct use cases: _basic authentication_ and _JWT bearer token authentication_. For more details see below.\n\nIn short: for API integration with other systems or to explore the API, use _basic authentication_.\n\n## Basic authentication\n\n```\nSecurity Scheme Type: HTTP\nHTTP Authorization Scheme basic\n```\n\nUsed for:\n\n- API integration with other systems, like customer systems or plugins in webshops.\n- Exploring the API interactively via the API tester in the documentation.\n\n### Username\n\nThe username is the email address of a user account in _Omnia 2.0_ or _Pricemonitor_.\n\n### Password\n\nThe API password is:\n\n- Generated for _Omnia 2.0_ users via the _API access_ feature. Available in the user drop down menu top right in the Omnia 2.0 application.\n- For _Pricemonitor_ users the same password they use to sign in to Pricemonitor.\n\n> Note: For Omnia 2.0 users the API password is a different password than what is used for interactive logon to the web application. Also Single-Sign On users can generate an API password via the API access feature in Omnia 2.0.\n\n## JWT bearer token authentication\n\n```\nSecurity Scheme Type: HTTP\nHTTP Authorization Scheme bearer\nBearer format: \"JWT\"\n```\n\nUsed for:\n\n- The Omnia 2.0 web application to communicate with the API.\n\n> Note: This method is not usable for API integrations by customers as the tokens can only be obtained through interactive logon to the Omnia 2.0 web application by a person. These tokens expire quickly (they are valid for a maximum of 24 hours).\n"
  - name: products
    x-displayName: Products Management
    description: >-
      Operations to manage your products.


      # Import products


      We have two options: Either you provide the products as
      [JSON](#operation/postProductsImportVendorV3) or as
      [CSV](#operation/putProductsImportVendorV3). The product import via
      [JSON](#operation/postProductsImportVendorV3) is recommended.


      Notes:

      - When importing products, you need to provide an unique product
      identifier. We only allow importing products when they can be uniquely
      identified. In the very past we solely relied on GTIN for that, but not
      all customers have a GTIN. So we introduced the generic concept of the
      unique product identifier.

      - When importing products, you can additionally provide _tags_. These tags
      are key/value pairs (custom fields) which can be used to categorize your
      products: E.g. you could add the brand of the product.<br />The tag names
      need to be unique and non-empty.

      - In some endpoints we use caching for up to 5 minutes. So your newly
      imported products might need up to 5 minutes to get visible.

      - Timing is important: It's recommended to import products during a period
      when no monitorings are scheduled. Otherwise, the monitoring does not
      cover the most recently added products. A subsequent monitoring run will
      cover the previously added products.


      ## Recommended tags


      To get the most value out of the Omnia 2.0 insights dashboards, we
      recommend to include the following tag-keys in your imports. These product
      attributes can be used to drill-down into market and pricing insights.


      | Key | Description of value |

      | ---- | ------------------- |

      | brand | Values should include the brand of the respective product |

      | sku | If available, you can also include the stock keeping unit
      identifier |

      | amountInStock |  If available, you can also include the current stock
      level of each product |

      | topCategory  | Your product categories, highest level |

      | midCategory  | Your product categories, mid level |

      | lowCategory  |  Your product categories, lowest level |

      | purchasePrice | The purchase price of your product |

      | imageUrl | A url containing an image of your product |

      | logisticalCost | The logistical cost of your product |

      | recommendSellingPrice | The manufacturer suggested retail price or
      recommended retail price of your product |

      | vat | The Value Added Tax (VAT) for your product |


      Notes:

      - These fields are not mandatory for a successful import. They are
      optional, but recommended, to get the most value out of the insights in
      the UI of Omnia 2.0. If you intend to use them in the recommended way

      - The keys for the tags are case sensitive, so specify exactly as above.


      ## Import products via JSON (recommended)


      The preferred way to import products via API is via
      [JSON](#operation/postProductsImportVendorV3).


      This operation adds products to our system using _upsert_ (insert or
      update). It needs to be used in conjunction with a timestamp-based
      [product deletion operation](#operation/deleteProducts).


      The delete makes sure that old products, which are not part of your
      assortment anymore, are dropped from the system.


      Typical usage pattern:

      1. Remember the current time in UTC

      2. [Add products in chunks](#operation/postProductsImportVendorV3).
      Recommended chunk size: 1,000 products

      3. [Delete old products](#operation/deleteProducts) that are not needed in
      the system anymore by the timestamp from step 1 minus some extra buffer,
      e.g. one minute.


      ## Import products via CSV (not recommended)


      In order to provide products to our system you can send a CSV file via
      [this operation](#operation/putProductsImportVendorV3). This endpoint
      deactivates all current products and activates the ones which are provided
      via CSV.


      This creates a "task" at our side. Tasks are processed asynchronously.
      Typically, a big product import with 500K products takes 5-10 minutes. The
      mentioned endpoint returns a task id and a url where you can check the
      task state. Possible task states are: pending, executing, failed and
      succeeded. The last two states are representing a completed task. The task
      itself contains more details about how many products could get imported,
      which ones failed plus a preview failure list.


      When the product import successfully completed then the previously
      imported products have been deleted and only the ones which you have
      provided via CSV file are active in our system.


      # Query products


      Use [this operation](#operation/queryProductsVendorV3) to retrieve
      products via a query you specify in the request. It supports returning
      paged results. We recommend to retrieve with a page size of up to 10,000
      products.


      # Get all products


      Use [the query operation](#operation/queryProductsVendorV3) and just omit
      the query filter in the request. Results are paginated. A page size of at
      most 10,000 is recommended.


      # Determine internal product ids from your product ids


      Our system uses internal product ids that are distinct from your products
      ids. These internal product ids are sometimes referred to as
      _pricemonitor_ product ids.


      Often API operations require internal product ids to be specified. So you
      may need to map your product id onto our internal product id.


      There are two options:

      - Either you store the internal product ids after [importing
      products](#operation/postProductsImportVendorV3) into our system. The
      import operation returns the internal product ids for each imported
      product.

      - Or you map product ids on the fly when you need to by
      [querying](#operation/queryProductsVendorV3) specifying your product ids
      in the query. It's recommended to specify 1,000 product ids at once.
  - name: pricerecommendations
    x-displayName: Price Recommendations
    description: >
      Operations to get price recommendations calculated by our system.


      # Price recommendations and multiple domains


      > Note:

      > 1. Internally the system calculates a price recommendation for every
      domain

      > 2. As aggregation the system then provides the cheapest price
      recommendation

      >

      > Within the price recommendations we are providing a field called
      `relevantDomain`. This field contains from which domain the price
      recommendation originates.


      # Retrieve price recommendations


      ## Getting all price recommendations


      You can get all price recommendations via [this
      operation](#operation/getPriceRecommendation).


      It's a paginated endpoint, so you have to request multiple pages. See
      [pagination](#section/Pagination). Recommended page size is 1000.


      It's important that you define a timerange (by providing `startTime` and
      `endTime` parameters) in order to guarantee a stable pagination. This
      endpoint returns the most recent price recommendations per product and
      domain: This means that price recommendations from older price calculation
      runs within the provided timerange are ignored.
  - name: offers
    x-displayName: Offers
    description: "Operations to get and manage offers.\n\n# Provide offers for custom sources\n\nUse [this operation](#operation/postOffersInABulkVendorV2) to provide external offers for your products to our system.\nIt serves as an alternative to our automatic [domain-wise](#tag/domains) market data monitoring.\n\nTo use this operation, you need Omnia's internal product IDs.\nSee [how to determine internal product IDs](#tag/products).\n\n## Example\n\nHere is an example of a JSON body to provide one offer for one product via API.\n\n<details>\n<summary>Click to expand</summary>\n\n``` json\n[{\n\t\"productId\": \"67784570\",\n\t\"creationDate\": \"2024-06-11T00:15:07.099Z\",\n\t\"domain\": \"google.de\",\n\t\"offers\": [{\n\t\t\"vendorName\": \"amazon.de\",\n\t\t\"vendorDomainId\": 1,\n\t\t\"url\": \"https://www.amazon.de/-/en/dp/013142467X/\",\n\t\t\"price\": 58.84,\n\t\t\"deliveryCosts\": 9.95,\n\t\t\"currency\": \"EUR\",\n\t\t\"id\": \"636354d0-c865-4c56-84b3-bd9172e826aa\",\n\t\t\"productName\": \"Test item\",\n\t\t\"attributes\": [{\n\t\t\t\"key\": \"size\",\n\t\t\t\"value\": \"L\"\n\t\t}],\n\t\t\"maxDeliveryHours\": 48,\n\t\t\"minDeliveryHours\": 12,\n\t\t\"retrievalDate\": \"2024-06-11T10:50:45.659Z\",\n\t\t\"availability\": true\n\t}]\n}]\n```\n\n</details>\n\n## How It Works\n\nThis endpoint allows you to submit market data (\"offers\") for your products in bulk.\nOffers are submitted as *snapshots*.\n\nA **snapshot** is defined as:\n\n- a product\n- a domain (where the offers come from)\n- a timestamp\n- and a complete list of corresponding offers at that moment\n\nSnapshots form a **linear history** per product and domain.\nThat means:\n\n- You can only submit **newer** snapshots than the ones already stored.\n- Each snapshot must contain **all** relevant offers for that product + domain at that timestamp.\n- This endpoint is **append-only** - no edits or deletions of past offers are allowed.\n\nInternally, only the most recent snapshot is considered per product + domain, e.g., for price calculation or analytics.\n\nSnapshots are processed immediately after being accepted.\n\n## When to Send Offers\n\n- A regular daily import is a solid default.\n- Ideally submit offers before a price calculation tasks runs to ensure that recommended prices are based on up-to-date\n  data.\n- Real-time ingestion is supported.\n\n## Best Practices\n\n- Send up to **1,000 snapshots per request**.\n- Check if all snapshots are processed successfully by [analyzing the response](#response-interpretation).\n- Avoid single-snapshot requests if possible - batch requests are typically more efficient and faster.\n- Deduplicate and validate on the client side if possible.\n- Only include complete snapshots (i.e. all relevant offers for the product and domain at that time).\n- Avoid sending duplicate snapshots (e.g. previously stored ones), as they will be rejected.\n\n## Response Interpretation\n\nAnalyzing the response helps you quickly spot and fix invalid snapshots.\nSince each snapshot is validated separately, some may be accepted while others are rejected.\nResponses follow the same order as your input, so you can match and debug them easily.\n\nThe response is an array with one result per snapshot, matching the order of your input.\n\nEach item is either:\n\n- `true`: Snapshot accepted and stored.\n- An `ApiErrorResponse` object with details about the failure.\n\nThis allows you to match (`zip`) each response to your original input array.\n\nCommon reasons for rejection:\n\n- Product not part of the contract\n- Snapshot is older than what’s already stored\n- Conflicting snapshots submitted in same request\n- Invalid domain format\n- Duplicate offer IDs\n- Negative price or delivery costs\n\n## What Is a Domain?\n\n<details>\n<summary>Click to expand</summary>\n\nA **domain** is the origin of the offers. It refers to a website name - not a full URL.\nFor example, in `https://example.com/page`, the domain is `example.com`.\n\nExpected format:\n\n- Only use lowercase letters (`a–z`), digits (`0–9`), periods (`.`), and hyphens (`-`)\n- Each label (part between periods) must:\n    - Be 1-63 characters long\n    - Start and end with an alphanumeric character\n    - Not contain consecutive periods\n    - Not start or end with a hyphen\n- Total domain length must not exceed 255 characters\n\n**Examples**:\nValid: `example.com`, `shop.example.co.uk`\nInvalid: `-example.com`, `example..com`, `example_.com`, `example-.com`\n\n</details>\n\n# Retrieve offers\n\nUse [this operation](#operation/getOffersVendorV3) to get all offers for a contract. It's a paginated endpoint, so you have to scroll through all offers.\n\nIt's important that you define a timerange (by providing `startDate` and `endDate` parameters) in order to guarantee a stable pagination.\n\nThis endpoint returns the most recent offers per product and domain: This means that offers from older monitoring runs within the provided timerange are ignored.\n\n## Continuously retrieving offers\n\nFor continuously getting market data we recommend the following usage pattern:\n\nGet the offers for the last 15 minutes with a time offset of 15 minutes.\n\n| Runtime Timestamp | startDate | endDate |\n| ----------------- | --------- | ------- |\n| 12:00 | 11:30 | 11:45 |\n| 12:15 | 11:45 | 12:00 |\n| 12:30 | 12:00 | 12:15 |\n| …                     |\n\n> Note: The time offset is important since offers are not immediately visible via the API. Sometimes there is a slight delay in offer storing.\n\n\n\n\n\n"
  - name: feeds
    x-displayName: Feeds Management
    description: Manage your data-feeds.
  - name: account
    x-displayName: Users Management
    x-audience: Internal
    description: >-
      Operations to manage user accounts.


      This includes sign up, log in, and log out. Primarily used for user
      management.


      > Note: these operations should not be directly used by customers, but by
      the platform itself or by customers through the UI.
  - name: logs
    x-displayName: Logs Management
    description: >-
      Operations to store log messages in the system.


      You can integrate this API into your own system and publish integration
      logs to the system so that Omnia Retail can analyze them.
  - name: companies
    x-displayName: Company Management
    description: >-
      Operations for managing company entities, including creation, retrieval,
      and contract management.
  - name: orders
    x-displayName: Orders Management
    description: >-
      Operations for managing orders, including bulk order imports and order
      tracking.
  - name: settings
    x-displayName: Settings Management
    description: >
      Operations to manage the settings of contracts.

      Only a limited number of these operations are available to customers
      directly.


      # Callbacks


      You can register HTTP(S) callbacks in Omnia 2.0, which function as
      webhooks.

      Callbacks are triggered at the contract level when specific events occur
      within the system.


      Please note that multiple parties can register callbacks, so when
      modifying callbacks,

      you must ensure that you do not overwrite or delete callbacks registered
      by other parties.

      We strongly recommend including a unique name for each callback to help
      you identify them later.


      Callbacks are executed asynchronously as [tasks](#tag/tasks) within our
      system.

      To monitor the execution of these callbacks,

      you can track the corresponding tasks with the task type
      backend.tasks.pricemonitor.callback.


      For added security, you can register a token with your callback and/or
      whitelist our IP range

      to ensure secure communication.
  - name: tasks
    x-displayName: Tasks Management
    description: >-
      Operations to view and manage the tasks running in the platform. Customers
      can only view tasks.


      # What tasks are


      Tasks are asynchronously handled jobs in our system, like price
      calculation or monitoring jobs.


      You can use [this operation to find tasks for a
      contract](#operation/getTasksVendorV2).


      # Price calculation tasks


      A use case for the find tasks operation is to get the most recent
      completed price calculation task to see if it was successful or failed.
      And if it failed, what the failures were.


      ### Finding most recent price calculation tasks


      If you want to find the most recent completed price calculation task you
      need the following query parameters:


      ```

      limit=1

      includeFailures=true

      taskTypeFilter=backend.tasks.pricemonitor.offers.preprocessing

      taskState=succeeded,failed    // this only returns completed tasks.
      Currently running tasks are ignored

      ```


      Optional: You might want to adjust the queried timerange and specify
      `minCreationDate` and `maxCreationDate`. By default all tasks ever are
      queried.



      It can happen that there no price calculation has been run yet, then an
      empty list of tasks is returned.


      Apart from that these are the possible task states:


      | Task state | Description |

      | ---------- | ----------- |

      | succeeded | At least for one product a price calculation has been
      calculated |

      | failed | Either all price calculations for every product failed OR the
      whole price calculation process failed due to an unexpected error |


      If there are price calculation failures on a product level, you find the
      dedicated failures in the failures array of the task. Be aware: at most
      1000 failures are returned.


      If you want to have statistics for how many products a price has been
      calculated and how many price calculations failed on product level, then
      please take a look at the `result.operations.<successful/failed/total>`
      fields in the response.


      When a task completely fails then the response also provides a
      `failureCode` that is of interest.


      ### Example Responses


      #### Successful task


      <details>

      <summary>Click to expand</summary>


      ``` json

      {
        "state":"succeeded",
        "data":{
          "startTimestamp":"2023-05-08T14:40:00.213Z"
        },
        "result":{
          "operations":{
            "successful":28444,
            "failed":0,
            "total":28444
          }
        },
        "contractId":"gj8qu6",
        "failures":[

        ],
        "creationDate":"2023-05-08T15:41:46.545Z",
        "taskType":"backend.tasks.pricemonitor.offers.preprocessing",
        "finishDate":"2023-05-08T15:44:58.853Z",
        "userId":2156,
        "startDate":"2023-05-08T15:41:46.555Z",
        "taskId":"gj8qu6:1e318eee-3217-4ee7-a380-c6312935dcd1"
      }

      ```

      </details>


      #### Successful task with failures for some products


      <details>

      <summary>Click to expand</summary>


      ``` json

      {
        "state":"succeeded",
        "data":{
          "startTimestamp":"2023-05-07T10:05:00.230Z"
        },
        "result":{
          "operations":{
            "successful":2737,
            "failed":24,
            "total":2761
          }
        },
        "contractId":"f8kfq5",
        "failures":[
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282163",
              "exceptionMessage":"Can't modify min price to 21.6 since it violates the current boundary PriceBoundary(24.00,24.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57316814",
              "exceptionMessage":"Can't modify min price to 35.1 since it violates the current boundary PriceBoundary(35.15,39.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282223",
              "exceptionMessage":"Can't modify min price to 35.1 since it violates the current boundary PriceBoundary(35.15,39.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282324",
              "exceptionMessage":"Can't modify min price to 31.5 since it violates the current boundary PriceBoundary(32.18,35.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282861",
              "exceptionMessage":"Can't modify min price to 35.1 since it violates the current boundary PriceBoundary(35.15,39.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282118",
              "exceptionMessage":"Can't modify min price to 26.1 since it violates the current boundary PriceBoundary(27.73,29.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282152",
              "exceptionMessage":"Can't modify min price to 35.1 since it violates the current boundary PriceBoundary(35.15,39.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57316468",
              "exceptionMessage":"Can't modify min price to 521.1 since it violates the current boundary PriceBoundary(529.00,579.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282300",
              "exceptionMessage":"Can't modify min price to 4769.1 since it violates the current boundary PriceBoundary(4916.84,5299.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57317261",
              "exceptionMessage":"Can't modify min price to 125.10000000000001 since it violates the current boundary PriceBoundary(129.00,139.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282345",
              "exceptionMessage":"Can't modify min price to 1205.1000000000001 since it violates the current boundary PriceBoundary(1299.00,1339.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282464",
              "exceptionMessage":"Can't modify min price to 152.1 since it violates the current boundary PriceBoundary(162.84,169.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282168",
              "exceptionMessage":"Can't modify min price to 836.1 since it violates the current boundary PriceBoundary(899.00,929.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282165",
              "exceptionMessage":"Can't modify min price to 1205.1000000000001 since it violates the current boundary PriceBoundary(1299.00,1339.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282895",
              "exceptionMessage":"Can't modify min price to 1205.1000000000001 since it violates the current boundary PriceBoundary(1299.00,1339.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282307",
              "exceptionMessage":"Can't modify min price to 1205.1000000000001 since it violates the current boundary PriceBoundary(1299.00,1339.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282002",
              "exceptionMessage":"Can't modify min price to 332.1 since it violates the current boundary PriceBoundary(349.00,369.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282399",
              "exceptionMessage":"Can't modify min price to 1025.1000000000001 since it violates the current boundary PriceBoundary(1099.00,1139.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282374",
              "exceptionMessage":"Can't modify min price to 1025.1000000000001 since it violates the current boundary PriceBoundary(1099.00,1139.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282694",
              "exceptionMessage":"Can't modify min price to 836.1 since it violates the current boundary PriceBoundary(899.00,929.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282155",
              "exceptionMessage":"Can't modify min price to 836.1 since it violates the current boundary PriceBoundary(899.00,929.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282271",
              "exceptionMessage":"Can't modify min price to 836.1 since it violates the current boundary PriceBoundary(899.00,929.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282087",
              "exceptionMessage":"Can't modify min price to 1025.1000000000001 since it violates the current boundary PriceBoundary(1099.00,1139.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"57282489",
              "exceptionMessage":"Can't modify min price to 1025.1000000000001 since it violates the current boundary PriceBoundary(1099.00,1139.00)"
            }
          }
        ],
        "creationDate":"2023-05-09T10:05:00.230Z",
        "taskType":"backend.tasks.pricemonitor.offers.preprocessing",
        "finishDate":"2023-05-09T10:05:20.095Z",
        "userId":2156,
        "startDate":"2023-05-09T10:05:00.238Z",
        "taskId":"f8kfq5:44680e2e-2458-4a64-b8a4-edfd5fb2517f"
      }

      ```

      </details>


      #### Failed task with failures for all products


      <details>

      <summary>Click to expand</summary>



      ``` json

      {
        "state":"failed",
        "data":{
          "startTimestamp":"2023-05-09T04:00:02.974Z"
        },
        "result":{
          "operations":{
            "successful":0,
            "failed":93,
            "total":93
          }
        },
        "failureCode":"user.preprocessing.strategy.failure",
        "contractId":"tujamm",
        "failures":[
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"88673055",
              "exceptionMessage":"Can't modify max price to 0.0 since it violates the current boundary PriceBoundary(358.6128,1000000.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328105",
              "exceptionMessage":"Can't modify max price to 15.6975 since it violates the current boundary PriceBoundary(15.743,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328438",
              "exceptionMessage":"Can't modify max price to 62.947500000000005 since it violates the current boundary PriceBoundary(68.614,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328838",
              "exceptionMessage":"Can't modify max price to 9.397499999999999 since it violates the current boundary PriceBoundary(11.793600000000001,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356778",
              "exceptionMessage":"Can't modify max price to 555.45 since it violates the current boundary PriceBoundary(667.3758,1049.0)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763642",
              "exceptionMessage":"Can't modify max price to 335.9475 since it violates the current boundary PriceBoundary(402.94800000000004,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356961",
              "exceptionMessage":"Can't modify max price to 1154.9895000000001 since it violates the current boundary PriceBoundary(1340.1752000000001,2199.0)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68329414",
              "exceptionMessage":"Can't modify max price to 12.5475 since it violates the current boundary PriceBoundary(17.654,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763669",
              "exceptionMessage":"Can't modify max price to 10.4475 since it violates the current boundary PriceBoundary(15.2152,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328448",
              "exceptionMessage":"Can't modify max price to 98.64750000000001 since it violates the current boundary PriceBoundary(102.284,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68756226",
              "exceptionMessage":"Can't modify max price to 131.19750000000002 since it violates the current boundary PriceBoundary(152.3158,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328748",
              "exceptionMessage":"Can't modify max price to 4.1475 since it violates the current boundary PriceBoundary(4.2042,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"87832326",
              "exceptionMessage":"Can't modify max price to 12.5475 since it violates the current boundary PriceBoundary(16.1252,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68329058",
              "exceptionMessage":"Can't modify max price to 2.0475 since it violates the current boundary PriceBoundary(2.0566,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328749",
              "exceptionMessage":"Can't modify max price to 8.3475 since it violates the current boundary PriceBoundary(12.1394,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68329108",
              "exceptionMessage":"Can't modify max price to 46.14750000000001 since it violates the current boundary PriceBoundary(47.502,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356678",
              "exceptionMessage":"Can't modify max price to 418.95000000000005 since it violates the current boundary PriceBoundary(508.5262000000001,789.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"79044179",
              "exceptionMessage":"Can't modify max price to 16.7475 since it violates the current boundary PriceBoundary(19.747,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328597",
              "exceptionMessage":"Can't modify max price to 125.9475 since it violates the current boundary PriceBoundary(130.13,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763724",
              "exceptionMessage":"Can't modify max price to 12.600000000000001 since it violates the current boundary PriceBoundary(14.7056,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328344",
              "exceptionMessage":"Can't modify max price to 62.947500000000005 since it violates the current boundary PriceBoundary(63.7,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78762366",
              "exceptionMessage":"Can't modify max price to 1101.45 since it violates the current boundary PriceBoundary(1397.4142,1649.0)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"84641852",
              "exceptionMessage":"Can't modify max price to 31.4475 since it violates the current boundary PriceBoundary(39.13,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763514",
              "exceptionMessage":"Can't modify max price to 272.9475 since it violates the current boundary PriceBoundary(292.929,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78762367",
              "exceptionMessage":"Can't modify max price to 99.75 since it violates the current boundary PriceBoundary(103.77640000000001,139.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68327996",
              "exceptionMessage":"Can't modify max price to 68.1975 since it violates the current boundary PriceBoundary(71.8354,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68373053",
              "exceptionMessage":"Can't modify max price to 19.8975 since it violates the current boundary PriceBoundary(20.4932,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68865365",
              "exceptionMessage":"Can't modify max price to 488.25 since it violates the current boundary PriceBoundary(560.7420000000001,869.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328261",
              "exceptionMessage":"Can't modify max price to 57.697500000000005 since it violates the current boundary PriceBoundary(75.69380000000001,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68373051",
              "exceptionMessage":"Can't modify max price to 2.0475 since it violates the current boundary PriceBoundary(3.6946,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78762370",
              "exceptionMessage":"Can't modify max price to 2623.9500000000003 since it violates the current boundary PriceBoundary(3310.7984,3799.0)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78764192",
              "exceptionMessage":"Can't modify min price to 0.0 since it violates the current boundary PriceBoundary(0.01,1000000.00)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356770",
              "exceptionMessage":"Can't modify max price to 523.95 since it violates the current boundary PriceBoundary(606.2420000000001,949.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68566764",
              "exceptionMessage":"Can't modify max price to 3.0975 since it violates the current boundary PriceBoundary(3.5126,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"82558573",
              "exceptionMessage":"Can't modify max price to 13.5975 since it violates the current boundary PriceBoundary(22.677200000000003,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"71348897",
              "exceptionMessage":"Can't modify max price to 110.25 since it violates the current boundary PriceBoundary(130.40300000000002,159.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356779",
              "exceptionMessage":"Can't modify max price to 523.95 since it violates the current boundary PriceBoundary(597.324,929.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763130",
              "exceptionMessage":"Can't modify max price to 262.4475 since it violates the current boundary PriceBoundary(297.479,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328608",
              "exceptionMessage":"Can't modify max price to 15.6975 since it violates the current boundary PriceBoundary(18.436600000000002,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356767",
              "exceptionMessage":"Can't modify max price to 450.45000000000005 since it violates the current boundary PriceBoundary(484.66600000000005,759.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328114",
              "exceptionMessage":"Can't modify max price to 62.947500000000005 since it violates the current boundary PriceBoundary(65.52,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"88113739",
              "exceptionMessage":"Can't modify max price to 2.0475 since it violates the current boundary PriceBoundary(26.499200000000002,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"82891765",
              "exceptionMessage":"Can't modify max price to 104.9475 since it violates the current boundary PriceBoundary(164.10940000000002,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356775",
              "exceptionMessage":"Can't modify max price to 498.75 since it violates the current boundary PriceBoundary(570.9522,889.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67357075",
              "exceptionMessage":"Can't modify max price to 82.95 since it violates the current boundary PriceBoundary(100.71880000000002,119.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328424",
              "exceptionMessage":"Can't modify max price to 141.6975 since it violates the current boundary PriceBoundary(202.02,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356784",
              "exceptionMessage":"Can't modify max price to 119.7 since it violates the current boundary PriceBoundary(144.01659999999998,169.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763163",
              "exceptionMessage":"Can't modify max price to 57.697500000000005 since it violates the current boundary PriceBoundary(58.80420000000001,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763355",
              "exceptionMessage":"Can't modify max price to 15.6975 since it violates the current boundary PriceBoundary(16.616600000000002,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78762365",
              "exceptionMessage":"Can't modify max price to 681.45 since it violates the current boundary PriceBoundary(883.2278000000001,989.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"79044161",
              "exceptionMessage":"Can't modify max price to 9.397499999999999 since it violates the current boundary PriceBoundary(2682.6800000000003,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"79809361",
              "exceptionMessage":"Can't modify max price to 16.7475 since it violates the current boundary PriceBoundary(21.2394,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356786",
              "exceptionMessage":"Can't modify max price to 488.25 since it violates the current boundary PriceBoundary(560.7420000000001,879.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68329134",
              "exceptionMessage":"Can't modify max price to 16.7475 since it violates the current boundary PriceBoundary(32.123,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328205",
              "exceptionMessage":"Can't modify max price to 102.84750000000001 since it violates the current boundary PriceBoundary(119.70139999999999,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763330",
              "exceptionMessage":"Can't modify max price to 5.197500000000001 since it violates the current boundary PriceBoundary(8.5722,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763539",
              "exceptionMessage":"Can't modify max price to 125.9475 since it violates the current boundary PriceBoundary(133.2968,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763512",
              "exceptionMessage":"Can't modify max price to 24.0975 since it violates the current boundary PriceBoundary(31.668,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328857",
              "exceptionMessage":"Can't modify max price to 31.4475 since it violates the current boundary PriceBoundary(37.1826,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78762372",
              "exceptionMessage":"Can't modify max price to 114.45 since it violates the current boundary PriceBoundary(145.16320000000002,169.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328455",
              "exceptionMessage":"Can't modify max price to 136.4475 since it violates the current boundary PriceBoundary(192.37400000000002,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68647965",
              "exceptionMessage":"Can't modify max price to 26.1975 since it violates the current boundary PriceBoundary(27.937,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356782",
              "exceptionMessage":"Can't modify max price to 376.95 since it violates the current boundary PriceBoundary(397.54260000000005,619.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"79431469",
              "exceptionMessage":"Can't modify max price to 15.6975 since it violates the current boundary PriceBoundary(31.8136,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763460",
              "exceptionMessage":"Can't modify max price to 38.79750000000001 since it violates the current boundary PriceBoundary(134.64360000000002,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763601",
              "exceptionMessage":"Can't modify max price to 29.3475 since it violates the current boundary PriceBoundary(29.9936,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356833",
              "exceptionMessage":"Can't modify max price to 523.95 since it violates the current boundary PriceBoundary(617.9264,959.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68044131",
              "exceptionMessage":"Can't modify max price to 292.95 since it violates the current boundary PriceBoundary(364.6734,419.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"74301166",
              "exceptionMessage":"Can't modify max price to 166.95000000000002 since it violates the current boundary PriceBoundary(221.40300000000002,9999.0)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68329019",
              "exceptionMessage":"Can't modify max price to 6.2475000000000005 since it violates the current boundary PriceBoundary(12.776399999999999,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356722",
              "exceptionMessage":"Can't modify max price to 866.25 since it violates the current boundary PriceBoundary(1092.8736000000001,1249.0)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78764189",
              "exceptionMessage":"Can't modify max price to 52.447500000000005 since it violates the current boundary PriceBoundary(56.27440000000001,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78764000",
              "exceptionMessage":"Can't modify max price to 2.0475 since it violates the current boundary PriceBoundary(5.6602,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356768",
              "exceptionMessage":"Can't modify max price to 488.25 since it violates the current boundary PriceBoundary(560.924,879.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68329149",
              "exceptionMessage":"Can't modify max price to 20.9475 since it violates the current boundary PriceBoundary(23.0958,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"82278909",
              "exceptionMessage":"Can't modify max price to 69.2475 since it violates the current boundary PriceBoundary(114.66000000000001,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68647966",
              "exceptionMessage":"Can't modify max price to 26.1975 since it violates the current boundary PriceBoundary(27.937,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763897",
              "exceptionMessage":"Can't modify max price to 16.7475 since it violates the current boundary PriceBoundary(17.1444,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"75351547",
              "exceptionMessage":"Can't modify max price to 109.2 since it violates the current boundary PriceBoundary(128.856,239.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763641",
              "exceptionMessage":"Can't modify max price to 52.447500000000005 since it violates the current boundary PriceBoundary(60.06,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328459",
              "exceptionMessage":"Can't modify max price to 36.697500000000005 since it violates the current boundary PriceBoundary(45.427200000000006,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68328752",
              "exceptionMessage":"Can't modify max price to 20.9475 since it violates the current boundary PriceBoundary(22.8592,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763678",
              "exceptionMessage":"Can't modify max price to 204.6975 since it violates the current boundary PriceBoundary(278.46000000000004,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"74301169",
              "exceptionMessage":"Can't modify max price to 261.45 since it violates the current boundary PriceBoundary(327.63640000000004,389.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68329012",
              "exceptionMessage":"Can't modify max price to 20.9475 since it violates the current boundary PriceBoundary(23.605400000000003,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"78763855",
              "exceptionMessage":"Can't modify max price to 13.5975 since it violates the current boundary PriceBoundary(17.672200000000004,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"81749897",
              "exceptionMessage":"Can't modify max price to 292.95 since it violates the current boundary PriceBoundary(326.5262,529.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67357159",
              "exceptionMessage":"Can't modify max price to 156.45000000000002 since it violates the current boundary PriceBoundary(225.8074,229.99)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356769",
              "exceptionMessage":"Can't modify max price to 603.75 since it violates the current boundary PriceBoundary(692.3462000000001,1089.0)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68329423",
              "exceptionMessage":"Can't modify max price to 10.4475 since it violates the current boundary PriceBoundary(10.92,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"68327990",
              "exceptionMessage":"Can't modify max price to 146.9475 since it violates the current boundary PriceBoundary(148.3664,2701.87)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"67356697",
              "exceptionMessage":"Can't modify max price to 1395.45 since it violates the current boundary PriceBoundary(1826.7340000000002,1999.0)"
            }
          },
          {
            "messageId":"ProcessingFailure",
            "attributes":{
              "productId":"87832348",
              "exceptionMessage":"Can't modify max price to 10.4475 since it violates the current boundary PriceBoundary(15.834,2701.87)"
            }
          }
        ],
        "creationDate":"2023-05-09T04:00:53.558Z",
        "taskType":"backend.tasks.pricemonitor.offers.preprocessing",
        "finishDate":"2023-05-09T04:00:59.213Z",
        "userId":2156,
        "startDate":"2023-05-09T04:00:54.677Z",
        "taskId":"tujamm:49329f97-62ff-4c65-89af-062432e82095"
      }

      ```

      </details>


      #### Unexpected failed task


      <details>

      <summary>Click to expand</summary>


      ``` json

      {
        "state":"failed",
        "data":{
          "startTimestamp":"2023-05-09T08:00:01.217Z"
        },
        "failureCode":"pricemonitor.uncategorized.failure",
        "contractId":"97j8f7",
        "failures":[
          {
            "messageId":"backend.tasks.pricemonitor.offers.preprocessing.unknownFailure",
            "attributes":{
              "error":"backend.tasks.pricemonitor.offers.preprocessing.unknownFailure",
              "exception":"scala.MatchError",
              "exceptionMessage":"null"
            }
          }
        ],
        "creationDate":"2023-05-09T09:09:18.888Z",
        "taskType":"backend.tasks.pricemonitor.offers.preprocessing",
        "finishDate":"2023-05-09T09:09:19.010Z",
        "userId":2156,
        "startDate":"2023-05-09T09:09:18.898Z",
        "taskId":"97j8f7:9a026a7a-5195-4cc4-b6b5-ceeb8cb431fa"
      }

      ```

      </details>
  - name: strategy
    x-displayName: Strategies Management
    description: Operations to view and manage pricing strategies.
  - name: scenariostrategy
    x-displayName: Scenario Strategies Management
    x-audience: Internal
    description: Operations to manage scenario strategies for pricing simulations.
  - name: domains
    x-displayName: Domains
    description: >-
      Operations to view all supported domains.


      A domain is an external datasource or website that contains information
      about offers for products for sale. Information like product
      characteristics and sales characterics like price, stock level and
      delivery times and costs.
  - name: controlpanel
    x-displayName: Control Panel
    x-audience: Internal
    description: Administrative operations used by the control panel interface.
  - name: feature-flags
    x-displayName: Feature Flags
    x-audience: Internal
    description: >-
      Administrative operations to manage feature flags for controlling
      application features.
  - name: pluginregistration
    x-displayName: Plugin Registration
    description: Operations to view and manage registered plugins for system integration.
  - name: looker
    x-displayName: Looker
    x-audience: Internal
    description: Operations to manage Looker dashboards and analytics integration.
  - name: amazon-integration
    x-displayName: Amazon Integration
    x-audience: Internal
    description: Operations to manage Amazon integration and marketplace connectivity.
  - name: monitoring-schedules
    x-displayName: Monitoring Schedules
    x-audience: Internal
    description: Operations to manage monitoring schedules for automated price monitoring.
  - name: preprocessing
    x-displayName: Pre-processing
    x-audience: Internal
    description: Operations to manage data pre-processing pipelines and tasks.
  - name: vendor-shop-mapping
    x-displayName: Vendor Shop Mapping
    x-audience: Internal
    description: Operations to manage vendor shop mappings and associations.
  - name: deprecated
    x-displayName: Deprecated
    x-audience: Internal
    description: >-
      **⚠️ DEPRECATED:** All operations that are deprecated and should no longer
      be used, including internal usage.
  - name: internal
    x-displayName: Internal Only
    x-audience: Internal
    description: >-
      **🔒 INTERNAL:** All operations not intended for direct consumption by
      customers.


      > Note: Used exclusively by the platform itself and internal systems.
  - name: undocumented
    x-displayName: Undocumented
    x-audience: Internal
    description: >-
      **📝 UNDOCUMENTED:** All operations that are not yet fully documented.


      > Note: All operations intended for public usage should be properly
      documented.
  - name: SchedulerOverview
    description: >-
      The Scheduler API operations allow for creating, updating, deleting and
      listing jobs for a contract.


      One can create jobs which get executed on a given schedule. The possible
      types for a job are fixed and defined in the `patagona-scheduler-core`.
      See the [README](https://github.com/patagona/scheduler) for more
      information.


      **Note:**  Scheduling job types unknown to the scheduler will result in
      errors.


      **Note:** For more information on the Dkron types, see the [API
      documentation of Dkron](https://dkron.io/api/).
    x-displayName: Scheduler Overview
    x-traitTag: true
  - name: Jobs
    description: Operations on scheduler jobs.
    x-displayName: Scheduler Jobs
paths:
  /api/v3/vendor/contracts/{contractId}/settings/repricingstrategy/history:
    x-audience: Internal
    get:
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricingStrategyHistoryApiResponse'
          description: List of metadata of all strategy versions
      summary: Get metadata of all strategy versions for contract
      description: >
        **⚠️ DEPRECATED:** This endpoint is deprecated and should no longer be
        used.


        Retrieves a list of metadata for all pricing strategy versions
        associated with a specific contract.

        Use
        `/api/v3/vendor/contracts/{contractId}/settings/pricingstrategies/history`
        instead.
      operationId: getStrategyHistory
      tags:
        - deprecated
        - strategy
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/settings/pricingstrategies/history:
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricingStrategyHistoryApiResponse'
          description: List of metadata of all strategy versions
      summary: Get all strategy versions metadata for contract
      description: >
        Retrieves a list of metadata for all pricing strategy versions
        associated with a specific contract.


        This endpoint provides version history information including creation
        dates, modification timestamps,

        and strategy metadata for tracking changes over time.
      operationId: getPricingStrategyHistory
      tags:
        - strategy
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/settings/pricingstrategies/scenarios:
    x-audience: Internal
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: >-
                    #/components/schemas/ScenarioStrategyMetadataResponseApiResponse
          description: List of all scenario strategy metadata
      summary: Get all scenario strategies
      description: >
        **🔒 INTERNAL:** Retrieves a list of all scenario strategy metadata for
        a specific contract.


        Scenario strategies are used for pricing simulations and "what-if"
        analysis. Each strategy

        contains metadata including creation date, version information, and
        configuration details.
      operationId: getAllScenariosMetadata
      tags:
        - scenariostrategy
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostScenarioStrategyResponseApiResponse'
          description: Scenario strategy created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >
            Request validation failed. Common reasons include:

            - Strategy configuration is invalid or inconsistent with the schema
            version

            - Required fields are missing or empty

            - Invalid JSON structure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostScenarioStrategyRequest'
        description: >-
          The scenario strategy to be created, including the necessary metadata
          and configuration.
      operationId: addPricingStrategyScenario
      summary: Add scenario strategy
      description: >
        **🔒 INTERNAL:** Creates a new scenario strategy for pricing
        simulations.


        Scenario strategies allow for "what-if" pricing analysis and testing
        different

        pricing approaches before applying them to live products.
      tags:
        - scenariostrategy
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/settings/pricingstrategies/scenarios/{scenarioId}:
    x-audience: Internal
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: ID of the required scenario strategy
          in: path
          name: scenarioId
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioStrategyResponse'
          description: Scenario strategy details retrieved successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Scenario strategy with the provided ID was not found.
      operationId: getScenarioById
      summary: Get scenario strategy
      description: |
        **🔒 INTERNAL:** Retrieves a specific scenario strategy by its ID.

        Returns the complete scenario strategy configuration including metadata,
        creation details, and the strategy definition.
      tags:
        - scenariostrategy
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/domains:
    get:
      operationId: getAllDomainsV3
      summary: Get all available domains
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllDomainsV3ApiResponse'
              example:
                data:
                  domains:
                    - domain: amazon.de
                      domainId: 1
                      offerSources:
                        - DEFAULT_MONITORING
                        - PUSH_API
                      name: Amazon Deutschland
          description: List of all supported domains with their configurations
      description: >
        Retrieves all domains supported by the system for market data
        collection.


        Each domain includes:

        - Available offer sources for market data collection

        - Configuration parameters


        **Note:** Only domains with the `DEFAULT_MONITORING` offer source are
        supported

        out-of-the-box by the monitoring pipeline.
      tags:
        - domains
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/v3/domains:
    x-audience: Internal
    post:
      operationId: postAdminAddDomainV3
      summary: Add domain
      description: >
        **🔒 INTERNAL:** Adds a new domain to the system for price monitoring.


        This administrative operation creates a new domain configuration with
        the specified

        offer sources and monitoring capabilities.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAdminAddDomainV3ApiResponse'
          description: Domain added successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Request validation failed. Common issues include:
            - Offer sources must be valid and non-empty
            - Domain must be a valid internet domain and non-empty
            - Domain name must be unique
            - Invalid configuration parameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostAdminAddDomainBodyV3
        description: >-
          The domain configuration to be added, including offer sources and
          monitoring settings
      tags:
        - controlpanel
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/v3/domains/{domain}:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/domainParam'
    put:
      summary: Update or add domain
      description: >
        **🔒 INTERNAL:** Updates an existing domain configuration or creates a
        new domain if it doesn't exist.


        This operation supports both creation and modification of domain
        configurations,

        allowing administrative management of supported monitoring domains.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAdminDomainResponseV3ApiResponse'
          description: Domain was updated or created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Request validation failed. Common issues include:
            - Offer sources must be valid
            - Domain must be a valid internet domain and non-empty
            - Domain name must be unique
            - Invalid configuration parameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PutAdminDomainRequestV3
        description: >-
          The domain configuration to be updated or created, including offer
          sources and monitoring settings
      operationId: putAdminDomainControlPanelV3
      tags:
        - internal
        - controlpanel
      security:
        - BasicAuth: []
        - BearerAuth: []
  /version:
    x-audience: Internal
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionApiResponse'
          description: Current application version.
      tags:
        - controlpanel
        - internal
      operationId: version
      summary: Get application version
      description: Get the current application version
      security: []
  /controlpanel/api/feature-flags:
    x-audience: Internal
    get:
      operationId: getAllFeatureFlags
      summary: Get all feature flags
      description: >
        **🔒 INTERNAL:** Retrieves a list of all feature flags configured in the
        system.


        Feature flags are used to control the availability of application
        features

        and can be managed through the control panel interface.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllFeatureFlagsApiResponse'
          description: List of all feature flags
      tags:
        - feature-flags
        - controlpanel
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: createFeatureFlag
      summary: Create feature flag
      description: >
        **🔒 INTERNAL:** Creates a new feature flag in the system.


        Feature flags must have a unique key that follows the pattern
        `[a-zA-Z0-9._-]+`

        and cannot exceed 128 characters in length.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostFeatureFlagRequest
        description: The feature flag to be created
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeatureFlagApiResponse'
          description: Feature flag created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >
            Request validation failed. Common reasons include:

            - Invalid flag key format (must be alphanumeric, dot, underscore, or
            dash)

            - Flag key already exists

            - Flag name is empty or too long

            - Description exceeds maximum length
      tags:
        - feature-flags
        - controlpanel
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/feature-flags/{key}:
    x-audience: Internal
    parameters:
      - description: Feature flag key identifier
        in: path
        name: key
        required: true
        schema:
          type: string
          pattern: ^[a-zA-Z0-9._-]+$
          maxLength: 128
        example: api.v2.enabled
    get:
      operationId: getFeatureFlagByKey
      summary: Get feature flag by key
      description: |
        **🔒 INTERNAL:** Retrieves a specific feature flag by its key.

        Returns the feature flag configuration including metadata such as
        creation and update timestamps.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeatureFlagByKeyApiResponse'
          description: Feature flag details retrieved successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Feature flag with the specified key was not found
      tags:
        - feature-flags
        - controlpanel
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: updateFeatureFlag
      summary: Update feature flag
      description: >
        **🔒 INTERNAL:** Updates an existing feature flag's name and
        description.


        The feature flag key cannot be changed after creation. Only the

        display name and description can be updated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PutFeatureFlagRequest
        description: The feature flag updates to be applied
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeatureFlagApiResponse'
          description: Feature flag updated successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Request validation failed. Common reasons include:
            - Flag name is empty or too long
            - Description exceeds maximum length
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Feature flag with the specified key was not found
      tags:
        - feature-flags
        - controlpanel
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteFeatureFlag
      summary: Delete feature flag
      description: |
        **🔒 INTERNAL:** Deletes a feature flag from the system (soft delete).

        The feature flag is marked as deleted but preserved in the database
        for audit purposes. Once deleted, the flag key becomes unavailable
        for new flags.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Feature flag deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Feature flag with the specified key was not found
      tags:
        - feature-flags
        - controlpanel
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/1/{contractId}/products/analysis/pricerecommendations:
    x-audience: Internal
    get:
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: Where to start fetching the recommendations
          in: query
          name: start
          required: false
          example: 0
          schema:
            default: 0
            format: int32
            type: integer
        - description: Maximal number of results
          in: query
          name: limit
          required: false
          example: 100
          schema:
            default: 10000
            format: int32
            type: integer
        - description: Timestamp of the oldest results
          in: query
          name: since
          required: false
          example: '2019-01-01T00:00:00.000Z'
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPriceRecommendationsResponse'
          description: No response was specified
      tags:
        - pricerecommendations
        - deprecated
      operationId: getPriceRecommendations
      summary: Get price recommendations
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/companies:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCompanyApiResponse'
          description: Information about the created company.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The company name may not be empty.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User already belongs to a company.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The company could not be created.
      tags:
        - companies
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The company's name
        required: true
      summary: Create company
      description: Allows users without a company to create a new company.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/companies/{companyId}/contracts:
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompanyContractsApiResponse'
          description: No response was specified
      tags:
        - companies
      operationId: getCompanyContracts
      summary: Get all contracts for company
      description: Get all contracts for the given company.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCompanyContractApiResponse'
          description: No response was specified
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to add contract for company ID
      tags:
        - companies
      operationId: addCompanyContract
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.CreateContractRequest
        description: Contract to be added
        required: true
      summary: Add contract for company
      description: Add a contract for the given company.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/m/contracts/{contractId}/settings/callbacks:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    get:
      operationId: getCallbacks
      summary: Get callbacks [manufacturer]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.Callbacks
          description: '-'
        '404':
          description: Settings for this contract don't exist yet
      tags:
        - settings
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putCallbacks
      summary: Update callbacks [manufacturer]
      tags:
        - settings
        - internal
      responses:
        '200':
          description: '-'
        '404':
          description: Settings for this contract don't exist yet
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.Callbacks
        description: Callbacks
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteCallbackSettingsManufacturerV2
      summary: Delete callbacks [manufacturer]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/v/contracts/{contractId}/feeds:
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
                uniqueItems: true
          description: No response was specified
      tags:
        - feeds
      description: >-
        Feeds can contain offer-related information such as price
        recommendations. They can be configured to match individual demands.
      operationId: getFeeds
      summary: Get all feeds
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      x-audience: Internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - feeds
      operationId: postFeedVendorV2
      summary: Create feed
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/feeds/{feedId}:
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: ID of the feed
          in: path
          name: feedId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
          description: No response was specified
        '404':
          description: Not found
      tags:
        - feeds
      description: >-
        A feed can contain offer-related information such as price
        recommendations. Feeds can be configured to match individual demands.
      operationId: getFeed
      summary: Find feed by ID
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      x-audience: Internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - feeds
      operationId: putFeedVendorV2
      summary: Update feed
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      x-audience: Internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - feeds
      operationId: deleteFeedVendorV2
      summary: Deleted feed
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: feedId
        required: true
        schema:
          type: string
  /api/2/v/contracts/{contractId}/feeds/{feedId}/export/delta:
    delete:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: ID of the feed
          in: path
          name: feedId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
          description: No response was specified
        '404':
          description: Not found
      tags:
        - feeds
      description: >-
        Dismiss already fetched feed-entries, so they will not be part of future
        responses.
      operationId: excludeFetchedFeedData
      summary: Dismiss already fetched feed-entries
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      x-audience: Internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - feeds
      operationId: getFeedExportDeltaVendorV2
      summary: Get delta export feed
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - in: path
          name: feedId
          required: true
          schema:
            type: string
        - in: query
          name: fileName
          required: false
          schema:
            type: string
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/v/contracts/{contractId}/feeds/{feedId}/export/delta/{fileName}:
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: ID of the feed
          in: path
          name: feedId
          required: true
          schema:
            type: string
        - description: fileName
          in: path
          name: fileName
          required: true
          schema:
            default: my-feed.csv
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: No response was specified
        '404':
          description: Not found
      tags:
        - feeds
      description: >-
        In contrast of normal feeds, feed-deltas return only results, that are
        new since the last (DELETE-)request.
      operationId: getFeedExportDelta
      summary: Retrieve all feed-entries after last request
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/v/contracts/{contractId}/feeds/{feedId}/export/{fileName}:
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: ID of the feed
          in: path
          name: feedId
          required: true
          schema:
            type: string
        - description: fileName
          in: path
          name: fileName
          required: true
          schema:
            default: my-feed.csv
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: Feed data export retrieved successfully
        '404':
          description: Feed not found or access denied
      description: |
        Downloads a file containing all the data from the specified feed.

        Feeds are price recommendation centric and can be enriched with offer
        or product information. The export format (JSON or CSV) is determined
        by the request's Accept header.
      operationId: getFeedExport
      summary: Export feed data
      tags:
        - feeds
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/v/contracts/{contractId}/orders:
    post:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      summary: Add orders in bulk
      description: >
        Imports multiple orders for a specific contract in a single operation.


        This endpoint supports bulk order processing to efficiently manage large

        volumes of order data. All orders in the request are processed
        atomically.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOrdersBulkApiResponse'
              example:
                data:
                  - data:
                      orders:
                        - orderId: '12345'
                          shippingCosts: 4.99
                          origin: amazon.de
                          creationDate: '2024-06-10T12:34:56Z'
                          items:
                            - itemId: item-1
                              unitPrice: 19.99
                              quantity: 2
                              taxPercentage: 19
                          productMappings:
                            - source: itemId
                              target: customerProductId
                          totalPrice: 44.97
                          currency: EUR
                          referrer: google
                      version: v2
                    errors: []
          description: Orders processed successfully (may include partial failures)
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOrdersBulkApiResponse'
          description: |
            Request validation failed. Common issues include:
            - Invalid order data format
            - Missing required fields
            - Invalid contract ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostCustomerOrdersRequestV2
            example:
              version: '2'
              orders:
                - orderId: ORDER-2024-001
                  origin: webshop
                  referrer: google
                  productMappings:
                    - source: itemId
                      target: customerProductId
                  items:
                    - itemId: ITEM-001
                      unitPrice: 29.99
                      quantity: 2
                      taxPercentage: 19
                  creationDate: '2024-01-15T10:30:00Z'
                  totalPrice: 65.98
                  shippingCosts: 5.99
                  currency: EUR
        description: Orders to be imported, including order metadata and item details
        required: true
      operationId: postOrders
      tags:
        - orders
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/v/contracts/{contractId}/products:
    get:
      operationId: getProducts
      summary: Get all products for a contract
      description: >
        **⚠️ DEPRECATED:** This endpoint is deprecated and should no longer be
        used.


        Retrieves all products for a contract without pagination support. This
        endpoint

        has performance limitations and lacks proper pagination. Use the newer
        product

        query endpoints instead.


        **Note:** The `attributes` parameter is required but poorly documented
        in this legacy version.
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - in: query
          description: >
            **REQUIRED:** Comma-separated list of product attributes to include
            in the response.


            Available attributes: `gtin`, `identifier`, `name`,
            `referencePrice`,

            `minPriceBoundary`, `maxPriceBoundary`, `tags`, `strategy`
          name: attributes
          required: true
          schema:
            type: string
            enum:
              - gtin
              - identifier
              - name
              - referencePrice
              - minPriceBoundary
              - maxPriceBoundary
              - tags
              - strategy
          example: gtin,name,referencePrice,tags
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
                uniqueItems: true
          description: No response was specified
      tags:
        - products
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      x-audience: Internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      deprecated: true
      tags:
        - internal
        - undocumented
        - products
        - deprecated
      operationId: putProductsVendorV2
      summary: Update products in bulk (JSON)
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/products/csv:
    x-audience: Internal
    put:
      deprecated: true
      operationId: putCSVProducts
      summary: Set products via CSV file (V2)
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          description: '-'
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdAndUrl'
          description: Accepted
      tags:
        - products
        - deprecated
        - internal
      description: |-
        Warning: Deletes all existing products.
                <br/>Note that this will not happen immediately. Instead, you receive the ID of a task that has been created.
                <br/>Furthermore you receive an URL which you can use to check if the task was executed successfully.
                <br>The csv file must contain following columns:
                <ul>
                  <li>productId - arbitrary string, can be used for the systems product id.</li>
                  <li>gtin - the GTIN of the product
                  <li>description - name or short description of the product
                  <li>referencePrice - arbitrary decimal number, usually the current price or recommended retail price (gross)
                  <li>minPriceBoundary - decimal number defining the lower price boundary (gross)
                  <li>maxPriceBoundary - decimal number defining the upper price boundary (gross)
                  <li>Additional columns are added as product tags. Tags are used for repricing strategies and several other
                  purpose.
                </ul>
                <br/>Column separator must be semicolon, the decimal separator must be dot. File encoding must be UTF-8.
      requestBody:
        content:
          text/csv:
            schema:
              type: string
        description: CSV file containing the products
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/result/offers:
    x-audience: Internal
    get:
      operationId: getOffers
      deprecated: true
      summary: Get all offers for all products
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: Start product index for pagination
          in: query
          name: start
          required: true
          schema:
            format: int32
            type: integer
        - description: Number of products for pagination
          in: query
          name: limit
          required: true
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOffersResponse'
          description: No response was specified
      tags:
        - offers
        - deprecated
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/result/pricerecommendations:
    get:
      operationId: getPriceRecommendation
      summary: Get price recommendations for time range
      description: >
        Retrieves all price recommendations for a contract within the specified
        time range.


        This endpoint returns algorithmic pricing recommendations based on
        market analysis,

        competitor pricing, and configured pricing strategies. Only the most
        recent

        recommendations are returned when multiple recommendations exist for the
        same product.


        **Key Features:**

        - Paginated results for efficient data retrieval

        - Optional product tag inclusion

        - Configurable time range filtering

        - Real-time market-based recommendations
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: |
            **Start of time range** for price recommendation retrieval.

            Format: ISO 8601 date-time in UTC (e.g., `2024-01-15T10:30:00Z`)
          in: query
          name: startTime
          required: true
          schema:
            format: date-time
            type: string
          example: '2024-01-15T00:00:00Z'
        - description: |
            **End of time range** for price recommendation retrieval.

            Format: ISO 8601 date-time in UTC (e.g., `2024-01-16T10:30:00Z`)
          in: query
          name: endTime
          required: true
          schema:
            format: date-time
            type: string
          example: '2024-01-16T23:59:59Z'
        - description: Starting index for pagination (0-based)
          in: query
          name: start
          required: true
          schema:
            format: int32
            type: integer
            minimum: 0
          example: 0
        - description: Maximum number of price recommendations to return per page
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int32
            type: integer
            minimum: 1
            maximum: 1000
          example: 100
        - description: Whether to include product tags in the response
          in: query
          name: includeTags
          required: false
          schema:
            default: true
            type: boolean
          example: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPriceRecommendationApiResponse'
              example:
                data:
                  - productId: PROD-001
                    gtin: 1234567890123
                    customerProductId: CUST-PROD-001
                    currency: EUR
                    price: 27.99
                    deliveryCosts: 4.99
                    timestamp: '2024-01-15T14:30:00Z'
                    tags: []
                    originalTags: []
                    relevantDomain: amazon.de
                    oldPrice: 29.99
                    oldDeliveryCosts: 4.99
                    relativePriceChangePercentage: 93.33
                    oldPosition: 5
                    newPosition: 3
                    originalMinPriceBoundary: 20
                    originalMaxPriceBoundary: 50
                    decisiveStrategyTreeLeafNodeId: 123
                    decisiveStrategyBranchName: CompetitorPricing
                meta:
                  nextUrl: >-
                    https://api.patagona.de/api/2/v/contracts/CONTRACT-123/result/pricerecommendations?startTime=2024-01-15T00:00:00Z&endTime=2024-01-16T23:59:59Z&start=100&limit=100&includeTags=true
                  totalSize: 1250
                  start: 0
                  limit: 100
          description: >
            Paginated list of price recommendations for the specified time
            range.


            Each recommendation includes the product information, recommended
            price,

            delivery costs, position data, and strategy information that
            determined

            the recommendation. Only the newest recommendations are returned
            when

            multiple exist for the same product.
      tags:
        - pricerecommendations
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/domains:
    put:
      operationId: putDomains
      summary: Set domains for contract
      responses:
        '200':
          description: The domains setting for this contract was saved.
        '404':
          description: Settings for this contract do not exist yet
      tags:
        - settings
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: Settings
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      x-audience: Internal
      operationId: getDomainsVendorV2
      summary: Get domains for contract
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringArrayResponse'
          description: A list of configured domains is returned.
      tags:
        - internal
        - settings
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/tasks:
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: Ids of the tasks
          in: query
          name: taskIdsFilter
          required: false
          schema:
            type: string
        - description: Desired task type
          in: query
          name: taskTypeFilter
          required: false
          schema:
            type: string
        - description: Maximal number of results
          in: query
          name: limit
          required: false
          example: 10
          schema:
            default: 100
            format: int32
            type: integer
        - description: Flag whether to include failures in the response
          in: query
          name: includeFailures
          schema:
            type: boolean
            default: true
        - description: Comma separated task state filter
          in: query
          name: taskState
          schema:
            type: string
        - description: Oldest returned creation date in UTC
          in: query
          name: minCreationDate
          schema:
            type: string
            format: date-time
        - description: Newest returned creation date in UTC
          in: query
          name: maxCreationDate
          schema:
            type: string
            format: date-time
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskWithContractResourceApiResponse'
                type: array
                uniqueItems: true
          description: No response was specified
      tags:
        - tasks
      description: >-
        The search can be narrowed down by providing the IDs of the tasks,
        separated by comma
      operationId: getTasksVendorV2
      summary: Find tasks for contract [vendor]
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      x-audience: Internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Task has been created successfully
      tags:
        - internal
        - undocumented
        - tasks
      operationId: createTaskVendorV2
      summary: Create a task [vendor]
      description: Creates a new task for a vendor contract.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.CreateTaskBodyV2
        description: Create a new task
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/tasks/{taskId}:
    get:
      operationId: getTaskVendorV2
      summary: Get task
      description: Finds a task with the specified id for the given contract.
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: Id of the task
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithContractResourceApiResponse'
          description: No response was specified
        '404':
          description: Not found
      tags:
        - tasks
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      x-audience: Internal
      operationId: updateTaskVendorV2
      summary: Update a task
      description: Update the task with the specified id for the given contract.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - tasks
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: taskId
        required: true
        schema:
          type: string
  /api/account:
    x-audience: Internal
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.UserInfo
          description: No response was specified
      tags:
        - account
        - internal
      description: Returns the current user with its companies and contracts
      operationId: userInfo
      summary: Details of the current user
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      responses:
        '200':
          description: No response was specified
        '201':
          description: User was created and confirmation e-mail was sent
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to create the user because of bad request data
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to create the user because of an unexpected error
      tags:
        - account
        - internal
      operationId: userSignup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignupRequest'
        description: The user sign up data
        required: true
      summary: Create a new user account in the system
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/account/confirm/{token}:
    x-audience: Internal
    head:
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '204':
          description: Confirmation token was found
        '404':
          description: No such confirmation token was found
      tags:
        - account
        - internal
      operationId: checkUserConfirmation
      summary: Check if a specific confirmation token exists
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '204':
          description: User was confirmed & logged in
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to confirm the user because of bad request data
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to confirm the user because of an unexpected error
      tags:
        - account
        - internal
      operationId: confirmUser
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The password that should be set on the confirmed user
        required: true
      summary: Confirm an unconfirmed user
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
  /api/v3/manufacturer/contracts/{contractId}/offers:
    x-audience: Internal
    get:
      summary: Get offers for time range
      description: >
        **🔒 INTERNAL:** Retrieves the most recent offers for all products
        within a specified time range.


        This endpoint provides manufacturer contracts with access to offer data
        across all

        monitored domains and vendors. The data includes pricing, availability,
        and vendor

        information for competitive analysis.


        **Performance Notes:**

        - Results are paginated based on products for optimal performance

        - Maximum limit of 1,000 products per request

        - Time range should be kept reasonable for best performance
      operationId: getOffersManufacturerV3
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: Starting index for pagination (0-based)
          in: query
          name: start
          required: false
          schema:
            default: 0
            format: int32
            type: integer
            minimum: 0
          example: 0
        - description: Maximum number of offers to return (max 10,000)
          in: query
          name: limit
          required: false
          example: 1000
          schema:
            default: 1000
            format: int32
            type: integer
            minimum: 1
            maximum: 1000
        - description: Whether to include product tags in the response
          in: query
          name: includeTags
          required: false
          schema:
            default: true
            type: boolean
          example: true
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOffersApiResponse'
          description: A list of products with their corresponding offers.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Returned in case of invalid time range or a limit greater than
            10000.
      tags:
        - offers
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/manufacturer/contracts/{contractId}/offers/shops:
    x-audience: Internal
    get:
      operationId: getOffersShopsManufacturerV3
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - $ref: '#/components/parameters/startDateOneWeekMax'
        - $ref: '#/components/parameters/endDateOneWeekMax'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShopsByDomainResponseV3ApiResponse'
          description: >-
            Shops which have at least one offer for a given time range per
            domain.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Specified time range is invalid (> 7 days).
      tags:
        - offers
        - internal
      summary: Get shops with offers for time range
      description: >-
        Returns all shops which have at least one offer for a given time range
        per domain.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/offers/shop/query:
    x-audience: Internal
    post:
      operationId: queryOffersShopManufacturerV3
      summary: Get all offers [manufacturer]
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOffersOfShopV3ApiResponse'
          description: Returns offers of the shop
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.QueryOffersOfShopRequestV3
        required: true
      tags:
        - products
        - internal
      description: >-
        Get all offers of a shop. Please note that it might return offers for
        inactive products.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/offers/stats/query:
    x-audience: Internal
    post:
      operationId: queryOffersStatsManufacturerV3
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOfferStatisticsApiResponse'
          description: Returns a list of offer statistics per product.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Returned in case of unparsable request body JSON or unsupported
            filter.
      tags:
        - products
        - internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOfferStatisticsRequest'
        required: true
      description: >-
        This operation is used to get offer statistics (e.g. offer count,
        average price) grouped by product and domain. Warning: This endpoint
        contains complex query structure and will be replaced in the future.
        Please note that offer statistics can only be computed for at maximum
        2500 products at a time.
      summary: Query offer statistics per product
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3.1/manufacturer/contracts/{contractId}/offers/stats/query:
    x-audience: Internal
    post:
      operationId: queryOffersStatsManufacturerV31
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOfferStatisticsV31ApiResponse'
          description: >
            Returns a list of offer statistics per product.

            When a product has no market data then no offer statistics are
            returned for that product.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            A `400` error is returned under the following conditions:
            - The request body JSON is unparsable.
            - An unsupported filter is provided.
            - The specified time range exceeds 48 hours.
            - The pagination limit exceeds 10,000.
      tags:
        - offers
        - internal
      requestBody:
        $ref: '#/components/requestBodies/PostOfferStatisticsRequestV31Enriched'
      description: >
        This endpoint can be used to query offer statistics (e.g. offer count,
        average price) grouped by product. Only the most recent market data is
        considered per product and domain.
      summary: Query offer statistics per product
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/offers/stats:
    x-audience: Internal
    get:
      operationId: getOfferStatisticsManufacturerV3
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - in: query
          name: includeDeliveryCosts
          required: true
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferStatisticsV3ApiResponse'
          description: Returns a list of offer statistics per product.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Specified time range is invalid (> 48h).
      tags:
        - offers
        - internal
      summary: Get offer statistics per product of a contract
      description: >-
        Get offer statistics per product of a contract. Only the latest offers
        per product and domain the are taken into account.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/products:
    x-audience: Internal
    put:
      operationId: putCSVProductsManufacturerV3
      summary: Set products via CSV file (V3)
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - in: header
          name: content-type
          required: true
          example: text/csv
          schema:
            enum:
              - text/csv
              - text/comma-separated-values
              - text/csv; charset=UTF-8
              - text/comma-separated-values; charset=UTF-8
            type: string
        - description: >-
            A single CSV column that identify a product uniquely.

            Avoid using tags as an identifier, as this feature will soon be
            deprecated.

            By doing so, you may loose historical market data during product
            import.
          in: header
          name: patagona-product-identifying-attributes
          required: true
          example: id-column
          schema:
            type: string
        - description: Csv column that contains the product name
          in: header
          name: patagona-product-name
          required: true
          example: name-column
          schema:
            type: string
        - description: Csv column that contains the reference price
          in: header
          name: patagona-product-reference-price
          required: true
          example: reference-price-column
          schema:
            type: string
        - description: Csv column that contains the gtin
          in: header
          name: patagona-product-gtin
          example: gtin-column
          schema:
            type: string
        - description: >-
            Csv column that contains an id (There is no requirement for this
            field to be unique)
          in: header
          name: patagona-product-customer-id
          example: id-column
          schema:
            type: string
        - description: >-
            Decimal separator used for parsing numbers \

            The values for patagona-decimal-separator,
            patagona-csv-column-separator and patagona-csv-quotation-character
            must be different from one another. \

            Available values: ",", "."
          in: header
          example: .
          name: patagona-decimal-separator
          required: true
          schema:
            type: string
        - description: >-
            The csv column separator \

            The values for patagona-decimal-separator,
            patagona-csv-column-separator and patagona-csv-quotation-character
            must be different from one another.
          in: header
          example: ','
          name: patagona-csv-column-separator
          required: true
          schema:
            type: string
        - description: >-
            The csv quotation character \

            The values for patagona-decimal-separator,
            patagona-csv-column-separator and patagona-csv-quotation-character
            must be different from one another.
          in: header
          example: '"'
          name: patagona-csv-quotation-character
          required: true
          schema:
            type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProductsApiResponse'
          description: >-
            The field data.url in the returned object allows to check the status
            of the import process. It will point to the endpoint GET
            /api/2/v/contracts/{contractId}/tasks/{taskId}. \

            The field data.id is the task id corresponding to the product
            import.
      tags:
        - products
        - internal
      description: >-
        This operation is used to import products into the pricemonitor.

        This process is represented by a task, which is processed
        asynchronously.

        In the response you will receive a url which is used to check the status
        of the import process. <br>


        When the process is done all products in csv file from the request body
        will be in the pricemonitor.

        Products that were already present before have been updated and new
        products have been added. <br>


        Warning: All products that were in the pricemonitor before but are not
        present in the new import will be deleted.


        Identification of the products is done based on the identifying
        attributes (see parameter: patagona-product-identifying-attributes)'
      requestBody:
        content:
          text/csv:
            schema:
              type: string
        description: >-
          CSV file containing the products. Note: The CSV file should be encoded
          in UTF-8.
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      x-audience: Internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - products
      operationId: deleteProductsManufacturerV3
      summary: Delete products [manufacturer]
      parameters:
        - in: query
          name: updatedMax
          required: false
          schema:
            type: string
            format: date-time
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/offers:
    get:
      operationId: getOffersVendorV3
      summary: Get offers for timerange
      description: Returns the newest offers for a given time range.
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: Where to start fetching the products
          in: query
          name: start
          required: false
          example: 0
          schema:
            default: 0
            format: int32
            type: integer
        - description: Maximum number of results
          in: query
          name: limit
          required: false
          example: 1000
          schema:
            default: 1000
            format: int32
            type: integer
        - description: Whether to return tags of products or not.
          in: query
          name: includeTags
          required: false
          schema:
            default: true
            type: boolean
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOffersApiResponse'
          description: A list of products with their corresponding offers.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Returned in case of invalid time range or a limit greater than
            10000.
      tags:
        - offers
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/offers/shops:
    x-audience: Internal
    get:
      operationId: getOffersShopsVendorV3
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - $ref: '#/components/parameters/startDateOneWeekMax'
        - $ref: '#/components/parameters/endDateOneWeekMax'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShopsByDomainResponseV3ApiResponse'
          description: >-
            Shops which have at least one offer for a given time range per
            domain.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Specified time range is invalid (> 7 days).
      tags:
        - offers
        - internal
      summary: Get shops with offers for time range per domain
      description: >-
        Returns all shops which have at least one offer for a given time range
        per domain.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/offers/query:
    post:
      operationId: queryOffersVendorV3
      summary: Query offers [vendor]
      description: Supports complex queries for offers.
      tags:
        - offers
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOffersApiResponse'
          description: >-
            Returns either an Error or a list of ApiOffers matching the given
            filter.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Returned in case of unparsable request JSON or unsupported
            filter/sorting.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductOffersApiQuery'
        description: >-
          The request body specifies which offers will be searched for.<br>

          Warning: It's highly recommended to not use this endpoint since it is
          error-prone due to complex query structure!

          Supported are queries with three different types of filters:<br>

          1. Filtering for offers of a certain product<br> This can be done by a
          ComparisonFilter with
            * the `left` side being a `StringValueProvider` with the `attributeName` value "productId"
            * the `right` side being a `StringConstantValueProvider` with the `value` being the actual pricemonitor product ID to filter offers for
            * the `comparison` being a `StringEquality`

          2. Filtering for valid offers of a certain product<br> This can be
          done by an AndFilter with
            * a) A product filter (see first supported filter)
            * b) A NotFilter which contains a ComparisonFilter
              * the `left` side being a `NumberValueProvider` with the `attributeName` value "ignoredBy"
              * the `right` side being a `NumberConstantValueProvider` with the `value` being the numeric contract id to filter offers for
              * the `comparison` being a `NumberEquality`

          3. Filtering for offers of a certain vendor<br> This can be done by a
          ComparisonFilter with
            * the `left` side being a `StringValueProvider` with the `attributeName` value "reseller_name"
            * the `right` side being a `StringConstantValueProvider` with the `value` being the actual vendor name to filter offers for
            * the `comparison` being a `StringEquality`

          Note: This endpoint will only return the newest offers for each
          product for a given time range.
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/offers/shop/query:
    x-audience: Internal
    post:
      operationId: queryOffersShopVendorV3
      summary: Get all offers [vendor]
      description: >-
        Get all offers of a shop. Please note that it might return offers for
        inactive products.
      tags:
        - products
        - internal
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOffersOfShopV3ApiResponse'
          description: Returns offers of the shop
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.QueryOffersOfShopRequestV3
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/offers/pricedumpingstats:
    post:
      operationId: queryOffersPriceDumpingStatsVendorV3
      x-audience: Internal
      summary: Query price dumping statistics
      description: >-
        This operation is used to query price dumping statistics for a time
        range for a set of shops.
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPriceDumpingStatsApiResponse'
          description: Returns the price dumping statistics in the given time range.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceDumpingStatsRequest
        required: true
      tags:
        - products
        - internal
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/offers/stats/query:
    x-audience: Internal
    post:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOfferStatisticsApiResponse'
          description: >
            Returns a list of offer statistics per product.

            ## How to use this endpoint's result to get Total Market statistics

            ### Minimum Price

            To calculate the minimum price in the total market, you have to take
            the minimum of the `minPrice` of each domain. In the example below,
            both products have the same min prices: `min(16.00,7.99) = 7.99`.

            ### Average Price

            To calculate the average price in the total market, you have to
            calculate a **weighted average**, weighing the average price of each
            domain by its offer count. In the example below we get different
            results for the average price in the total market for product id
            `1001` and `1002` even though they have the same average price in
            each domain. This is due to the different offer counts:

              - product id `1001`: `(20.00 * 4 + 10.00 * 12) / (4 + 12) = 12.50`
              - product id `1002`: `(20.00 * 12 + 10.00 * 4) / (12 + 4) = 17.50`

            ### Offer Count

            The offer count of one product in the total market is the sum of the
            offer counts for all its domains. In the example below, both
            products would have an offer count of `12 + 4 = 16`.

            ### Market Position

            The market position of a product generally **can not be deduced**
            from the data provided in this endpoint.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Returned in case of unparsable request body JSON or unsupported
            filter.
      tags:
        - products
        - internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOfferStatisticsRequest'
        required: true
      operationId: postOfferStatisticsVendorQuery
      summary: Get offer statistics per product
      description: >
        This operation is used to get offer statistics (e.g. offer count,
        average price) grouped by product and domain.


        Warning: This endpoint contains complex filter structure and will be
        replaced in the future. Currently, we only allow filtering by a list of
        internal pricemonitor product ids. Please note that offer statistics can
        only be computed for at **maximum 2500** products at a time.


        To use the example request body from below, you have to adjust the
        `ownShopNames`, the `range` and `filter.right.value`. Where
        `filter.right.value` has to be a list of internal pricemonitor product
        ids corresponding to the `contractId` provided as part of the URL.


        All prices will be with or without delivery costs depending on the
        `includeDeliveryCosts` parameter in the body.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3.1/vendor/contracts/{contractId}/offers/stats/query:
    post:
      operationId: queryOffersStatsVendorV31
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOfferStatisticsV31ApiResponse'
          description: >
            Returns a list of offer statistics per product.

            When a product has no market data then no offer statistics are
            returned for that product.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            A `400` error is returned under the following conditions:
            - The request body JSON is unparsable.
            - An unsupported filter is provided.
            - The specified time range exceeds 48 hours.
            - The pagination limit exceeds 10,000.
      tags:
        - offers
      requestBody:
        $ref: '#/components/requestBodies/PostOfferStatisticsRequestV31Enriched'
      description: >-
        This endpoint can be used to query offer statistics (e.g. offer count,
        average price) grouped by product. Only the most recent market data is
        considered per product and domain.
      summary: Query offer statistics per product
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/orders:
    delete:
      operationId: deleteOrders
      summary: Delete all orders
      description: Delete all orders for this contract.
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedItemsApiResponse'
          description: Successfully deleted all orders
      tags:
        - orders
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putOrdersV3
      summary: PUT orders in bulk
      description: >
        Saves orders in bulk. If an orderId was already used by this contract
        this order and all it's order-items will

        be overwritten.


        - the `version` of the request body must be "3"

        - requests must not contain duplicated `orderId`

        - the number of orders in one request must not exceed 10,000

        - each order must have at least one item

        - the `orders.items.itemId` fields should correspond to a
        `customerProductId` of a product definition inside
          the contract
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PutCustomerOrdersRequestV3
            example:
              orders:
                - shippingCosts: 5.9
                  orderId: 2023-11_customer-a_001
                  items:
                    - unitPrice: 6.02
                      itemId: itemId
                      quantity: 1
                      taxPercentage: 19
                  totalPrice: 11.92
                  origin: Amazon.de
                  creationDate: '2023-11-23T11:20:21.034+01:00'
                  currency: EUR
              version: '3'
      responses:
        '201':
          description: The response provides the ids of the successfully imported orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutItemsV3ApiResponse'
              example:
                data:
                  ids:
                    - OrderId-1
                    - OrderId-2
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to add orders because of invalid request data
      tags:
        - orders
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - orders
      operationId: getOrdersVendorV3
      description: Returns all orders for a given contract.
      summary: Get all orders
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/getOrdersStartDate'
        - $ref: '#/components/parameters/getOrdersEndDate'
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/orders/stats/query:
    post:
      operationId: queryOrdersStatsVendorV3
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOrderStatisticsV3ApiResponse'
          description: >
            Returns a list of order statistics per product.

            When a product has no sold items then no order statistics are
            returned for that product.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            A `400` error is returned under the following conditions:
            - The request body JSON is unparsable.
            - An unsupported filter is provided.
            - The specified time range exceeds 30 days.
            - The pagination limit exceeds 10,000.
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostOrderStatisticsRequestV3
            example:
              pagination:
                start: 0
                limit: 10
              range:
                start: '2023-11-01T08:00:00Z'
                end: '2023-11-15T08:00:00Z'
              filter:
                oneOf:
                  field: customerProductId
                  values:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
        required: true
        description: >
          The request body may include an optional products query. If omitted,
          all products are queried. Currently, product queries can be performed
          on two attributes:
            - "customerProductId"
            - "productId" (Patagona's internal product id; must be a numerical integer)

          Pagination is supported with a maximum limit of 10,000. For optimized
          performance:
            - Use a limit of 10,000 products per page when querying all products of a contract.
            - Prefer using "customerProductId" for queries when a product query is utilized.

          Pagination operates based on the provided products query.

          For chunked requests over a set of ids, it's straightforward to
          specify up to 10,000 customerProductId's in the query with pagination
          set at start: 0, limit: 10,000.


          The allowed query pattern is structured as follows:


          { <br>

          &nbsp;&nbsp;"pagination": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"start": ${start}, <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"limit": ${limit} <br>

          &nbsp;&nbsp;}, <br>

          &nbsp;&nbsp;"range": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"start": ${start}, <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"end": ${end} <br>

          &nbsp;&nbsp;}, <br>

          &nbsp;&nbsp;"filter": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"oneOf": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [${customerProductIds as
          a list of strings}] <br>

          &nbsp;&nbsp;&nbsp;&nbsp;} <br>

          &nbsp;&nbsp;} <br>

          } <br>

          <br>
      description: This endpoint can be used to query order statistics grouped by product.
      summary: Query order statistics per product
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/orders/delete/query:
    post:
      operationId: deleteOrdersByQueryVendorV3
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedItemsApiResponse'
          description: |
            Returns the number of orders that have been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            A `400` error is returned under the following conditions:
            - The request body JSON is unparsable.
            - The provided order queries exceeds 10,000.
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.DeleteOrdersByQueryRequestV3
            example:
              orders:
                - orderId: '123'
                  creationDate: '2023-11-01T08:00:00Z'
        required: true
        description: >
          The request body should contain a list of order queries. Each query
          should contain an order id and creation date.


          The allowed query pattern is structured as follows:


          { <br>

          &nbsp;&nbsp;"orders": [ <br>

          &nbsp;&nbsp;&nbsp;{ <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"orderId": ${orderId}, <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"creationDate": ${creationDate} <br>

          &nbsp;&nbsp;} <br>

          &nbsp;&nbsp;&nbsp;] <br>

          } <br>

          <br>
      description: This endpoint can be used to delete customer orders by an order query
      summary: Delete orders by query
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/pricerecommendations/simulate:
    post:
      x-audience: Internal
      operationId: simulatePriceRecommendationsV3
      summary: Simulate price recommendations
      tags:
        - pricerecommendations
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      description: >
        This endpoint simulates price recommendations for a specified set of
        products. It is useful for:


        - Explaining why certain price recommendations have been calculated.

        - Testing and evaluating pricing strategies before applying them.


        The simulation process can be customized by including parameters such as
        a custom pricing strategy, custom time range, specific offers and more.


        A maximum of 10 price recommendation simulations may be included in one
        request.
      requestBody:
        required: true
        description: >
          The request body contains all the necessary data to simulate price
          recommendations for multiple products.

          Custom parameters, such as pricing strategies and time ranges, can be
          provided in order to simulate different scenarios.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceSimulationBulkRequestV3
      responses:
        '200':
          description: >
            A successful response containing a bulk result with simulated price
            recommendations for multiple products.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulatePriceCalculationBulkV3ApiResponse'
        '400':
          description: >
            The request could not be processed due to validation errors in the
            provided body.

            Common issues include:


            - Malformed JSON.

            - Unimported products specified in the request.

            - Too many simulation requests in the body.

            - Contract not compatible with simulation feature.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/pricerecommendations/approvals/decide:
    post:
      x-audience: Internal
      operationId: decidePriceRecommendationsApprovalsV3
      summary: Set price recommendation approvals
      tags:
        - pricerecommendations
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      description: >
        Processes bulk decisions for price recommendation approvals. Only
        pending price recommendations can be decided.


        ## Notes

        - *Approval* refers to the price approval flow concept in our business
        processes,

        covering all states of price recommendations within this flow (i.e.,
        pending, approved, rejected).

        The term does not mean all price recommendations are approved.

        - We preserve a linear history: Once a price recommendation approval is
        **finalized** (i.e., no longer pending),

        it can no longer be changed.

        - If any user rejects, the entire price recommendation is rejected.

        - If a user has already submitted an active (not superseded) decision
        for a recommendation,

        they cannot submit another.

        - The endpoint is not idempotent, as submitting a decision changes the
        approval state.

        - If a price overwrite happens, we recalculate the new position of the
        offer with the new price in mind. We use the offers that were also used
        during the original price calculation, the current offer filters, the
        current vendor mappings, and the current product information for the
        position calculation.
      requestBody:
        required: true
        description: |
          The request body contains a list of price decisions to process.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.PostPriceRecommendationApprovalRequestV3
      responses:
        '200':
          description: >
            A successful response indicating that at least one price
            recommendation approval decision has been applied.


            Notes:

            - The response array preserves the order of the input request array.

            - An individual price decision might not be processed if:
              - Multiple decisions for the same product are included in a single request: **none** of those decisions
                will be processed, as it is ambiguous which decision should apply.
              - The corresponding price recommendation approval is already processed (i.e., not in the 'pending' status).
              - The user has already submitted an active decision (not superseded) for that approval.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanBulkApiResponse'
        '400':
          description: >
            The request could not be processed due to validation errors in the
            provided body,

            or none of the pricing decisions could be applied.


            Common issues include:

            - Malformed JSON.

            - The decision 'overwritten' is provided for a product, but the
            overwrite price is missing.

            - A decision other than 'overwritten' is provided for a product, but
            the overwrite price is provided.

            - An overwrite price lower than 0.01 is provided.

            - An unsupported decision is provided (only 'approved', 'rejected',
            and 'overwritten' are supported).

            - All price recommendation approvals in the request have been
            already processed
              (e.g., previously approved, rejected, overwritten, or outdated).
            - The user has already submitted decisions for all provided price
            recommendation approvals.

            - A referred price recommendation approval does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/pricerecommendations/approvals/query:
    post:
      x-audience: Internal
      operationId: queryPriceRecommendationsApprovalsV3
      summary: Query price recommendation approvals
      tags:
        - pricerecommendations
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      description: >
        This endpoint queries price recommendation approvals for a specified set
        of filters.


        Use cases include:

        - Retrieving pending price recommendation approvals.

        - Auditing historic pricing decisions.


        Note:

        *Approval* refers to the price approval flow concept in our business
        processes,

        covering all states of price recommendations within this flow (e.g.,
        pending, approved, rejected).

        The term does not mean all price recommendations are approved.
      requestBody:
        required: true
        description: >
          The request body contains all necessary filters to query the desired
          price recommendation approvals.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceRecommendationsApprovalQueryRequestV3
      responses:
        '200':
          description: >
            A successful response containing a list of price approval meta
            information and associated price recommendations.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/QueryPriceRecommendationsApprovalsV3ApiResponse
        '400':
          description: >
            The request could not be processed due to validation errors in the
            provided body.

            Common issues include:


            - Malformed JSON.

            - Invalid time range provided.

            - Invalid pagination parameters.

            - Invalid approval status values provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/products:
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    post:
      operationId: postProductsImportVendorV3
      summary: Add products in bulk (JSON)
      parameters:
        - in: header
          name: content-type
          required: true
          example: application/json
          schema:
            enum:
              - application/json
            type: string
        - in: header
          name: patagona-tags-decimal-separator
          description: >-
            The decimal separator is used for parsing numbers in tags. English
            and German number formats are supported: dot and comma.
          required: true
          example: .
          schema:
            type: string
            enum:
              - .
              - ','
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkedPostProductsApiResponse'
          description: >-
            The response provides sorted import results in respective to the
            order of the provided products.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Unable to add products because of invalid request data
      tags:
        - products
      description: >-
        This operation is used to import products into the system from JSON
        formatted data:<br>

        Products that are already present will be updated and new products will
        be added. Identification of the products is done based on the
        identifying attributes, which need to be provided via the request
        body.<br><br>Note:<br> This endpoint should be used in conjunction with:
        DELETE  /api/v3/vendor/contracts/{contractId}/products.<br><br>

        Procedure:<br> 1. Add your products in bulks with multiple requests via
        this endpoint.<br> 2. Send a DELETE request to
        /api/v3/vendor/contracts/{contractId}/products
           and set the parameter updatedMax to a date which is older or equal to your first request from step 1.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProductsRequest'
        description: The body contains the products which should be added
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putProductsImportVendorV3
      summary: Add products in bulk (CSV)
      parameters:
        - in: header
          name: content-type
          required: true
          example: text/csv
          schema:
            enum:
              - text/csv
              - text/comma-separated-values
              - text/csv; charset=UTF-8
              - text/comma-separated-values; charset=UTF-8
            type: string
        - description: >-
            A single CSV column that identify a product uniquely.

            Avoid using tags as an identifier, as this feature will soon be
            deprecated

            By doing so, you may loose historical market data during product
            import.
          in: header
          name: patagona-product-identifying-attributes
          required: true
          example: id-column
          schema:
            type: string
        - description: Csv column that contains the product name
          in: header
          name: patagona-product-name
          required: true
          example: name-column
          schema:
            type: string
        - description: Csv column that contains the reference price
          in: header
          name: patagona-product-reference-price
          required: true
          example: reference-price-column
          schema:
            type: string
        - description: Csv column that contains the min price
          in: header
          name: patagona-product-min-price
          required: true
          example: min-price-column
          schema:
            type: string
        - description: Csv column that contains the max price
          in: header
          name: patagona-product-max-price
          required: true
          example: max-price-column
          schema:
            type: string
        - description: Csv column that contains the gtin
          in: header
          name: patagona-product-gtin
          example: max-price-column
          schema:
            type: string
        - description: >-
            Csv column that contains an id (There is no requirement for this
            field to be unique)
          in: header
          name: patagona-product-customer-id
          example: id-column
          schema:
            type: string
        - description: >-
            Decimal separator used for parsing numbers \

            The values for patagona-decimal-separator,
            patagona-csv-column-separator and patagona-csv-quotation-character
            must be different from one another. \

            Available values: ",", "."
          in: header
          name: patagona-decimal-separator
          example: .
          required: true
          schema:
            type: string
        - description: >-
            The csv column separator \

            It can be provided either as text or as Base64 encoded string (e.g.
            needed for tab as separator). \

            The values for patagona-decimal-separator,
            patagona-csv-column-separator and patagona-csv-quotation-character
            must be different from one another.
          in: header
          name: patagona-csv-column-separator
          example: ','
          required: true
          schema:
            type: string
        - description: >-
            The csv quotation character \

            The values for patagona-decimal-separator,
            patagona-csv-column-separator and patagona-csv-quotation-character
            must be different from one another.
          in: header
          name: patagona-csv-quotation-character
          example: '"'
          required: true
          schema:
            type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProductsApiResponse'
          description: >-
            The field data.url in the returned object allows to check the status
            of the import process. It will point to the endpoint GET
            /api/2/v/contracts/{contractId}/tasks/{taskId}. \

            The field data.id is the task id corresponding to the product
            import.
      tags:
        - products
      description: >-
        This operation is used to import products into the system from CSV
        formatted data.

        This process is represented by a task, which is processed
        asynchronously.

        In the response you will receive a url which is used to check the status
        of the import process. <br>


        When the process is done all products in csv file from the request body
        will be in the pricemonitor.

        Products that were already present before have been updated and new
        products have been added. <br>


        Warning: All products that were in the pricemonitor before but are not
        present in the new import will be deleted.


        Identification of the products is done based on the identifying
        attributes (see parameter: patagona-product-identifying-attributes)


        Note: It is recommended to use the JSON variant to add products as it
        works synchronously and more efficient.
      requestBody:
        content:
          text/csv:
            schema:
              type: string
        description: >-
          CSV file containing the products. Note: The CSV file should be encoded
          in UTF-8.
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      parameters:
        - in: query
          name: updatedMax
          description: >-
            Last updated timestamp of products, formatted as ISO Date (i.e.
            2019-11-20T13:46:13Z) in UTC.<br> Products can be deleted which
            haven't been updated since the specified timestamp.<br> If the query
            parameter is missing all products are deleted.
          required: false
          schema:
            format: date-time
            type: string
        - in: query
          name: tagKey
          description: >-
            Tag key to consider for deleting products. This parameter works in
            combination with tagValue.
          required: false
          schema:
            type: string
        - in: query
          name: tagValue
          description: >-
            Tag value to consider for deleting products. This parameter works in
            combination with tagKey.
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductsApiResponse'
          description: Returns the number of deleted products.
        '400':
          description: >
            Tags specified for deleting products are specified partially (either
            tagKey or tagValue is provided).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      tags:
        - products
      operationId: deleteProducts
      summary: Delete products
      description: >
        Delete all products or delete products by a last updated timestamp
        and/or a tag.


        **Note:** Avoid any product import requests concurrently with DELETE
        requests to prevent potential issues.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/products/{productId}/extendedtags:
    get:
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
        - description: ID of the product
          in: path
          name: productId
          required: true
          example: 1
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExtendedTagsApiResponse'
          description: Returns a list of ExtendedTags for the given product.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Given product does not exist.
      tags:
        - products
      operationId: getExtendedTags
      summary: Return the extended tags for the given product
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: productId
        required: true
        schema:
          type: string
  /api/v3/vendor/contracts/{contractId}/products/{productId}/properties:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: ID of the product (Omnia's internal product id)
        in: path
        name: productId
        required: true
        example: 12345678
        schema:
          type: integer
          format: int64
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductPropertiesV3ApiResponse'
          description: A list of product properties
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Returned if the product does not exist.
      tags:
        - products
        - internal
      operationId: getProductPropertiesV3
      description: >-
        This endpoint returns a list product properties for a certain product
        and contract.

        Product properties represent additional information for a product,
        independent of the imported products and tags.
      summary: Get all product properties for a product
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: >-
            The product properties have been stored successfully for the
            product.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Returned if the request body is invalid:
            - The request body is not a valid JSON string.
            - The provided product properties contain duplicated keys.
            - The provided product properties contain an empty key.
            - The provided product properties contain a key which is too long.
            - The provided product properties contain a value which is too long.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Returned if the product does not exist.
      tags:
        - products
        - internal
      operationId: putProductPropertiesV3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PutProductPropertiesRequestV3
      description: >
        This endpoint allows creating, updating, or deleting product properties
        for a certain product and contract.

        For deleting product properties, it's sufficient to provide an empty
        list of product properties.

        When providing dates, please use the ISO 8601 format.

        When providing numbers, please use dot as decimal separator.


        Product properties represent additional information for a product,
        independent of imported products and tags.
      summary: Manage product properties for a product
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/products/properties/keys:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringArrayResponse'
          description: A list of distinct keys of all product properties.
      tags:
        - products
        - internal
      operationId: getProductPropertyKeysV3
      description: >-
        This endpoint returns a list of distinct product property keys for all
        imported products of a contract.
      summary: Get all product properties keys
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/plugin:
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginRegistrationApiResponse'
          description: Returns a plugin registration for given contract.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Given plugin registration does not exist.
      tags:
        - pluginregistration
      operationId: getPluginRegistration
      summary: Get plugin registration for contract
      description: Return the plugin registration for the given contract.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginRegistrationEmptyApiResponse'
          description: Plugin registration for given contract stored successfully.
      tags:
        - pluginregistration
      operationId: putPluginRegistration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPluginRegistrationRequest'
      summary: Create/update plugin registration for contract
      description: Create and/or update the plugin registration for given contract.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginRegistrationEmptyApiResponse'
          description: Plugin registration for given contract deleted successfully.
      tags:
        - pluginregistration
      operationId: deletePluginRegistration
      summary: Delete plugin registration for contract
      description: Delete the plugin registration for the given contract.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/log/messages:
    post:
      responses:
        '200':
          description: The logs have been stored successfully.
      tags:
        - logs
      operationId: postLogMessages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogMessages'
      summary: Store log messages
      description: >-
        Stores log messages in the platform. This endpoint aims to improve the
        API integration process.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/companies:
    x-audience: Internal
    get:
      operationId: getAllCompanies
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/com.patagona.pricemonitor.share.api.AdminCompanyV2
          description: A list of companies was loaded
      parameters:
        - in: query
          name: start
          description: Start of the pagination
          schema:
            default: 0
            format: int32
            type: integer
        - in: query
          name: limit
          description: Number of elements per page
          schema:
            default: 100
            format: int32
            type: integer
      tags:
        - internal
        - controlpanel
      summary: Get a list of all companies
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - controlpanel
      operationId: addCompany
      summary: Add company
      description: Add a company.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/contracts:
    x-audience: Internal
    get:
      responses:
        '200':
          description: A list of contracts was loaded
      tags:
        - internal
        - undocumented
        - controlpanel
      summary: Get a list of all contracts
      operationId: getAllContracts
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/portals:
    x-audience: Internal
    get:
      responses:
        '200':
          description: A list of portals was loaded
      tags:
        - internal
        - undocumented
        - controlpanel
      summary: Get a list of all portals
      operationId: getAllPortals
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/users:
    x-audience: Internal
    get:
      responses:
        '200':
          description: A list of users was loaded
      tags:
        - internal
        - undocumented
        - controlpanel
      summary: Get a list of all users
      operationId: getAllUsers
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/users:
    x-audience: Internal
    post:
      responses:
        '200':
          description: A new user was added
        '400':
          description: A new user was not added
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        description: The new user to be added
      tags:
        - internal
        - controlpanel
      summary: Add a new user
      operationId: addUser
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/1/{contractId}/products/analysis/timestamps:
    x-audience: Internal
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - pricerecommendations
      operationId: getTimeStamps
      summary: Get time stamps
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - in: path
        name: contractId
        required: true
        schema:
          type: integer
          format: int64
  /api/1/{contractId}/products/articlescountbyportal:
    x-audience: Internal
    get:
      operationId: getProductMetricsByContract
      summary: Get product metrics for contract
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - offers
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: end
          required: true
          schema:
            type: string
            format: date-time
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/1/{contractId}/products/offers:
    x-audience: Internal
    get:
      operationId: rawOffers
      summary: Get offers for contract
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: since
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: until
          required: false
          schema:
            type: string
            format: date-time
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/1/{contractId}/products/orderscountbyportal:
    x-audience: Internal
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - orders
      operationId: getOrdersCountByPortalByContract
      summary: Get orders count by portal
      description: Get the number of orders by portal for the given contract.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/1/{contractId}/settings:
    x-audience: Internal
    get:
      operationId: getSettings
      summary: Get settings for contract
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.GetContractSettingsResponseV1
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putSettings
      summary: Update settings for contract
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.PutAdminContractSettingsBody
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PutAdminContractSettingsBody
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/1/{contractId}/settings/alerts:
    x-audience: Internal
    get:
      operationId: getAlertSettings
      summary: Get alert settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: createAlertSettings
      summary: Create alert settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/1/{contractId}/settings/alerts/{alertId}:
    x-audience: Internal
    delete:
      operationId: deleteAlertSettings
      summary: Delete alert settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: updateAlertSettings
      summary: Update alert settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: alertId
        required: true
        schema:
          type: string
  /api/1/{contractId}/settings/dynamicmonitoring:
    x-audience: Internal
    get:
      operationId: getDynamicMonitoringSettings
      summary: Get dynamic monitoring settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putDynamicMonitoringSettings
      summary: Update dynamic monitoring settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteDynamicMonitoringSettings
      summary: Delete dynamic monitoring settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/1/{contractId}/settings/include_delivery_costs:
    x-audience: Internal
    post:
      operationId: saveIncludeDeliveryCosts
      summary: Update includes delivery costs setting
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/1/{contractId}/tasks:
    x-audience: Internal
    get:
      operationId: getTasks
      summary: Get tasks
      tags:
        - internal
        - undocumented
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: tasks
          required: true
          schema:
            type: string
        - in: query
          name: attributes
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: taskType
          required: false
          schema:
            type: string
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: createTask
      summary: Create task
      description: Create a new task
      deprecated: true
      tags:
        - internal
        - undocumented
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.CreateTaskBodyV2
        description: Create a new task
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/1/{contractId}/tasks/{taskId}:
    x-audience: Internal
    get:
      operationId: getTask
      summary: Get task
      description: Get a task by id
      deprecated: true
      tags:
        - internal
        - undocumented
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: taskId
        required: true
        schema:
          type: string
  /api/1/{contractId}/tasks/{taskId}/state:
    x-audience: Internal
    get:
      operationId: getTaskState
      summary: Get task state
      description: Gets the state of a task.
      tags:
        - internal
        - undocumented
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: taskId
        required: true
        schema:
          type: string
  /api/1/{contractId}/vendors/{vendor}/positions:
    x-audience: Internal
    post:
      operationId: positionDistribution
      summary: Update position distribution
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: day
          required: true
          schema:
            type: string
            format: date-time
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: vendor
        required: true
        schema:
          type: string
  /api/2/m/contracts/{contractId}:
    x-audience: Internal
    get:
      operationId: getManufacturerManufacturerV2
      summary: Get contract [manufacturer]
      tags:
        - internal
        - undocumented
        - companies
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/products/csv:
    x-audience: Internal
    put:
      operationId: putProductsCSVManufacturerV2
      summary: Set products via CSV file [manufacturer]
      deprecated: true
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/products/tags:
    x-audience: Internal
    get:
      operationId: getTagsManufacturerV2
      summary: Get product tags [manufacturer]
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/products/tags/{key}:
    x-audience: Internal
    get:
      operationId: getTagValuesManufacturerV2
      summary: Get product tag values [manufacturer]
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: key
        required: true
        schema:
          type: string
  /api/2/m/contracts/{contractId}/result/contract/stats:
    x-audience: Internal
    get:
      operationId: statsManufacturerV2
      summary: Get contract statistics [manufacturer]
      tags:
        - internal
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.ContractStats
          description: >-
            Get the contract statistics: product count, vendor count, found
            offers count (filters applied), active portals count, found offers
            count (no filters applied)
      parameters:
        - in: query
          name: session
          required: true
          schema:
            type: string
            format: date-time
          description: >-
            A ISO 8601 timestamp which marks the end of a 48h time range in
            which the data is collected
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/result/offersegmentation:
    x-audience: Internal
    post:
      operationId: segmentOffersManufacturerV2
      summary: Update segment offers [manufacturer]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/result/pricecutters:
    x-audience: Internal
    post:
      operationId: getPriceCuttersManufacturerV2
      summary: Query price cutters [manufacturer]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: session
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: includeDeliveryCosts
          required: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/result/pricesbyday/productid/{productId}:
    x-audience: Internal
    post:
      operationId: pricesByDayByProductIdManufacturerV2
      summary: Query prices by day by product
      tags:
        - internal
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/com.patagona.pricemonitor.share.api.PricesByDayByProductIdResponseV2
          description: The list of all known prices for the queried day & product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PricesByDayByProductIdRequestV2
        description: >-
          Query all known prices for a given day & product ID. Can be filtered
          by using the selectors.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: productId
        required: true
        schema:
          type: string
        description: The product ID to filter for
  /api/2/m/contracts/{contractId}/result/priceviolations:
    x-audience: Internal
    get:
      operationId: getProductPriceViolationsManufacturerV2
      summary: Get product price violations [manufacturer]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: end
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: includeDeliveryCosts
          required: true
          schema:
            type: boolean
        - in: query
          name: referencePriceDelta
          required: true
          schema:
            type: number
            format: double
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/result/timestamps:
    x-audience: Internal
    get:
      operationId: timestampsManufacturerV2
      summary: Get timestamps
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/result/validation:
    x-audience: Internal
    post:
      operationId: validateOffersManufacturerV2
      summary: Validate offers [manufacturer]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/result/vendors/cheapest:
    x-audience: Internal
    post:
      operationId: getCheapestVendorsManufacturerV2
      summary: Query cheapest offers
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: session
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: includeDeliveryCosts
          required: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.TagFilteredVendorsRequest
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/result/vendors/list:
    x-audience: Internal
    post:
      operationId: getVendorsByDomainManufacturerV2
      summary: Get vendors by domain
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.PostVendorsByDomainResponse
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: domain
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: includeDeliveryCosts
          required: true
          schema:
            type: boolean
        - in: query
          name: session
          required: true
          schema:
            type: string
            format: date-time
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.TagFilteredVendorsRequest
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/settings/imagetag:
    x-audience: Internal
    put:
      operationId: putImageTagManufacturerV2
      summary: Update image tag [manufacturer]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/settings/monitoring:
    x-audience: Internal
    get:
      operationId: getMonitoringSettingsManufacturerV2
      summary: Get monitoring settings for contract
      description: Get the current monitoring settings for a given contract
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: The current monitoring settings object
      tags:
        - internal
        - settings
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putMonitoringSettingsManufacturerV2
      summary: Update monitoring settings for contract
      description: Update the monitoring settings for a given contract
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Returns the successfully updated monitoring settings object
      tags:
        - internal
        - settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: The monitoring settings object to be written to the database
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/tasks:
    x-audience: Internal
    get:
      operationId: getTasksManufacturerV2
      summary: Find tasks for contract [manufactuerer]
      description: Returns a list of task objects for the given contract
      tags:
        - internal
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericTask'
          description: The list of tasks for the given contract
      parameters:
        - in: query
          name: taskIdsFilter
          required: false
          schema:
            type: string
          description: Comma separated list of task IDs to filter for
        - in: query
          name: taskTypeFilter
          required: true
          schema:
            type: array
            items:
              type: string
          description: A list of task types to filter for
        - in: query
          name: taskState
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - pending
                - executing
                - succeeded
                - failed
          description: A list of task states to filter for
        - in: query
          name: minCreationDate
          required: false
          schema:
            type: string
            format: date-time
          description: Ignore all tasks created earlier than this date (ISO 8601)
        - in: query
          name: maxCreationDate
          required: false
          schema:
            type: string
            format: date-time
          description: Ignore all tasks created later than this date (ISO 8601)
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            default: 100
          description: The maximum number of tasks returned
        - in: query
          name: includeFailures
          required: true
          schema:
            type: boolean
            default: true
          description: Include failed tasks
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: createTaskManufacturerV2
      summary: Create task [manufacturer]
      description: Creates a new task for a manufacturer contract
      tags:
        - internal
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTaskWithUrl'
          description: The new task was successfully created
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.CreateTaskBodyV2
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/m/contracts/{contractId}/tasks/{taskId}:
    x-audience: Internal
    get:
      operationId: getTaskManufacturerV2
      summary: Get task [manufacturer]
      description: Get the task with the specified id.
      tags:
        - internal
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTask'
          description: The task was found and is returned
        '404':
          description: No task with given taskId was found
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: updateTaskManufacturerV2
      summary: Update task [manufacturer]
      description: Update an existing task.
      tags:
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTask'
          description: The task was successfully updated and the given data is returned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequestV2'
        description: The new task object to be written to the database
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: taskId
        required: true
        schema:
          type: string
  /api/2/m/contracts/{contractId}/tasks/{taskId}/data:
    x-audience: Internal
    description: Returns the payload data given during creation of the requested task
    get:
      operationId: getTaskDataManufacturerV2
      summary: Get task data [manufacturer]
      tags:
        - internal
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: The payload data of the requested task is returned
        '404':
          description: The task with the given ID could not be found
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: taskId
        required: true
        schema:
          type: string
  /api/2/users/{userId}/role/{roleName}:
    x-audience: Internal
    delete:
      operationId: deleteUserRole
      summary: Delete user role
      description: Remove the specified role from the given user.
      tags:
        - internal
        - undocumented
        - account
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: updateUserRole
      summary: Add user role
      description: Add the specified role to the given user.
      tags:
        - internal
        - undocumented
        - account
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: roleName
        required: true
        schema:
          type: string
  /api/2/v/contracts:
    x-audience: Internal
    get:
      operationId: getContractsVendorV2
      summary: Get contracts [vendor]
      tags:
        - internal
        - undocumented
        - companies
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: maxCreationDate
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: minExpirationDate
          required: false
          schema:
            type: string
            format: date-time
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/v/contracts/{contractId}:
    x-audience: Internal
    get:
      operationId: getVendorVendorV2
      summary: Get contract [vendor]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - companies
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteContractVendorV2
      summary: Delete contract [vendor]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      tags:
        - internal
        - undocumented
        - companies
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/feeds/{feedId}/export:
    x-audience: Internal
    get:
      operationId: getFeedExportVendorV2
      summary: Get export feed
      tags:
        - internal
        - undocumented
        - feeds
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: fileName
          required: false
          schema:
            type: string
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: feedId
        required: true
        schema:
          type: string
  /api/2/v/contracts/{contractId}/offerfilters/{listType}/complex:
    x-audience: Internal
    get:
      operationId: getComplexOfferFiltersVendorV2
      summary: Get all complex filters for the given contract.
      tags:
        - internal
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferFilterApiResponse'
          description: List of the filters to ignore the individual offers.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putComplexOfferFiltersVendorV2
      summary: Add the complex filters for the given contract.
      tags:
        - internal
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferFilterApiResponse'
          description: List of the filters that have been sent as the request body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferFilterRequest'
        description: >-
          List of the filter that needs to be considered to ignore the
          individual offers.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: listType
        required: true
        schema:
          type: string
  /api/2/v/contracts/{contractId}/offerfilters/{listType}/products:
    x-audience: Internal
    get:
      operationId: getProductFiltersByRangeVendorV2
      summary: Get all the filters product-wise for the given contract.
      tags:
        - internal
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: List of the filters per product to ignore the individual offers.
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: listType
        required: true
        schema:
          type: string
  /api/2/v/contracts/{contractId}/offerfilters/{listType}/products/{productId}:
    x-audience: Internal
    get:
      operationId: getProductFiltersVendorV2
      summary: Get all the filters of a given product for the given contract.
      tags:
        - internal
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferFilterApiResponse'
          description: List of the filters to ignore the individual offers.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putProductFiltersVendorV2
      summary: Store the filters of a given product for the given contract.
      tags:
        - internal
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferFilterApiResponse'
          description: List of the filters that have been sent as the request body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferFilterRequest'
        description: >-
          List of the filter that needs to be considered to ignore the
          individual offers.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: listType
        required: true
        schema:
          type: string
      - in: path
        name: productId
        required: true
        schema:
          type: string
  /api/2/v/contracts/{contractId}/offerfilters/:listType/products/query:
    x-audience: Internal
    post:
      operationId: getProductFiltersByIDVendorV2
      summary: Get filtered offers
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/offerfilters/{listType}/vendors:
    x-audience: Internal
    get:
      operationId: getOfferFiltersVendorV2
      summary: Get all vendor filters for contract
      description: Get all the vendor filters for the given contract.
      tags:
        - internal
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: >-
            List of the filters to ignore the individual offers. Offers are
            filtered against vendor name either for all the domain or for a
            specific domain.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putOfferFiltersVendorV2
      summary: Store vendor filters for contract
      description: Store the vendor filters for the given contract.
      tags:
        - internal
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: List of the filters that have been sent as the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: >-
          List of the filters that needs to be considered to ignore the
          individual offers.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: listType
        required: true
        schema:
          type: string
  /api/2/v/contracts/{contractId}/offers:
    post:
      operationId: postOffersInABulkVendorV2
      summary: Add offers in bulk
      tags:
        - offers
      responses:
        '200':
          description: >
            The request was successfully processed.

            Each individual POST offers request was validated and handled
            separately.

            The 'data' field in the response contains one entry per request
            item, in the same order as submitted.


            Each entry is either:

            - `true`: The offer snapshot was accepted and stored.

            - `ApiErrorResponse`: The snapshot was rejected, including details
            about the reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanBulkApiResponse'
        '400':
          description: >
            The server could not understand the request due to invalid syntax.
            For example, a required field might be missing in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      description: >
        This endpoint can be used to provide external offers to Omnia 2.0.

        It's a bulk endpoint which accepts an array of individual POST offers
        requests each based on a "snapshot" - a

        unique combination of product, domain, and timestamp for a list of
        offers.


        Validation rules before storage:


        1. The product must exist in the contract.

        2. Only snapshots newer than those already stored will be accepted.

        3. Each domain must use a consistent currency.

        4. Duplicate snapshots in the same request are stored once.

        5. Conflicting snapshots for the same product + domain + timestamp are
        all rejected.

        6. Offer IDs must be unique across all offers.

        7. The domain field must not be empty.

        8. Offer prices must be ≥ 0.01, delivery costs must be ≥ 0.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.PostProductOfferRequest
        description: >
          A list of individual POST offers requests (snapshots) to be stored.


          Submit up to 1,000 snapshots per request for optimal performance.

          Snapshots are validated and processed in the order provided. The
          response follows the same order.
        required: true
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/v/contracts/{contractId}/productidentifiermapping:
    x-audience: Internal
    post:
      operationId: postMappingsVendorV2
      summary: Update product identifier mapping
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      operationId: getMappingsVendorV2
      summary: Get product mappings
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: inputType
          required: true
          schema:
            type: string
        - in: query
          name: identifiers
          required: true
          schema:
            type: array
            items:
              type: string
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/products/import:
    x-audience: Internal
    post:
      operationId: shopIntegrationPostRequestVendorV2
      summary: Update shop integration import
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/products/tags:
    x-audience: Internal
    get:
      operationId: getTagsVendorV2
      summary: Get product tags [vendor]
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/products/tags/{key}:
    x-audience: Internal
    get:
      operationId: getTagValuesVendorV2
      summary: Get tag values for key
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: key
        required: true
        schema:
          type: string
  /api/2/v/contracts/{contractId}/result/offersegmentation:
    x-audience: Internal
    post:
      operationId: segmentOffersVendorV2
      summary: Update segment offers [vendor]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/result/pricecutters:
    x-audience: Internal
    post:
      operationId: getPriceCuttersVendorV2
      summary: Query price cutters [vendor]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: session
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: includeDeliveryCosts
          required: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/result/pricerecommendations/query:
    x-audience: Internal
    post:
      operationId: queryPriceRecommendationsVendorV2
      summary: Query price recommendations
      tags:
        - internal
        - pricerecommendations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPriceRecommendationsV2ApiResponse'
          description: >
            A paginated list of price recommendations is returned for the
            specified timerange. <br>

            Only the newest price recommendations are returned in case of
            multiple price recommendations per product.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceRecommendationApiQueryV2'
        description: >-
          The request body specifies which price recommendations will be
          searched for.
      description: >-
        This endpoint is used to query certain price recommendations. It
        supports a rather complex filtering structure. Most commonly it's used
        for querying by our internal product id.


        Here you can find an example request body for querying one product id
        (here `123456`):


        <details>

        <summary>Click to expand</summary>


        ``` json

        {
          "pagination": {
            "start": 0,
            "limit": 500
          },
          "range": {
            "start": "2023-01-07T12:05:01.000Z",
            "end": "2023-01-09T12:05:01.000Z"
          },
          "filter": {
            "filters": [{
              "left": {
                "attributeName": "productId",
                "type": "StringValueProvider"
              },
              "right": {
                "value": "123456",
                "type": "StringConstantValueProvider"
              },
              "comparison": {
                "type": "StringEquality"
              },
              "type": "ComparisonFilter"
            }],
            "type": "OrFilter"
          }
        }

        ```

        </details>


        If you want to query for multiple product ids, then you need to provide
        one object per product id in the filters-array.


        It's recommended to query for at most 1000 price recommendations at
        once.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/result/pricerecommendationstats:
    x-audience: Internal
    get:
      operationId: getPriceRecommendationStatsVendorV2
      summary: Get price reommendation stats
      tags:
        - internal
        - undocumented
        - pricerecommendations
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: startTime
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: endTime
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: maxPositions
          required: true
          schema:
            type: integer
            format: int32
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/result/priceviolations:
    x-audience: Internal
    get:
      operationId: getProductPriceViolationsVendorV2
      summary: Get product price violations [vendor]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: end
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: includeDeliveryCosts
          required: true
          schema:
            type: boolean
        - in: query
          name: referencePriceDelta
          required: true
          schema:
            type: number
            format: double
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/result/validation:
    x-audience: Internal
    post:
      operationId: validateOffersVendorV2
      summary: Validate offers [vendor]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/callbacks:
    get:
      operationId: getCallbacksVendorV2
      summary: Get callbacks
      description: Retrieve all callbacks for the given contract.
      tags:
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.Callbacks
          description: >
            Returns a list of all configured callbacks for certain events.

            These callbacks are executed once the respective event has been
            successfully completed.
        '404':
          description: Contract settings for this contract don't exist yet.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putCallbacksVendorV2
      summary: Update callbacks
      description: >
        Create or update callbacks for the given contract.

        This is used to upsert (insert or update) all callbacks at once.

        Keep in mind that callbacks can be used by multiple parties (Omnia
        internal, Omnia Plugins, Users).

        It's strongly recommended to provide your callbacks with a unique name
        to easily identify them later.

        To update a single callback, you must also provide all other callbacks
        to ensure no callbacks from other parties are lost.

        To delete all callbacks, you can provide an empty list.
      tags:
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.Callbacks
          description: Returns the callbacks that have been successfully stored.
        '404':
          description: Contract settings for this contract don't exist yet
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.Callbacks
        description: The request body should contain a list of callbacks to be stored.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteCallbackSettingsVendorV2
      summary: Delete callbacks
      x-audience: Internal
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/currency:
    x-audience: Internal
    get:
      operationId: getCurrencyVendorV2
      summary: Get currency settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putCurrencyVendorV2
      summary: Update currency settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/ebay/authorizations:
    x-audience: Internal
    post:
      operationId: postEbayAuthorizationVendorV2
      summary: Update Ebay authorization
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      operationId: getAllEbayAuthorizationsVendorV2
      summary: Get Ebay authorizations
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/ebay/authorizations/{authIds}:
    x-audience: Internal
    get:
      operationId: getEbayAuthorizationsVendorV2
      summary: Get Ebay authorization
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: authIds
        required: true
        schema:
          type: string
  /api/2/v/contracts/{contractId}/settings/ebay/token:
    x-audience: Internal
    get:
      operationId: getActiveEbayTokenVendorV2
      summary: Get active Ebay token
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/ebay/tokens:
    x-audience: Internal
    get:
      operationId: getAllEbayTokensVendorV2
      summary: Get all Ebay tokens
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/imagetag:
    x-audience: Internal
    put:
      operationId: putImageTagVendorV2
      summary: Update image tag [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/import:
    x-audience: Internal
    get:
      operationId: getImportSettingsVendorV2
      summary: Get import settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putImportSettingsVendorV2
      summary: Update import settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteImportSettingsVendorV2
      summary: Delete import settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/monitoring:
    x-audience: Internal
    get:
      operationId: getMonitoringSettingsVendorV2
      summary: Get monitoring settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putMonitoringSettingsVendorV2
      summary: Update monitoring settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/repricing:
    x-audience: Internal
    get:
      operationId: getVendorSettings_V2VendorV2
      summary: Get repricing settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putVendorSettingsVendorV2
      summary: Update repricing settings
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/settings/repricingstrategy:
    x-audience: Internal
    get:
      operationId: getRepricingStrategyVendorV2
      summary: Get repricing strategy
      tags:
        - internal
        - undocumented
        - pricerecommendations
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: >-
            In case a document version is provided, get that strategy version.
            Otherwise get latest strategy for this contract.
      parameters:
        - in: query
          name: documentVersion
          required: false
          example: 5
          schema:
            type: integer
            format: int32
            minimum: 1
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putRepricingStrategyVendorV2
      summary: Update repricing strategy
      tags:
        - internal
        - undocumented
        - pricerecommendations
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Save a new strategy version
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteRepricingStrategyVendorV2
      summary: Delete repricing strategy
      tags:
        - internal
        - undocumented
        - pricerecommendations
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Delete all strategy versions per provided contract
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/2/v/contracts/{contractId}/tasks/{taskId}/data:
    x-audience: Internal
    get:
      operationId: getTaskDataVendorV2
      summary: Get task data [vendor]
      tags:
        - internal
        - undocumented
        - tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: taskId
        required: true
        schema:
          type: string
  /api/account/password/reset:
    x-audience: Internal
    post:
      operationId: requestNewPassword
      summary: Request a new password
      tags:
        - internal
        - account
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
                example: >-
                  Eine E-Mail mit Anweisungen zum Zurücksetzen des Passworts
                  wurde versandt. Bitte überprüfen Sie Ihren Spam-Ordner und
                  ggf. die angegebene E-Mail-Adresse, falls in den nächsten
                  Minuten keine E-Mail ankommen sollte.
          description: Successful response upon password request
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Invalid request body is specified
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostNewPasswordRequest
        description: Request a new password.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: resetPassword
      summary: Reset the password
      tags:
        - internal
        - account
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
                example: Das Passwort wurde erfolgreich geändert.
          description: Password changed successfully.
        '400':
          content:
            text/plain:
              schema:
                type: string
                example: >-
                  Der benutzte Link ist abgelaufen, bitte benutzen Sie die
                  Passwort-Vergessen Funktion erneut.
          description: Password didn't change successfully.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PutResetPasswordRequest
        description: Reset a password
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/login/token/{token}:
    x-audience: Internal
    get:
      operationId: loginByAuthToken
      summary: Log in with authentication token
      tags:
        - internal
        - undocumented
        - account
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security: []
    parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
  /api/v3/manufacturer/contracts/{contractId}:
    x-audience: Internal
    get:
      operationId: getManufacturerV3
      summary: Get contract [manufacturer]
      tags:
        - internal
        - companies
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManufacturerV3ApiResponse'
          description: Contract Information
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/manufacturer/contracts/{contractId}/monitoringpipeline/v1/searchattempts:
    x-audience: Internal
    post:
      operationId: monitoringPipelineUpsertSearchAttemptsManufacturerV3
      summary: Update monitoring pipeline search attempts [manufacturer]
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/manufacturer/contracts/{contractId}/offers/query:
    x-audience: Internal
    post:
      operationId: queryOffersManufacturerV3
      summary: Query offers [manufacturer]
      tags:
        - internal
        - undocumented
        - offers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/manufacturer/contracts/{contractId}/offers/pricedumpingstats:
    x-audience: Internal
    post:
      operationId: queryOffersPriceDumpingStatsManufacturerV3
      summary: Query price dumping statistics
      description: >-
        This operation is used to query price dumping statistics for a time
        range for a set of shops.
      tags:
        - products
        - internal
      parameters:
        - $ref: '#/components/parameters/contractIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPriceDumpingStatsApiResponse'
          description: Returns the price dumping statistics in the given time range.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceDumpingStatsRequest
        required: true
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/products/{productId}:
    x-audience: Internal
    patch:
      operationId: patchProductManufacturerV3
      summary: Update product [manufacturer]
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: productId
        required: true
        schema:
          type: string
  /api/v3/manufacturer/contracts/{contractId}/products/{productId}/extendedtags:
    x-audience: Internal
    get:
      operationId: getExtendedTagsManufacturerV3
      summary: Get extended tags [manufacturer]
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: productId
        required: true
        schema:
          type: string
  /api/v3/manufacturer/contracts/{contractId}/products/query:
    x-audience: Internal
    post:
      operationId: queryProductsByFilterManufacturerV3
      summary: Get products of a contract
      description: >-
        This endpoint can be used for querying either all products or certain
        products by product ids.
      tags:
        - internal
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/QueryProductsByFilterManufacturerV3ApiResponse
          description: Returns a list of found products.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryProductsRequestV3'
        description: The body contains the products query.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3.1/manufacturer/contracts/{contractId}/products/query:
    x-audience: Internal
    post:
      operationId: queryProductsManufacturerV3
      summary: Query products for manufacturer
      tags:
        - products
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProductsManufacturerV3ApiResponse'
          description: Returns a list of found products.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.ApiQuery
        description: >
          The body contains the products query. <br>

          Currently, it supports only product queries for two attributes:<br>

          <ul>
            <li> by "customerProductId"</li>
            <li> by "productId" (Patagona's internal product id). Allowed values for 'productId' are numerical integer values</li>
          </ul>

          The maximum allowed limit in the pagination is 10000. <br>

          For better performance, when paginating over all products of a
          contract, we recommend to use a limit of 10000 products per page.

          Pagination works with respective to the given products query. <br>

          This is most relevant when querying for a set of customerProductId's.
          <br>

          When the requests are chunked over a set of ids, it is easiest to
          provide up to 10000 customerProductId's in the query and keep the
          pagination at start: 0, limit: 10000. <br>

          The only allowed pattern is currently: <br>

          { <br>

          &nbsp;&nbsp;"pagination": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"start": ${start}, <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"limit": ${limit} <br>

          &nbsp;&nbsp;}, <br>

          &nbsp;&nbsp;"filter": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"oneOf": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [${customerProductIds as
          a list of strings}] <br>

          &nbsp;&nbsp;&nbsp;&nbsp;} <br>

          &nbsp;&nbsp;} <br>

          } <br>

          <br>

          example: <br>

          { <br>

          &nbsp;&nbsp;"pagination": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"start": 0, <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"limit": 10 <br>

          &nbsp;&nbsp;}, <br>

          &nbsp;&nbsp;"filter": { <br>

          &nbsp;&nbsp;"oneOf": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": ["1", "2", "3", "4",
          "5", "6", "7", "8", "9", "10"] <br>

          &nbsp;&nbsp;&nbsp;&nbsp;} <br>

          &nbsp;&nbsp;} <br>

          } <br>
      security:
        - BasicAuth: []
        - BearerAuth: []
    summary: Get products of a contract
    description: >-
      This endpoint can be used for querying either all products or certain
      products by the 'customerProductId' or 'productId'.
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/manufacturer/contracts/{contractId}/settings/customer:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    get:
      operationId: getCustomerContractSettingsManufaturerV3
      summary: Get contract settings [manufacturer]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerContractSettingsApiResponse'
          description: Settings for this contract.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putCustomerContractSettingsManufacturerV3
      summary: Update contract settings [manufacturer]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCustomerContractSettingsApiResponse'
          description: Settings for this contract.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.CustomerContractSettings
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/settings/monitoring:
    x-audience: Internal
    put:
      operationId: putMonitoringSettingsManufacturerV3
      summary: Update monitoring settings [manufacturer]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      operationId: getMonitoringSettingsManufacturerV3
      summary: Get monitoring settings [manufacturer]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/manufacturer/contracts/{contractId}/settings/offerretention:
    x-audience: Internal
    get:
      operationId: getOfferRetentionSettingsManufacturerV3
      summary: Get offer retention settings [manufacturer]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: contractType
          required: true
          schema:
            type: string
            enum:
              - Pricemonitor for manufacturers
              - Pricemonitor for resellers
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putOfferRetentionSettingsManufacturerV3
      summary: Update offer retention settings [manufacturer]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: contractType
          required: true
          schema:
            type: string
            enum:
              - Pricemonitor for manufacturers
              - Pricemonitor for resellers
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}:
    x-audience: Internal
    get:
      operationId: getVendorV3
      summary: Get contract [vendor]
      tags:
        - internal
        - undocumented
        - companies
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/monitoringpipeline/v1/searchattempts:
    x-audience: Internal
    post:
      operationId: monitoringPipelineUpsertSearchAttemptsVendorV3
      summary: Update monitoring pipeline search attempts [vendor]
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/products/{productId}:
    x-audience: Internal
    patch:
      operationId: patchProductVendorV3
      summary: Update product [vendor]
      tags:
        - internal
        - undocumented
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: path
        name: productId
        required: true
        schema:
          type: string
  /api/v3/vendor/contracts/{contractId}/products/monitoringstatus:
    get:
      operationId: getProductMonitoringStatusVendorV3
      summary: Get monitoring status of queried products
      tags:
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GetProductMonitoringStatusVendorV3ApiResponse
          description: Monitoring status of the queried products
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - in: query
        name: productIds
        schema:
          type: array
          items:
            type: integer
          minItems: 1
          uniqueItems: true
          maxItems: 1000
        style: form
        explode: true
        required: true
        description: The product ids for which the monitoring state should be returned
  /api/v3/vendor/contracts/{contractId}/products/monitoringstatus/stats:
    x-audience: Internal
    get:
      operationId: getProductMonitoringStatusStatsVendorV3
      summary: Get product monitoring status stats [vendor]
      tags:
        - products
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GetProductMonitoringStatusStatsVendorV3ApiResponse
          description: Contains the monitoring status stats per domain
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/products/query:
    x-audience: Internal
    post:
      operationId: queryProductsByFilterVendorV3
      summary: Query products of a contract
      tags:
        - internal
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProductsByFilterVendorV3ApiResponse'
          description: Returns a list of found products.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryProductsRequestV3'
        description: The body contains the products query.
      description: >-
        This endpoint can be used for querying either all products or certain
        products by product ids.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/products/{productId}/pricerecommendationhistory:
    get:
      operationId: getProductPriceRecommendationHistory
      summary: Get price recommendations for one product
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPriceRecommendationHistoryApiResponse'
          description: A list of price recommendations
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: E.g. when the time range spans more than 48h.
      tags:
        - products
        - pricerecommendations
      description: >-
        This endpoint returns all price recommendations for one product within a
        given time range.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - $ref: '#/components/parameters/productIdParam'
      - $ref: '#/components/parameters/startDate'
      - $ref: '#/components/parameters/endDate'
  /api/v3.1/vendor/contracts/{contractId}/products/query:
    post:
      operationId: queryProductsVendorV3
      summary: Query products of a contract
      description: >-
        This endpoint can be used for querying either all products or certain
        products by the 'customerProductId' or 'productId'.
      tags:
        - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProductsVendorV3ApiResponse'
          description: Returns a list of found products.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.ApiQuery
        description: >
          The body contains the products query. <br>

          Currently, it supports only product queries for two attributes:<br>

          <ul>
            <li> by "customerProductId"</li>
            <li> by "productId" (Patagona's internal product id). Allowed values for 'productId' are numerical integer values</li>
          </ul>

          The maximum allowed limit in the pagination is 10000. <br>

          For better performance, when paginating over all products of a
          contract, we recommend to use a limit of 10000 products per page.

          Pagination works with respective to the given products query. <br>

          This is most relevant when querying for a set of customerProductId's.
          <br>

          When the requests are chunked over a set of ids, it is easiest to
          provide up to 10000 customerProductId's in the query and keep the
          pagination at start: 0, limit: 10000. <br>

          It also contains a boolean optional parameter 'includeTags' which is
          used to include the tags of the products in the response. <br>

          The only allowed pattern is currently: <br>

          { <br>

          &nbsp;&nbsp;"pagination": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"start": ${start}, <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"limit": ${limit} <br>

          &nbsp;&nbsp;}, <br>

          &nbsp;&nbsp;"filter": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"oneOf": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [${customerProductIds as
          a list of strings}] <br>

          &nbsp;&nbsp;&nbsp;&nbsp;} <br>

          &nbsp;&nbsp;}, <br>

          &nbsp;&nbsp;"includeTags": ${includeTags} <br>

          } <br>

          <br>

          example: <br>

          { <br>

          &nbsp;&nbsp;"pagination": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"start": 0, <br>

          &nbsp;&nbsp;&nbsp;&nbsp;"limit": 10 <br>

          &nbsp;&nbsp;}, <br>

          &nbsp;&nbsp;"filter": { <br>

          &nbsp;&nbsp;"oneOf": { <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"field": "customerProductId", <br>

          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": ["1", "2", "3", "4",
          "5", "6", "7", "8", "9", "10"] <br>

          &nbsp;&nbsp;&nbsp;&nbsp;} <br>

          &nbsp;&nbsp;}, <br>

          &nbsp;&nbsp;"includeTags": true <br>

          } <br>
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/settings/customer:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    get:
      operationId: getCustomerContractSettingsVendorV3
      summary: Get customer contract settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerContractSettingsApiResponse'
          description: Settings for this contract.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putCustomerContractSettingsVendorV3
      summary: Update customer contract settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCustomerContractSettingsApiResponse'
          description: Settings for this contract.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.CustomerContractSettings
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/settings/monitoring:
    x-audience: Internal
    put:
      operationId: putMonitoringSettingsVendorV3
      summary: Update monitoring settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      operationId: getMonitoringSettingsVendorV3
      summary: Get monitoring settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /api/v3/vendor/contracts/{contractId}/settings/offerretention:
    x-audience: Internal
    get:
      operationId: getOfferRetentionSettingsVendorV3
      summary: Get offer retention settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: contractType
          required: true
          schema:
            type: string
            enum:
              - Pricemonitor for manufacturers
              - Pricemonitor for resellers
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putOfferRetentionSettingsVendorV3
      summary: Update offer retention settings [vendor]
      tags:
        - internal
        - undocumented
        - settings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: contractType
          required: true
          schema:
            type: string
            enum:
              - Pricemonitor for manufacturers
              - Pricemonitor for resellers
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
  /controlpanel/api/companies/{companyId}:
    x-audience: Internal
    get:
      operationId: getCompany
      summary: Get company
      tags:
        - internal
        - undocumented
        - companies
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
  /controlpanel/api/companies/{companyId}/users:
    x-audience: Internal
    get:
      operationId: getUsers
      summary: Get all users of a company
      description: >-
        This endpoint returns all users that are assigned to a company. It is
        only accessible for admins or company admins.
      tags:
        - internal
        - companies
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/com.patagona.pricemonitor.share.api.GetCompanyUsersUser
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
  /controlpanel/api/companies/{companyId}/users/{userId}:
    x-audience: Internal
    delete:
      operationId: removeUser
      summary: Remove user from company
      tags:
        - internal
        - undocumented
        - companies
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
      - in: path
        name: userId
        required: true
        schema:
          type: integer
          format: int64
  /controlpanel/api/tasks:
    x-audience: Internal
    get:
      operationId: getAllTasks
      summary: Get all tasks
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: contractId
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: taskId
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: taskType
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: taskState
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: minCreationDate
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: maxCreationDate
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/tasks/stats:
    x-audience: Internal
    get:
      operationId: getTasksStats
      summary: Get all task stats
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: sinceSeconds
          required: true
          schema:
            type: integer
            format: int32
      security:
        - BasicAuth: []
        - BearerAuth: []
  /controlpanel/api/users/{email}:
    x-audience: Internal
    get:
      operationId: getUser
      summary: Get user
      description: Get the user with the specified email address.
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
  /controlpanel/companies/{id}/users/{email}:
    x-audience: Internal
    put:
      operationId: addCompanyUser
      summary: Add user to company
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int32
      - in: path
        name: email
        required: true
        schema:
          type: string
  /controlpanel/users/{email}/authtokens:
    x-audience: Internal
    post:
      operationId: createAuthToken
      summary: Create authentication token
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
  /controlpanel/users/{email}/authtokens/{token}:
    x-audience: Internal
    delete:
      operationId: deleteAuthToken
      summary: Delete authentication token
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: updateAuthToken
      summary: Update authentication token
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
      - in: path
        name: token
        required: true
        schema:
          type: string
  /controlpanel/vendorexport/{vendor}:
    x-audience: Internal
    get:
      operationId: vendorData
      summary: Get vendor export data
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: minPrice
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: maxPrice
          required: true
          schema:
            type: number
            format: double
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - in: path
        name: vendor
        required: true
        schema:
          type: string
  /controlpanel/vendors:
    x-audience: Internal
    get:
      operationId: listVendors
      summary: Get list of vendors
      tags:
        - internal
        - undocumented
        - controlpanel
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      parameters:
        - in: query
          name: nameFilter
          required: true
          schema:
            type: string
      security:
        - BasicAuth: []
        - BearerAuth: []
  /login:
    x-audience: Internal
    post:
      operationId: authenticate
      summary: Authenticate
      tags:
        - undocumented
        - account
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Authenticate with the API and create a session
      security: []
  /logout:
    x-audience: Internal
    post:
      operationId: logout
      summary: Log out
      tags:
        - undocumented
        - account
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Deauthenticate with the API and destroy the current session.
      security: []
  /api/account/password:
    x-audience: Internal
    put:
      operationId: changePassword
      summary: Change password
      tags:
        - undocumented
        - account
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Change the current user's password.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/v/contracts/{contractId}/shop-integration/{path}:
    x-audience: Internal
    get:
      operationId: shopIntegrationGetRequest
      summary: Get shop integration
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: shopIntegrationPostRequest
      summary: Update shop integration
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: The shop-integration path to be called
        in: path
        name: path
        required: true
        schema:
          type: string
  /api/2/log/messages:
    x-audience: Internal
    post:
      operationId: postLogMessage
      summary: Log a message
      description: Logs a message.
      deprecated: true
      tags:
        - deprecated
        - logs
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/2/domains:
    x-audience: Internal
    get:
      operationId: getAllDomainsV2
      summary: Gets a list of all available domains (V2)
      description: Gets a list of all available domains for monitoring.
      deprecated: true
      tags:
        - deprecated
        - domains
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: A list of all available domains for monitoring.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/monitoringpipeline/{path}:
    x-audience: Internal
    post:
      operationId: monitoringPipelinePostRequestVendorV3
      summary: Update monitoring pipeline [vendor]
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: The monitoring-pipeline path to be called
        in: path
        name: path
        required: true
        schema:
          type: string
  /api/v3/manufacturer/contracts/{contractId}/monitoringpipeline/{path}:
    x-audience: Internal
    post:
      operationId: monitoringPipelinePostRequestManufacturerV3
      summary: Update monitoring pipeline [manufacturer]
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: The monitoring-pipeline path to be called
        in: path
        name: path
        required: true
        schema:
          type: string
  /api/v3/vendor/contracts/{contractId}/export/{path}:
    x-audience: Internal
    get:
      operationId: getExportRequestVendorV3
      summary: Export operations for reading.
      description: The GET request is proxied to the internal Export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: postExportRequestVendorV3
      summary: Write export operations
      description: The POST request is proxied to the internal Export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putExportRequestVendorV3
      summary: Update export operations
      description: The PUT request is proxied to the internal Export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteExportRequestVendorV3
      summary: Delete export operations
      description: The DELETE request is proxied to the internal export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    patch:
      operationId: patchExportRequestVendorV3
      summary: Patch export operations
      description: The PATCH request is proxied to the internal export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: The export path to be called
        in: path
        name: path
        required: true
        schema:
          type: string
  /api/v3/vendor/contracts/{contractId}/import/{path}:
    x-audience: Internal
    get:
      operationId: getImportRequestVendorV3
      summary: Import operations for reading.
      description: The GET request is proxied to the internal Import API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Import API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: postImportRequestVendorV3
      summary: Write import operations
      description: The POST request is proxied to the internal Import API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Import API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putImportRequestVendorV3
      summary: Update import operations
      description: The PUT request is proxied to the internal Import API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Import API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteImportRequestVendorV3
      summary: Delete import operations
      description: The DELETE request is proxied to the internal import API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Import API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    patch:
      operationId: patchImportRequestVendorV3
      summary: Patch import operations
      description: The PATCH request is proxied to the internal import API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the Import API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: The import path to be called
        in: path
        name: path
        required: true
        schema:
          type: string
  /api/v3/vendor/contracts/{contractId}/import-export/{path}:
    x-audience: Internal
    get:
      operationId: getImportExportRequestVendorV3
      summary: Import-export operations for reading.
      description: The GET request is proxied to the internal import-export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the import-export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: postImportExportRequestVendorV3
      summary: Write import-export operations
      description: The POST request is proxied to the internal import-export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the import-export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putImportExportRequestVendorV3
      summary: Update import-export operations
      description: The PUT request is proxied to the internal import-export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the import-export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteImportExportRequestVendorV3
      summary: Delete import-export operations
      description: The DELETE request is proxied to the internal import-export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the import-export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    patch:
      operationId: patchImportExportRequestVendorV3
      summary: Patch import-export operations
      description: The PATCH request is proxied to the internal import-export API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful response returned by the import-export API.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: The import-export path to be called
        in: path
        name: path
        required: true
        schema:
          type: string
  /api/v3/vendor/contracts/{contractId}/scheduler/{path}:
    x-audience: Internal
    get:
      operationId: schedulerGetRequestVendorV3
      summary: Get scheduler operation [vendor]
      description: The GET request is proxied to the internal Scheduler API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: schedulerPostRequestVendorV3
      summary: Create scheduler operation
      description: The POST request is proxied to the internal Scheduler API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: schedulerPutRequestVendorV3
      summary: Update scheduler operation
      description: The PUT request is proxied to the internal Scheduler API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: schedulerDeleteRequestVendorV3
      summary: Delete scheduler operation
      description: The DELETE request is proxied to the internal Scheduler API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: The scheduler path to be called
        in: path
        name: path
        required: true
        schema:
          type: string
  /api/v3/manufacturer/contracts/{contractId}/scheduler/{path}:
    x-audience: Internal
    get:
      operationId: schedulerGetRequestManufacturerV3
      summary: Get scheduler operation [manufacturer]
      description: The GET request is proxied to the internal Scheduler API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: schedulerPostRequestManufacturerV3
      summary: Create scheduler operation [manufacturer]
      description: The POST request is proxied to the internal Scheduler API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: schedulerPutRequestManufacturerV3
      summary: Update scheduler operation [manufacturer]
      description: The PUT request is proxied to the internal Scheduler API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: schedulerDeleteRequestManufacturerV3
      summary: Delete scheduler operation [manufacturer]
      description: The DELETE request is proxied to the internal Scheduler API.
      tags:
        - undocumented
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: This is a generated entry and needs to be described.
      security:
        - BasicAuth: []
        - BearerAuth: []
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - description: The scheduler path to be called
        in: path
        name: path
        required: true
        schema:
          type: string
  /api/v3/user/looker/attributes:
    x-audience: Internal
    get:
      operationId: getLookerUserAttributes
      summary: Get Looker user attributes
      description: >
        Retrieves user attributes from Looker. We created the endpoint to allow
        us to track the impact of the issue described in

        [Confluence](https://omniaretail.atlassian.net/wiki/spaces/DEV/pages/648151090/Looker+Dashboard+Mismatch+Problem+in+Omnia+2.0)
      tags:
        - internal
        - looker
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookerUserAttributesV3ApiResponse'
          description: Looker user attributes.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/looker/sso/embed/url:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    post:
      operationId: postEmbedSSOUrlVendorForContracts
      summary: Retrieve Looker embed SSO url [vendor]
      description: >-
        Returns a signed Looker SSO URL for embedding a dashboard for a
        contract. The target dashboard must be whitelisted.
      tags:
        - internal
        - looker
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedSSOUrlResponseV3ApiResponse'
          description: Signed Looker SSO embed URL.
        '400':
          description: |
            - Invalid Looker URL
            - Dashboard ID is not allowed
            - Looker API returns client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostEmbedSSOUrlRequestV3
        description: Payload for retrieving a signed embed SSO url using Looker API.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/looker/sso/embed/url:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    post:
      operationId: postEmbedSSOUrlManufacturer
      summary: Retrieve Looker embed SSO url [manufacturer]
      description: >-
        Returns a signed Looker SSO URL for embedding a dashboard for a
        contract. The target dashboard must be whitelisted.
      tags:
        - internal
        - looker
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedSSOUrlResponseV3ApiResponse'
          description: Signed Looker SSO embed URL.
        '400':
          description: |
            - Invalid Looker URL
            - Dashboard ID is not allowed
            - Looker API returns client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostEmbedSSOUrlRequestV3
        description: Payload for retrieving a signed embed SSO url using Looker API.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/companies/{companyId}/looker/sso/embed/url:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
    post:
      operationId: postEmbedSSOUrlVendorForCompanies
      summary: Retrieve Looker embed SSO url for company dashboards [vendor]
      description: >-
        Returns a signed Looker SSO URL for embedding a dashboard for a company.
        The target dashboard must be whitelisted.
      tags:
        - internal
        - looker
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedSSOUrlResponseV3ApiResponse'
          description: Signed Looker SSO embed URL.
        '400':
          description: |
            - Invalid Looker URL
            - Dashboard ID is not allowed
            - Looker API returns client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostEmbedSSOUrlRequestV3
        description: Payload for retrieving a signed embed SSO url using Looker API.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/companies/{companyId}/looker/sso/embed/url:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
    post:
      operationId: postEmbedSSOUrlManufacturerForCompanies
      summary: Retrieve Looker embed SSO url for company dashboards [manufacturer]
      description: >-
        Returns a signed Looker SSO URL for embedding a dashboard for a company.
        The target dashboard must be whitelisted.
      tags:
        - internal
        - looker
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedSSOUrlResponseV3ApiResponse'
          description: Signed Looker SSO embed URL.
        '400':
          description: |
            - Invalid Looker URL
            - Dashboard ID is not allowed
            - Looker API returns client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostEmbedSSOUrlRequestV3
        description: Payload for retrieving a signed embed SSO url using Looker API.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/companies/{companyId}/users:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
    post:
      operationId: postInviteUserToCompanyV3
      summary: Invite a user to a company
      description: |
        Company admin user can invite a user to a company.
      tags:
        - companies
        - internal
      responses:
        '200':
          description: >-
            User is already associated with the given company and hence no
            invitation is sent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUserToCompanyResponseV3ApiResponse'
        '201':
          description: >-
            Invitation sent and the user is assigned to the company
            successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUserToCompanyResponseV3ApiResponse'
        '400':
          description: |
            - Invalid email address is provided
            - Empty name is provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '500':
          description: Communication with Auth0 service failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.InviteUserToCompanyRequestV3
        description: User information including email & display name.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/companies/{companyId}/users/contractaccess:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
    get:
      operationId: getUserAccessToContractsOfCompanyV3
      summary: Get contract access of users
      description: |
        Get which user can access which contract of the company.
      tags:
        - companies
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GetUserAccessToContractsOfCompanyV3ApiResponse
          description: All users and their accessible contracts
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putUserAccessToContractsOfCompanyV3
      summary: Set contract access of users
      description: >
        Users can either access all contracts of a company or only dedicated
        contracts.

        With this api endpoint one can control the access rights of a user.
      tags:
        - companies
        - internal
      responses:
        '200':
          description: Empty response signalling that the changes have been applied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.UserAccessToContractsOfCompany
        description: All users and their accessible contracts
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/companies/{companyId}/amazon/marketplace:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
    post:
      operationId: postActivateMarketplaceVendorV3
      summary: Activate Amazon marketplace
      tags:
        - amazon-integration
        - internal
      description: >
        Activate marketplace of a customer in our system. By activation, it
        means that our system can

        write prices back into the customer's Amazon shop.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateMarketplaceResponseV3ApiResponse'
          description: Successfully activated marketplace of a customer in our system.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >
            - Specified marketplace already activated.

            - Invalid marketplace country code is specified.

            - Given company is not registered with our system. One must register
            his seller central account with our system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostActivateMarketplaceRequestV3
        description: Marketplace of a customer to be activated.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/companies/{companyId}/amazon/marketplace/{marketplaceCountryCode}/contracts/{contractId}:
    x-audience: Internal
    parameters:
      - in: path
        name: marketplaceCountryCode
        schema:
          type: string
        required: true
        description: >-
          Marketplace country code. You can view complete list here.
          https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
          Currently, only Europe as a region is supported.
        example: DE
      - $ref: '#/components/parameters/companyIdParam'
      - $ref: '#/components/parameters/contractIdParam'
    get:
      operationId: getMarketplaceActivationStatus
      summary: Get marketplace activation status
      description: |
        Get marketplace activation status of a customer in our system.
      tags:
        - amazon-integration
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateMarketplaceResponseV3ApiResponse'
          description: Marketplace activation status.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >
            - Specified marketplace already activated.

            - Invalid marketplace country code is specified.

            - Given company is not registered with our system. One must register
            his seller central account with our system.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/companies/{companyId}/amazon/authorization/status:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
    get:
      operationId: getAuthorizationStatusVendorV3
      summary: Get authorization status for Amazon seller account
      description: >
        Get OAuth authorization status for customer's Amazon seller central
        account.

        For setting up OAuth authorization, have a look at the endpoint

        POST /api/v3/companies/{companyId}/amazon/authorization.
      tags:
        - amazon-integration
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GetAuthorizationStatusResponseV3ApiResponse
          description: Authorization status of a customer on Amazon.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/companies/{companyId}/amazon/authorization:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/companyIdParam'
    post:
      operationId: postAuthorizeSellerVendorV3
      summary: Set up authorization for Amazon seller account
      description: >
        Set up an OAuth authorization for a customer's Amazon Seller Central
        account.

        It establishes a connection between our system and the customer's Amazon
        shop using the Amazon SP-API.

        Once connected, our system can write prices back to the customer's
        Amazon shop, allowing them to benefit

        from our price recommendations.
      tags:
        - amazon-integration
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAuthorizeSellerResponseV3ApiResponse'
          description: Successfully authorized customer's Amazon seller central account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostAuthorizeSellerRequestV3
        description: Customer's Amazon seller central account to be authorized.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/settings/monitoringschedules:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    post:
      operationId: postMonitoringScheduleVendorV3
      summary: Add monitoring schedule for contract
      description: Add a monitoring schedule for a given contract.
      tags:
        - internal
        - monitoring-schedules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMonitoringSchedulesApiResponse'
          description: Monitoring schedule has been created successfully.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >-
            Monitoring schedule could not be created due to an internal server
            error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3
        description: Request body for creating monitoring schedule.
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      operationId: getMonitoringSchedulesVendorV3
      summary: Get all monitoring schedules for contract [vendor]
      description: Get all the monitoring schedules for a specified vendor contract.
      tags:
        - monitoring-schedules
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMonitoringSchedulesApiResponse'
          description: List of monitoring schedules.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/settings/monitoringschedules/{scheduleId}:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - $ref: '#/components/parameters/scheduleIdParam'
    delete:
      operationId: deleteMonitoringScheduleVendorV3
      summary: Delete monitoring schedule for contract [vendor]
      description: Delete a monitoring schedule for a given vendor contract.
      tags:
        - internal
        - monitoring-schedules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.DeleteByNumericIdApiResponse
          description: Monitoring schedule has been deleted successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified monitoring schedule does not exist.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >-
            Monitoring schedule could not be deleted due to an internal server
            error.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putMonitoringScheduleVendorV3
      summary: Update monitoring schedule for contract [vendor]
      description: Update a monitoring schedule for a given vendor contract.
      tags:
        - internal
        - monitoring-schedules
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMonitoringSchedulesApiResponse'
          description: Monitoring schedule has been updated successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified monitoring schedule does not exist.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >-
            Monitoring schedule could not be updated due to an internal server
            error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3
        description: Request body for updating monitoring schedule.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/settings/monitoringschedules/{scheduleId}/execute:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - $ref: '#/components/parameters/scheduleIdParam'
      - $ref: '#/components/parameters/triggerFollowUpTask'
    post:
      operationId: executeMonitoringScheduleVendorV3
      summary: Trigger monitoring pipeline for schedule [vendor]
      description: >-
        Trigger a monitoring pipeline task for a vendor for a configured
        monitoring schedule.
      tags:
        - internal
        - monitoring-schedules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Monitoring task was successfully created and is executing
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >-
            Couldn't find any monitoring schedules for given schedule id. No
            monitoring task was created
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/settings/monitoringschedules:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    post:
      operationId: postMonitoringScheduleManufacturerV3
      summary: Add monitoring schedule for contract [manufacturer]
      description: Add a monitoring schedule for a given manufacturer contract.
      tags:
        - internal
        - monitoring-schedules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMonitoringSchedulesApiResponse'
          description: Monitoring schedule has been created successfully.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3
        description: Request body for creating monitoring schedule.
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      operationId: getMonitoringSchedulesManufacturerV3
      summary: Get all monitoring schedules for contract [manufacturer]
      description: Get all the monitoring schedules for a specified manufacturer contract.
      tags:
        - monitoring-schedules
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMonitoringSchedulesApiResponse'
          description: List of monitoring schedules.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/settings/monitoringschedules/{scheduleId}:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - $ref: '#/components/parameters/scheduleIdParam'
    delete:
      operationId: deleteMonitoringScheduleManufacturerV3
      summary: Delete monitoring schedule for contract [manufacturer]
      description: Delete a monitoring schedule for a given manufacturer contract.
      tags:
        - internal
        - monitoring-schedules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.DeleteByNumericIdApiResponse
          description: Monitoring schedule has been deleted successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified monitoring schedule does not exist.
      security:
        - BasicAuth: []
        - BearerAuth: []
    put:
      operationId: putMonitoringScheduleManufacturerV3
      summary: Update monitoring schedule for contract [manufacturer]
      description: Update a monitoring schedule for a given manufacturer contract.
      tags:
        - internal
        - monitoring-schedules
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMonitoringSchedulesApiResponse'
          description: Monitoring schedule has been updated successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified monitoring schedule does not exist.
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3
        description: Request body for updating monitoring schedule.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/settings/monitoringschedules/{scheduleId}/execute:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - $ref: '#/components/parameters/scheduleIdParam'
      - $ref: '#/components/parameters/triggerFollowUpTask'
    post:
      operationId: executeMonitoringScheduleManufacturerV3
      summary: Trigger monitoring pipeline for schedule [manufacturer]
      description: >-
        Trigger a monitoring pipeline task for a manufacturer for a configured
        monitoring schedule.
      tags:
        - internal
        - monitoring-schedules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Monitoring task was successfully created and is executing
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >-
            Couldn't find any monitoring schedules for given schedule id. No
            monitoring task was created
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/tasks/preprocessing:
    x-audience: Internal
    parameters:
      - in: query
        name: retrospectiveInMinutes
        schema:
          type: integer
          minimum: 1
          maximum: 10080
        required: true
        description: >-
          The timespan, in minutes, for considering offers in preprocessing.
          Allowed value is between 1 and 10080
      - $ref: '#/components/parameters/contractIdParam'
      - $ref: '#/components/parameters/triggerFollowUpTask'
    post:
      operationId: publishPreprocessingTaskVendorV3
      summary: Publish preprocessing task [vendor]
      description: Publish a preprocessing task for a vendor.
      tags:
        - internal
        - preprocessing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Preprocessing task created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            - Invalid retrospective value.
            - No retrospective value is specified.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/vendors:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    get:
      operationId: getVendorShopMappingsManufacturerV3
      summary: Get all vendors and shops for contract
      description: >-
        Get all the vendors along with their associated shops for a specified
        manufacturer contract.
      tags:
        - vendor-shop-mapping
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVendorShopMappingsApiResponse'
          description: List of vendors along with their associated shops.
      security:
        - BasicAuth: []
        - BearerAuth: []
    post:
      operationId: postVendorShopMappingManufacturerV3
      summary: Add new vendor to contract and associate shops
      description: >-
        Add a new vendor for a given manufacturer contract and associate shops
        with the given vendor.
      tags:
        - internal
        - vendor-shop-mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostVendorShopMappingRequestV3
        description: >-
          Request body for creating a new vendor and associate shops with it.
          Please note that atleast one shop is required for a successful
          creation.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorShopMappingV3ApiResponse'
          description: Vendor shop mapping has been successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >-
            The specified vendor name is empty. Or the specified shops are
            empty.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified vendor name already exists in our system.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified shops do not exist in our system.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/manufacturer/contracts/{contractId}/vendors/{vendorId}:
    x-audience: Internal
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
      - $ref: '#/components/parameters/vendorIdParam'
    put:
      operationId: putVendorShopMappingManufacturerV3
      summary: Update vendor for contract and associate shops
      description: >-
        Update an existing vendor for a given manufacturer contract and
        associate shops with the given vendor.
      tags:
        - internal
        - vendor-shop-mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostVendorShopMappingRequestV3
        description: >-
          Request body for updating an existing vendor and associate shops with
          it. Please note that at least one shop is required for a successful
          creation.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorShopMappingV3ApiResponse'
          description: Vendor shop mapping has been successfully updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: >-
            The specified vendor name is empty. Or the specified shops are
            empty.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified vendor name already exists in our system.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: The specified shops do not exist in our system.
      security:
        - BasicAuth: []
        - BearerAuth: []
    get:
      operationId: getVendorShopMappingManufacturerV3
      summary: Get vendor and shops for contract
      description: >-
        Get vendor along with their associated shop for given vendor id and
        manufacturer contract.
      tags:
        - vendor-shop-mapping
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorShopMappingV3ApiResponse'
          description: >-
            Get vendor along with their associated shop for given vendor id and
            contract.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Vendor doesn't exist for given vendor id.
      security:
        - BasicAuth: []
        - BearerAuth: []
    delete:
      operationId: deleteVendorShopMappingManufacturerV3
      summary: Delete vendor and associated shops for contract
      description: Delete a vendor and associated shops for a given manufacturer contract.
      tags:
        - vendor-shop-mapping
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.DeleteByNumericIdApiResponse
          description: A vendor and associated shops have been deleted successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Specified vendor does not exist.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/account:
    x-audience: Internal
    post:
      operationId: postAccountV3
      summary: Create user account
      description: Create a new user account.
      tags:
        - account
        - internal
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PostAccountRequestV3
        description: >-
          Request body for creating a new user account. It must contain name,
          email and password.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountResponseV3ApiResponse'
          description: The account information of the newly created account.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Returned if:
            - The Request body is not a valid JSON string
            - The user account name is empty
            - The email doesn't match a valid email format
            - The password length is less than 6 characters long
            - The endpoint was requested too often
            - The given email address already exists
  /api/v3/account/password/generate:
    x-audience: Internal
    post:
      operationId: generateAccountPasswordV3
      summary: Generate password for user account
      description: >
        Generates a new complex password for the authenticated user account.

        The primary use case is for an Omnia 2.0 user to call this operation
        through the Omnia 2.0 UI with a JWT token

        to obtain a password for their account that can be used for basic
        authentication to directly call other API endpoints.
      tags:
        - account
        - internal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratePasswordResponseV3ApiResponse'
          description: The new password information.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/products/amazon/buybox/stats:
    parameters:
      - $ref: '#/components/parameters/contractIdParam'
    get:
      operationId: getAmazonBuyboxProductStatsV3
      summary: Get Amazon Buy Box statistics for time range
      description: |
        Provides latest Amazon Buy Box statistics, i.e., whether a
        - product is in Amazon Buy Box for Prime users
        - product is in Amazon Buy Box for Non-Prime users
        per product per Amazon domain for a given time range.
      tags:
        - products
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - description: >-
            Where to start fetching the Amazon Buy Box statistics. Must be
            positive. Default value is 0.
          in: query
          name: start
          required: false
          example: 0
          schema:
            format: int32
            type: integer
        - description: >-
            Maximum number of results. Must be positive and not bigger than
            50,000. Default value is 50,000.
          in: query
          name: limit
          required: false
          example: 50000
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonBuyboxProductStatsV3ApiResponse'
          description: List of Amazon Buybox statistics per product
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: |
            Returned if:
            - The request body is not a valid JSON string.
            - The start date is after the end date.
            - The time range [startDate,endDate] is larger than 48h.
            - The start parameter is negative
            - The limit parameter is negative and larger than 50,000
            - The contract has more than one amazon domain configured.
      security:
        - BasicAuth: []
        - BearerAuth: []
  /api/v3/vendor/contracts/{contractId}/scheduler/jobs:
    parameters:
      - $ref: '#/components/parameters/ContractId'
    get:
      operationId: getContractJobs
      tags:
        - Jobs
      parameters:
        - name: jobType
          description: Filter by job type
          in: query
          required: false
          example: ShopIntegrationUpdateProductsJob
          schema:
            $ref: '#/components/schemas/JobType'
      summary: Get all jobs of a contract
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsApiResponse'
      security:
        - bearerAuth: []
        - basicAuth: []
    post:
      operationId: createJob
      tags:
        - Jobs
      summary: Create new job
      description: >
        The `_id` **must** not be sent when creating a job. It is ignored
        otherwise.


        The `contractId` is taken from the URL path.


        **NOTE**: When also sending the `contractId` in the body and it does not
        conform to the path `contractId`, the request will be rejected.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApiResponse'
      security:
        - bearerAuth: []
        - basicAuth: []
  /api/v3/vendor/contracts/{contractId}/scheduler/jobs/{jobId}:
    parameters:
      - $ref: '#/components/parameters/JobId'
      - $ref: '#/components/parameters/ContractId'
    get:
      tags:
        - Jobs
      operationId: getJob
      summary: Get job
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApiResponse'
      security:
        - bearerAuth: []
        - basicAuth: []
    delete:
      tags:
        - Jobs
      operationId: deleteJob
      summary: Delete a job
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApiResponse'
      security:
        - bearerAuth: []
        - basicAuth: []
    put:
      tags:
        - Jobs
      operationId: updateJob
      summary: Update Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApiResponse'
        '400':
          description: Bad request. Incorrect jobId provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerSchedulerApiErrorResponse'
      security:
        - bearerAuth: []
        - basicAuth: []
  /api/v3/vendor/contracts/{contractId}/scheduler/jobs/{jobId}/dkron:
    parameters:
      - $ref: '#/components/parameters/JobId'
      - $ref: '#/components/parameters/ContractId'
    get:
      tags:
        - Jobs
      operationId: getDkronJob
      summary: Get Dkron job definition
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DkronJobApiResponse'
      security:
        - bearerAuth: []
        - basicAuth: []
  /api/v3/vendor/contracts/{contractId}/scheduler/jobs/{jobId}/dkron/executions:
    parameters:
      - $ref: '#/components/parameters/JobId'
      - $ref: '#/components/parameters/ContractId'
    get:
      tags:
        - Jobs
      operationId: getDkronExecutions
      summary: Get Dkron job executions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DkronExecutionsApiResponse'
      security:
        - bearerAuth: []
        - basicAuth: []
components:
  parameters:
    domainParam:
      description: Fully qualified domain name for the target marketplace or shop
      in: path
      name: domain
      required: true
      schema:
        type: string
        pattern: ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
      example: google.com
    companyIdParam:
      description: Unique identifier of a company in the system
      in: path
      name: companyId
      required: true
      schema:
        format: int64
        type: integer
        minimum: 1
      example: 1
    scheduleIdParam:
      description: Unique identifier of a monitoring schedule
      in: path
      name: scheduleId
      required: true
      schema:
        type: integer
        minimum: 1
      example: 123
    productIdParam:
      description: Internal product identifier in the pricemonitor system
      in: path
      name: productId
      required: true
      schema:
        type: string
        minLength: 1
      example: '862342'
    contractIdParam:
      description: Unique identifier of the contract
      in: path
      name: contractId
      required: true
      schema:
        type: string
        minLength: 1
      example: qbcxvb
    startDate:
      description: >
        **Start of time range** for data retrieval.


        Format: ISO 8601 date-time in UTC (e.g., `2024-01-15T10:30:00Z`)


        **Default behavior:**

        - If omitted and `endDate` is provided: `startDate` = `endDate` - 48
        hours

        - If both omitted: range is `NOW - 48 hours` to `NOW`
      in: query
      name: startDate
      required: false
      schema:
        format: date-time
        type: string
      example: '2024-01-15T00:00:00Z'
    endDate:
      description: >
        **End of time range** for data retrieval.


        Format: ISO 8601 date-time in UTC (e.g., `2024-01-16T10:30:00Z`)


        **Default behavior:**

        - If omitted and `startDate` is provided: `endDate` = `startDate` + 48
        hours

        - If both omitted: range is `NOW - 48 hours` to `NOW`
      in: query
      name: endDate
      required: false
      schema:
        format: date-time
        type: string
      example: '2024-01-16T23:59:59Z'
    getOrdersStartDate:
      description: >
        Timestamp of start of time range for fetching orders.

        Formatted as ISO 8601 format with timezone with reference to UTC (e.g.
        for [Europe/Berlin] in winter time:

        2023-11-01T14:50:45.495+01:00. In summer time:
        2023-11-01T14:50:45.495+02:00).

        If this value is omitted then no lower time limit is considered.
      in: query
      name: startDate
      required: false
      schema:
        format: date-time
        type: string
    getOrdersEndDate:
      description: >
        Timestamp of end of time range for fetching orders.

        Formatted as ISO 8601 format with timezone with reference to UTC (e.g.
        for [Europe/Berlin] in winter time:

        2023-11-01T14:50:45.495+01:00. In summer time:
        2023-11-01T14:50:45.495+02:00).

        If this value is omitted then no upper time limit is considered.
      in: query
      name: endDate
      required: false
      schema:
        format: date-time
        type: string
    startDateOneWeekMax:
      description: >-
        Timestamp of start of time range, formatted as ISO Date (i.e.
        2018-04-06T13:46:13Z) in UTC. If this value is omitted and {endDate} is
        given, {startDate} is set to {endDate} - 48 hours. If both values are
        omitted, the range is 'NOW - 48 hours to NOW'. The time range may not
        exceed 1 week.
      in: query
      name: startDate
      required: false
      schema:
        format: date-time
        type: string
    endDateOneWeekMax:
      description: >-
        Timestamp of end of time range, formatted as ISO Date (i.e.
        2018-04-06T13:46:13Z) in UTC. If this value is omitted and {startDate}
        is given, {endDate} is set to {startDate} + 48 hours. If both values are
        omitted, the range is 'NOW - 48 hours to NOW'. The time range may not
        exceed 1 week.
      in: query
      name: endDate
      required: false
      schema:
        format: date-time
        type: string
    vendorIdParam:
      description: ID of vendor shop mapping
      in: path
      name: vendorId
      required: true
      schema:
        type: integer
        format: int64
      example: 1
    triggerFollowUpTask:
      description: Flag to trigger follow-up tasks once the current task is completed
      in: query
      name: triggerFollowUpTask
      schema:
        type: boolean
        default: true
      example: true
    ContractId:
      name: contractId
      description: Each job must have a `contractId`
      in: path
      required: true
      example: qbcxvb
      schema:
        type: string
    JobId:
      name: jobId
      description: The internal job ID
      in: path
      required: true
      example: 507f1f77bcf86cd799439011
      schema:
        type: string
  schemas:
    LogMessages:
      description: Container for multiple log messages with version information
      properties:
        version:
          type: string
          description: >-
            API version for log message format. Must always be "1" for current
            implementation.
          enum:
            - '1'
          example: '1'
        messages:
          type: array
          description: Array of log messages to be processed
          items:
            $ref: '#/components/schemas/LogMessage'
          minItems: 1
          maxItems: 1000
      required:
        - version
        - messages
    LogMessage:
      description: Individual log message with severity level and contextual information
      required:
        - message
        - severity
        - source
        - component
      properties:
        message:
          type: string
          description: The actual log message content to be published
          example: Product sync completed successfully
          minLength: 1
          maxLength: 5000
        severity:
          type: string
          description: >
            Log message severity level, ordered by priority (highest to lowest):


            - **fatal**: Critical errors causing system termination

            - **error**: Serious errors requiring immediate attention

            - **warn**: Deprecated APIs, poor API usage, or unexpected
            situations

            - **info**: General progress and state information for end users

            - **debug**: Detailed information for application developers and
            support

            - **trace**: Most detailed information for deep debugging
          enum:
            - fatal
            - error
            - warn
            - info
            - debug
            - trace
          example: info
        component:
          type: string
          description: >-
            Name of the integrated system or application component generating
            the log
          example: shopware
          minLength: 1
          maxLength: 100
        source:
          type: string
          description: >-
            Specific entity or source within the component for additional
            categorization
          example: shop.example.com
          minLength: 1
          maxLength: 255
        contractId:
          type: string
          description: The contract identifier associated with this log message
          example: qbcxvb
          minLength: 1
    GenericFilter:
      description: >-
        This is a placeholder for filter expressions. They are using advanced
        features and are not covered by openapi. If you need to use filter
        expressions please contract us.
      type: object
    PricingStrategy:
      description: >-
        This is a placeholder for a pricing strategy. These are using advanced
        features and are not covered by openapi. If you need to work with
        pricing strategies please contract us.
      type: object
    ScenarioTitle:
      description: >-
        Title of the scenario strategy. Should not be empty and a maximum of 50
        chars is allowed
      type: string
    ScenarioDescription:
      description: Description of the scenario strategy. Maximum of 1000 chars allowed
      type: string
    ScenarioStrategySchemaVersion:
      description: Version of the schema the scenario strategy is encoded in
      type: integer
    ApiContract:
      properties:
        active:
          type: boolean
        companyName:
          type: string
        contractId:
          type: string
        contractName:
          type: string
        contractType:
          type: string
        expirationDate:
          format: date-time
          type: string
      type: object
    ApiError:
      description: Individual error information with code and human-readable message
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: >
            Machine-readable error code for programmatic error handling.

            Typically follows a structured format like 'request.invalid' or
            'resource.invalid'.
          minLength: 1
          example: request.invalid
        message:
          type: string
          description: Human-readable error message providing details about the issue
          minLength: 1
          example: The provided email address is not in a valid format
    ApiErrorResponse:
      description: Standard error response containing one or more error details
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          description: List of errors that occurred during request processing
          items:
            $ref: '#/components/schemas/ApiError'
          minItems: 1
          example:
            - code: request.invalid
              message: The provided request data is invalid
            - code: resource.invalid
              message: The requested resource could not be found
    EmptyApiResponse:
      description: Response for operations that don't return specific data
      type: object
      properties:
        data:
          type: object
          description: Empty data object indicating successful operation
          example: {}
    PostProduct:
      description: Product data structure for creating or updating products in the system
      type: object
      required:
        - name
        - referencePrice
        - tags
        - minPriceBoundary
        - maxPriceBoundary
      properties:
        name:
          type: string
          description: Product name or title as displayed to customers
          minLength: 1
          maxLength: 999
          example: Samsung Galaxy S24 Ultra 256GB
        customerProductId:
          type: string
          description: >
            Customer-specific product identifier. This can be your internal SKU
            or product ID.

            Used for mapping products between your system and the pricemonitor.
          minLength: 1
          maxLength: 255
          example: SKU-GALAXY-S24-256
        gtin:
          type: integer
          format: int64
          description: >
            Global Trade Item Number (GTIN) - typically EAN-13, UPC-A, or
            GTIN-14.

            Must be a valid positive number representing the product's global
            identifier.
          minimum: 1
          maximum: 99999999999999
          example: 8806094937329
        referencePrice:
          type: number
          format: double
          description: >
            Reference price for the product.


            **For Omnia 2.0:** This represents the selling price - the actual
            price at which you sell the product.

            **For Pricemonitor:** One of the use cases is to treat this as MSRP
            (Manufacturer's Suggested Retail Price).


            Used as a baseline for pricing strategies and recommendations.

            Will be rounded to two decimal places using half-up rounding.
          minimum: 0.01
          maximum: 9999999999999.99
          example: 1199.99
        minPriceBoundary:
          type: number
          format: double
          description: |
            Minimum allowed price boundary for automated pricing.
            Must be less than or equal to maxPriceBoundary.
            Will be rounded to two decimal places using half-up rounding.
          minimum: 0.01
          example: 999.99
        maxPriceBoundary:
          type: number
          format: double
          description: |
            Maximum allowed price boundary for automated pricing.
            Must be greater than or equal to minPriceBoundary.
            Will be rounded to two decimal places using half-up rounding.
          minimum: 0.01
          maximum: 9999999999999.99
          example: 1399.99
        tags:
          type: array
          description: |
            Product tags for categorization and strategy application.
            Used by pricing strategies to group and target specific products.
          items:
            $ref: '#/components/schemas/TagInput'
          minItems: 0
          maxItems: 100
          example:
            - key: brand
              value: Samsung
            - key: category
              value: smartphones
            - key: storage
              value: 256GB
    CreateCompanyResponse:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    DeletedItemsResponse:
      properties:
        deleted:
          description: Number of deleted orders
          type: integer
      type: object
    ExtendedTag:
      properties:
        booleanValue:
          type: boolean
        doubleValue:
          format: double
          type: number
        integerValue:
          format: int32
          type: integer
        label:
          type: string
        stringValue:
          type: string
      required:
        - label
        - stringValue
    OfferFilterRequest:
      items:
        $ref: '#/components/schemas/AndOfferFilter'
      type: array
    ConstantOfferFilter:
      properties:
        constant:
          properties:
            value:
              type: boolean
          type: object
    AndOfferFilter:
      properties:
        and:
          properties:
            filters:
              items:
                $ref: '#/components/schemas/ConstantOfferFilter'
              type: array
          type: object
    OfferFilterApiResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AndOfferFilter'
          type: array
    PluginRegistration:
      properties:
        pluginId:
          type: string
        shopSystem:
          type: string
        metricsUrl:
          type: string
    PluginRegistrationApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/PluginRegistration'
    PluginRegistrationEmptyApiResponse:
      properties:
        data:
          type: object
    PutPluginRegistrationRequest:
      allOf:
        - $ref: '#/components/schemas/PluginRegistration'
        - type: object
          properties:
            version:
              type: string
              enum:
                - '1'
    Feed:
      properties:
        contractId:
          type: string
        csvDecimalSeparator:
          type: string
        csvSeparator:
          type: string
        deltaUrl:
          type: string
        fields:
          items:
            properties:
              default:
                type: string
              label:
                type: string
              name:
                type: string
            type: object
          type: array
        format:
          type: string
        id:
          type: string
        lastAccessed:
          format: date-time
          type: string
        lastDeletion:
          format: date-time
          type: string
        name:
          type: string
        url:
          type: string
        version:
          format: int64
          type: integer
      type: object
    GetOffersResponse:
      description: A collection of products
      properties:
        data:
          items:
            description: The GTIN of a product and all of its offers
            properties:
              tags:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
              gtin:
                format: int64
                type: integer
              offers:
                items:
                  description: An offer by a specific vendor for a certain product
                  properties:
                    approved:
                      type: boolean
                    attributes:
                      items:
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    availability:
                      type: object
                    creationDate:
                      format: date-time
                      type: string
                    deliveryCosts:
                      format: double
                      type: number
                    domain:
                      type: string
                    maxDeliveryTime:
                      type: object
                    minDeliveryTime:
                      type: object
                    price:
                      format: double
                      type: number
                    productName:
                      type: string
                    url:
                      type: string
                    vendor:
                      type: string
                    vendorIdOnDomain:
                      type: string
                  type: object
                type: array
              productId:
                description: Unique product identifier within pricemonitor
                type: string
            type: object
          type: array
        next:
          type: string
        total:
          format: int64
          type: integer
      type: object
    GetPriceRecommendationsResponse:
      properties:
        next:
          type: string
        priceRecommendations:
          items:
            properties:
              currency:
                type: string
              currentPrice:
                format: double
                type: number
              gtin:
                format: int64
                type: integer
              identifier:
                type: string
              recommendedPrice:
                format: double
                type: number
            type: object
          type: array
      type: object
    Pagination:
      properties:
        limit:
          default: 100
          type: integer
        start:
          type: integer
      required:
        - start
    OffersQuerySortOrderV30:
      properties:
        metric:
          type: string
          enum:
            - TotalPrice
            - Price
        order:
          type: string
          enum:
            - asc
      required:
        - metric
        - order
    PriceRecommendationQuerySortOrderV2:
      properties:
        metric:
          type: string
          enum:
            - productId
            - RelativePriceChangePercentage
        order:
          type: string
          enum:
            - asc
            - desc
      required:
        - metric
        - order
    QueryProductsRequestV3:
      properties:
        filter:
          $ref: '#/components/schemas/ProductsFilter'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - pagination
    PostOfferStatisticsRequest:
      properties:
        filter:
          $ref: '#/components/schemas/ProductsFilter'
        includeDeliveryCosts:
          type: boolean
          example: false
        ownShopNames:
          additionalProperties:
            items:
              type: string
            type: array
            example:
              - myAwesomeShop.de
              - myAwesomeShop24.de
          type: object
          description: >-
            Providing own shops names enables calculating shop positions. The
            keys are domain names. The values are lists of shop names.
          example:
            ebay.de:
              - myAwesomeShop.de
              - myAwesomeShop24.de
            google.de:
              - myAwesomeShop.de
              - myAwesomeShop24.de
        range:
          description: Time range of the offers included in the calculation
          $ref: '#/components/schemas/TimeRange'
      required:
        - range
        - filter
        - ownShopNames
        - includeDeliveryCosts
    ProductsFilter:
      properties:
        type:
          type: string
          enum:
            - ComparisonFilter
        left:
          properties:
            type:
              type: string
              enum:
                - StringValueProvider
            attributeName:
              type: string
              enum:
                - productId
        right:
          properties:
            type:
              type: string
              enum:
                - SequenceOfStringConstantValueProvider
            value:
              items:
                type: string
              type: array
              description: List of internal pricemonitor product ids
        comparison:
          type: string
          enum:
            - StringInSequence
      example:
        type: ComparisonFilter
        left:
          type: StringValueProvider
          attributeName: productId
        right:
          type: SequenceOfStringConstantValueProvider
          value:
            - 1001
            - 1002
        comparison:
          type: StringInSequence
      description: >-
        Filter product statistics by a list of allowed internal pricemonitor
        product ids
      type: object
    PostOfferStatisticsApiResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProductOfferStatistics'
            description: >-
              Contains offer statistics for each found product matching the
              provided filter
          example:
            - productId: 1001
              statsByDomain:
                ebay.de:
                  offerCount: 4
                  minPrice: 16
                  averagePrice: 20
                  ownPosition:
                    price: 17
                    position: 2
                google.de:
                  offerCount: 12
                  minPrice: 7.99
                  averagePrice: 10
            - productId: 1002
              statsByDomain:
                ebay.de:
                  offerCount: 12
                  minPrice: 16
                  averagePrice: 20
                  ownPosition:
                    price: 17
                    position: 2
                google.de:
                  offerCount: 4
                  minPrice: 7.99
                  averagePrice: 10
          type: array
      type: object
    ProductOfferStatistics:
      properties:
        productId:
          description: The internal product id of the pricemonitor
          type: string
          example: 1001
        statsByDomain:
          additionalProperties:
            $ref: '#/components/schemas/OfferStatistics'
          type: object
          description: The offer statistics are grouped by domain.
      type: object
    OfferStatistics:
      properties:
        averagePrice:
          format: double
          type: number
          description: >-
            The average price of the offers, always be provided with two decimal
            places
          example: 10
        minPrice:
          format: double
          type: number
          description: >-
            The lowest price of the offers, always be provided with two decimal
            places
          example: 16
        offerCount:
          type: integer
          description: The number of the found offers
          example: 4
        ownPosition:
          $ref: '#/components/schemas/ShopRank'
      required:
        - averagePrice
        - minPrice
        - offerCount
      type: object
    Product:
      description: A product defined by its attributes
      properties:
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        gtin:
          format: int64
          type: integer
        maxPriceBoundary:
          format: double
          type: number
        minPriceBoundary:
          format: double
          type: number
        name:
          type: string
        productId:
          type: string
        referencePrice:
          format: double
          type: number
      type: object
    ProductOffersApiQuery:
      properties:
        filter:
          $ref: '#/components/schemas/GenericFilter'
        pagination:
          $ref: '#/components/schemas/Pagination'
        range:
          $ref: '#/components/schemas/TimeRange'
        sort:
          $ref: '#/components/schemas/OffersQuerySortOrderV30'
      required:
        - pagination
        - range
    PriceRecommendationApiQueryV2:
      properties:
        filter:
          $ref: '#/components/schemas/GenericFilter'
        pagination:
          $ref: '#/components/schemas/Pagination'
        range:
          $ref: '#/components/schemas/TimeRange'
        sort:
          $ref: '#/components/schemas/PriceRecommendationQuerySortOrderV2'
      required:
        - pagination
        - range
    ScenarioStrategyResponse:
      description: Response body which contains the scenario strategy and relevant metadata
      properties:
        data:
          properties:
            id:
              type: integer
              description: Id of the scenario strategy.
            title:
              $ref: '#/components/schemas/ScenarioTitle'
            description:
              $ref: '#/components/schemas/ScenarioDescription'
            schemaVersion:
              $ref: '#/components/schemas/ScenarioStrategySchemaVersion'
            strategy:
              $ref: '#/components/schemas/PricingStrategy'
            creationDate:
              type: string
              format: date-time
              description: Timestamp of creating the scenario strategy
            createdBy:
              type: string
              description: Email address of the user who created the scenario strategy
            updateDate:
              type: string
              format: date-time
              description: Timestamp of the last update operation
            updatedBy:
              type: string
              description: Email address of the user who last updated the scenario strategy
          type: object
    PostScenarioStrategyRequest:
      description: Request body which contains the strategy and relevant metadata
      properties:
        title:
          $ref: '#/components/schemas/ScenarioTitle'
        description:
          $ref: '#/components/schemas/ScenarioDescription'
        schemaVersion:
          $ref: '#/components/schemas/ScenarioStrategySchemaVersion'
        strategy:
          $ref: '#/components/schemas/PricingStrategy'
      required:
        - title
        - schemaVersion
        - strategy
      type: object
    BooleanBulkApiResponse:
      description: >
        Response for bulk operations, containing one result per item in the
        request body (order preserved). Each result object contains either:
          - `data: true` if the operation succeeded,
          - or `errors`: a list of `ApiError` objects if it failed.
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              data:
                type: boolean
                example: true
              errors:
                items:
                  $ref: '#/components/schemas/ApiError'
                type: array
          example:
            - data: true
            - errors:
                - code: string
                  message: string
      type: object
    DeleteProductsApiResponse:
      properties:
        data:
          properties:
            deleted:
              type: integer
              description: Number of deleted products
          type: object
    PostProductsRequest:
      description: Request body which contains products
      properties:
        products:
          description: Products which should be added to the pricemonitor
          items:
            $ref: '#/components/schemas/PostProduct'
          type: array
        version:
          description: Version of the request body. Only version 2 is supported.
          type: string
          enum:
            - '2'
        identifyingAttributes:
          items:
            $ref: '#/components/schemas/PostProductsIdentifyingAttribute'
          type: array
          description: >-
            Non-empty list of product attributes which identify your products

            uniquely. Please ensure that you specify only one attribute in the
            list.

            Avoid using tags as an identifier, as this feature will soon be
            deprecated.

            By doing so, may loose historical market data during product import.
      required:
        - products
        - version
        - identifyingAttributes
      type: object
    PostProductsIdentifyingAttribute:
      enum:
        - customerProductId
        - gtin
        - name
      type: string
      description: >-
        The identifying attribute needs to be filled for all products. The
        identifying attribute needs to uniquely identify a product. If the
        identifying attribute isn't unique, then only the last of the duplicates
        will be saved. For the others duplicates an error will be provided
    BulkedPostProductsApiResponse:
      properties:
        data:
          items:
            description: >-
              If the product could be added successfully, the corresponding
              pricemonitor product id is returned. Otherwise a dedicated api
              error is returned.
            $ref: '#/components/schemas/PostProductsApiResponse'
          type: array
      type: object
    PostProductsApiResponse:
      properties:
        data:
          properties:
            productId:
              type: string
              description: The pricemonitor product id of the added product
          type: object
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          type: array
      type: object
    ShopRank:
      properties:
        position:
          type: integer
          example: 2
          description: The position of own offer among competing offers
        price:
          format: double
          type: number
          example: 17
          description: The price of own offer
      required:
        - position
        - price
    TagInput:
      description: Key-value pair for product categorization and strategy targeting
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: |
            Tag identifier/name. Must be unique within a single product.
            Used to categorize products for pricing strategies and reporting.
          minLength: 1
          maxLength: 100
          pattern: ^[a-zA-Z0-9_-]+$
          example: brand
        value:
          type: string
          description: |
            Tag value associated with the key.
            Contains the actual categorization data for the product.
          maxLength: 10000
          example: Samsung
    Tag:
      description: Read-only representation of a product tag
      type: object
      properties:
        key:
          type: string
          description: Tag identifier
          example: category
        value:
          type: string
          description: Tag value
          example: smartphones
    Task:
      properties:
        id:
          type: string
        url:
          type: string
    TaskIdAndUrl:
      properties:
        id:
          type: string
        url:
          type: string
      type: object
    TaskWithContractResourceApiResponse:
      properties:
        contractId:
          type: string
        creationDate:
          format: date-time
          type: string
        data:
          items:
            type: string
          type: array
        failures:
          items:
            properties:
              attributes:
                additionalProperties:
                  type: object
              messageId:
                type: string
            type: object
          type: array
        finishDate:
          format: date-time
          type: string
        parentId:
          type: string
        startDate:
          format: date-time
          type: string
        state:
          type: string
        taskId:
          type: string
        taskType:
          type: string
      type: object
    TimeRange:
      properties:
        end:
          format: date-time
          type: string
          description: Timestamp of end of time range, formatted as ISO Date in UTC
          example: '2018-04-06T13:46:13Z'
        start:
          format: date-time
          type: string
          description: Timestamp of start of time range, formatted as ISO Date in UTC
          example: '2018-04-04T13:46:13Z'
      required:
        - start
        - end
    UserSignupRequest:
      properties:
        email:
          type: string
        name:
          type: string
      type: object
    GenericTask:
      description: >-
        A basic task type. Additional fields can be contained depending on
        specific task type.
      properties:
        creationDate:
          type: string
          format: date-time
          description: The creation date of this task
        startDate:
          type: string
          format: date-time
          description: The timestamp of when processing of this task was started
        finishDate:
          type: string
          format: date-time
          description: The timestamp of when processing of this task finished
        state:
          type: string
          enum:
            - pending
            - executing
            - succeeded
            - failed
          description: The current processing state of this task
        failures:
          type: array
          items:
            type: object
          description: >-
            Schemaless. If any errors occured during processing, these will be
            contained here.
        taskId:
          type: string
          description: The unique ID of this task
        parentId:
          type: string
          description: The parents unique taskId, if any parent exists
        taskType:
          type: string
          description: The identifier string for the type of task
        data:
          type: object
          description: >-
            Schemaless. Contains the payload of the task given during task
            creation.
        result:
          type: object
          description: >-
            Schemaless. Contains the processing result for this task. Type is
            dependent on task type.
        failureCode:
          type: string
          description: >-
            If any error occured the error code for this error will be contained
            here.
      required:
        - creationDate
        - state
        - taskId
        - taskType
    GenericTaskWithUrl:
      allOf:
        - $ref: '#/components/schemas/GenericTask'
        - type: object
          description: >-
            A basic task type containing the URL. Additional fields can be
            contained depending on specific task type.
          properties:
            url:
              type: string
              description: The URL of the task
          required:
            - url
    UpdateTaskRequestV2:
      allOf:
        - $ref: '#/components/schemas/GenericTask'
        - type: object
          properties:
            contractId:
              type: string
              description: The contract SID to update the task for
          required:
            - contractId
    NewUser:
      description: New user
      properties:
        email:
          type: string
        name:
          type: string
        password:
          type: string
        companyId:
          type: integer
      required:
        - email
        - name
    StringArrayResponse:
      description: generic array of strings response
      properties:
        data:
          type: array
          items:
            type: string
    com.patagona.pricemonitor.share.api.StrategyMetadataResponseV3:
      description: Metadata used for strategy versioning.
      properties:
        documentVersion:
          type: integer
          description: strategy version per contract
        documentVersionMessage:
          type: string
          description: message provided by user when saving new strategy
        version:
          type: string
          description: schema version of the strategy
        updateDate:
          type: string
          format: date-time
          description: >-
            timestamp of last strategy update. It needs to be an option to
            ensure old strategies can be read.
        updatedBy:
          type: string
          description: >-
            user email of the account that updated the strategy. It needs to be
            an option to ensure old strategies can be read.
      additionalProperties: false
      type: object
      required:
        - documentVersion
        - version
    com.patagona.pricemonitor.share.api.GetPricingStrategyHistoryResponse:
      description: Version history of all strategies
      properties:
        history:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.StrategyMetadataResponseV3
          description: contains metadata of all strategies
      additionalProperties: false
      type: object
      required:
        - history
    GetPricingStrategyHistoryApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GetPricingStrategyHistoryResponse
    com.patagona.pricemonitor.share.api.ScenarioStrategyMetadataResponse:
      description: >-
        Metadata of a scenario strategy in an API response. Here the
        createdBy/updatedBy fields are e-mails, in
        [[com.patagona.pricemonitor.share.strategies.ScenarioStrategyMetadata]]
        these refer to ids
      properties:
        description:
          type: string
          description: optional description of the scenario
        id:
          type: number
          description: unique identifier of the strategy scenario
        updateDate:
          type: string
          format: date-time
          description: timestamp of last strategy update
        createdBy:
          type: string
          description: e-mail of the user creating the strategy
        creationDate:
          type: string
          format: date-time
          description: timestamp of when the strategy was created
        title:
          type: string
          description: up to 50 characters, has to be unique for one contract
        schemaVersion:
          type: integer
          description: schema version of the strategy
        updatedBy:
          type: string
          description: e-mail of the user that last updated the strategy
      additionalProperties: false
      type: object
      required:
        - updateDate
        - updatedBy
        - id
        - createdBy
        - schemaVersion
        - creationDate
        - title
    ScenarioStrategyMetadataResponseApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ScenarioStrategyMetadataResponse
          type: array
    com.patagona.pricemonitor.share.api.PostScenarioStrategyResponse:
      description: Response of a successful post request
      properties:
        id:
          type: number
          description: unique identifier of the strategy scenario
      additionalProperties: false
      type: object
      required:
        - id
    PostScenarioStrategyResponseApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PostScenarioStrategyResponse
    com.patagona.pricemonitor.share.api.GetAllDomainsV3:
      description: Response body containing domain data
      properties:
        domains:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              domain:
                type: string
                description: domain url
              domainId:
                type: number
                description: internal domain id
              offerSources:
                type: array
                items:
                  type: string
                uniqueItems: true
                description: >-
                  list of offerSources for the domain OfferSource:  Describes
                  the origin of the offers. Domain may have more than one offer
                  sources. Here are the possible offer sources:
                  DEFAULT_MONITORING Offers - which are gathered via the
                  monitoring-pipeline by a standard product search. This is
                  typically done via GTIN. CUSTOM_MONITORING Offers - which are
                  gathered via the monitoring-pipeline by a customized search.
                  For instance via tags. OMNIA_CUSTOM_SPIDERING Offers - which
                  originate from omnia custom spidering sources. The domain
                  needs to be prefixed with "omnia.custom.spidering.". PUSH_API
                  Offers - which originate from services where we have a direct
                  API connection and get informed about offer changes. Example:
                  Offers from Amazon-Repricer OTHER Offers - which originate
                  from other sources e.g. Scripts which publish offers
              name:
                type: string
                description: display name for the domain
            required:
              - domain
              - domainId
              - offerSources
              - name
          description: Sequence of domain data
      additionalProperties: false
      type: object
      required:
        - domains
    GetAllDomainsV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GetAllDomainsV3
    com.patagona.pricemonitor.share.api.PostAdminAddDomainBodyV3:
      description: Request body that contains information about adding a new domain
      properties:
        domain:
          type: string
          description: >-
            the domain being added. (Must be unique and non-empty) Allowed
            domain pattern: "&lt;domain-name&gt;.&lt;top-level-domain&gt;".
            Example:"google.com", "amazon.co.uk" (valid), "_google_com"
            (invalid). For omnia custom monitoring, the domain name must be
            prefixed with "omnia.custom.spidering."
        name:
          type: string
          description: >-
            display name for the domain in the UI. (Must be unique and
            non-empty)
        offerSources:
          type: array
          items:
            type: string
          uniqueItems: true
          description: >-
            sources of offers on this domain. (Must be non-empty) Allowed
            sources: "DEFAULT_MONITORING", "CUSTOM_MONITORING",
            "OMNIA_CUSTOM_SPIDERING", "PUSH_API", "OTHER" @example domain =
            "google.de", offerSources = Set("DEFAULT_MONITORING")
      additionalProperties: false
      type: object
      required:
        - domain
        - name
        - offerSources
    com.patagona.pricemonitor.share.api.PostAdminAddDomainV3:
      description: Response body containing id for the added domain
      properties:
        domainId:
          type: number
          description: domain id
      additionalProperties: false
      type: object
      required:
        - domainId
    PostAdminAddDomainV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PostAdminAddDomainV3
    com.patagona.pricemonitor.share.api.PutAdminDomainRequestV3:
      description: >-
        Request body that contains information about updating an existing domain
        with new offerSources or adding a new domain
      properties:
        name:
          type: string
          description: >-
            display name for the domain in the UI. (Must be unique and
            non-empty)
        offerSources:
          type: array
          items:
            type: string
          uniqueItems: true
          description: >-
            sources of offers on this domain. Allowed sources:
            "DEFAULT_MONITORING", "CUSTOM_MONITORING", "OMNIA_CUSTOM_SPIDERING",
            "PUSH_API", "OTHER" @example name = "google", offerSources =
            Set("DEFAULT_MONITORING")
      additionalProperties: false
      type: object
      required:
        - name
        - offerSources
    com.patagona.pricemonitor.share.api.PutAdminDomainResponseV3:
      description: Response body containing id for the updated/added domain
      properties:
        domainId:
          type: number
          description: domain id
      additionalProperties: false
      type: object
      required:
        - domainId
    PutAdminDomainResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PutAdminDomainResponseV3
    com.patagona.pricemonitor.share.api.ApplicationVersion:
      description: Current api version.
      properties:
        version:
          type: string
          description: version represented as X.Y.Z
      additionalProperties: false
      type: object
      required:
        - version
    VersionApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ApplicationVersion
    com.patagona.pricemonitor.share.api.GetFeatureFlagResponse:
      description: Response body for feature flag operations
      properties:
        flagKey:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      type: object
      required:
        - flagKey
    com.patagona.pricemonitor.share.api.GetFeatureFlagsResponse:
      description: Response body for feature flags list operations
      properties:
        flags:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.GetFeatureFlagResponse
      additionalProperties: false
      type: object
      required:
        - flags
    GetAllFeatureFlagsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GetFeatureFlagsResponse
    com.patagona.pricemonitor.share.api.PostFeatureFlagRequest:
      description: Request body for creating a new feature flag
      properties:
        flagKey:
          type: string
        description:
          type: string
      additionalProperties: false
      type: object
      required:
        - flagKey
    CreateFeatureFlagApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GetFeatureFlagResponse
    GetFeatureFlagByKeyApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GetFeatureFlagResponse
    com.patagona.pricemonitor.share.api.PutFeatureFlagRequest:
      description: Request body for updating an existing feature flag
      properties:
        description:
          type: string
      additionalProperties: false
      type: object
      required: []
    UpdateFeatureFlagApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GetFeatureFlagResponse
    CreateCompanyApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: '#/components/schemas/CreateCompanyResponse'
    GetCompanyContractsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApiContract'
          type: array
    com.patagona.pricemonitor.share.api.CreateContractRequest:
      description: Represents a new contract.
      properties:
        contractType:
          type: string
          description: >-
            Type of the contract. Currently, only 2 types are supported: -
            Pricemonitor for manufacturers - Pricemonitor for resellers
        contractName:
          type: string
          description: Name of the new contract
        expirationDate:
          type: string
          format: date-time
          description: Expiration date
      additionalProperties: false
      type: object
      required:
        - contractType
        - contractName
    AddCompanyContractApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: '#/components/schemas/ApiContract'
    com.patagona.pricemonitor.share.api.Callback:
      description: >-
        Defines an HTTP(S) callback that can be registered to respond to system
        events.
      properties:
        method:
          type: string
          description: >-
            The HTTP method to use when making the request. Supported methods
            are GET and POST. If not provided, the default method is GET.
        name:
          type: string
          description: An optional name for the callback, used for identification purposes.
        bodyTemplate:
          type: string
          description: >-
            An optional Mustache template to define the body of the request.<br>
            The following placeholders are available in the template:<br> -
            startTime: The time when the monitoring task started (in ISO 8601
            format).<br> - contractId: The unique identifier of the
            contract.<br> Example default template:
            {"startTime":"{{startTime}}"}.
        url:
          type: string
          description: The URL to which the callback request will be sent.
        headers:
          type: object
          additionalProperties:
            type: string
          description: A map of HTTP headers to be included in the request.
      additionalProperties: false
      type: object
      required:
        - url
        - headers
    com.patagona.pricemonitor.share.api.Callbacks:
      description: >-
        A collection of callbacks that are triggered by specific events. These
        callbacks are executed once the corresponding event is completed
        successfully.
      properties:
        pricemonitorCompleted:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Callback'
          description: >-
            A list of callbacks that are triggered when the "Pricemonitor
            Completed" event occurs, which means:<br> 1. A monitoring task
            (fetching offers) has successfully finished, and/or<br> 2. The price
            recommendation calculation task has been completed.
      additionalProperties: false
      type: object
      required:
        - pricemonitorCompleted
    com.patagona.pricemonitor.share.api.CustomerOrderItemV2:
      description: An ordered item
      properties:
        itemId:
          type: string
          description: >-
            ID of the item in the customer's system. It is expected to be the
            customerProductId. It should be guaranteed that the itemId can be
            always assigned to only one product or variant.
        unitPrice:
          type: number
          description: Gross unit price of a single item, including applicable taxes.
        quantity:
          type: integer
          description: How often the item was purchased.
        taxPercentage:
          type: number
          description: >-
            Tax percentage applied on the unit price, e.g. 20 for 20% tax. This
            percentage is used to determine the tax component of the unitPrice,
            but the unitPrice itself already includes this tax.
      additionalProperties: false
      type: object
      required:
        - itemId
        - unitPrice
        - quantity
    com.patagona.pricemonitor.share.api.CustomerOrderProductMappingV2:
      description: >-
        We originally planned to support complex mappings, but for sake of
        maintainability we restrict the mappings to itemId-> (customerProductId
        or productId)
      properties:
        source:
          type: string
          description: Identifier field within item. Only valid value is 'itemId'
        target:
          type: string
          description: >-
            Must be 'customerProductId' or 'productId' since plugins are still
            publishing both values. The semantics are actually the same. In both
            cases they address the customerProductId.
      additionalProperties: false
      type: object
      required:
        - source
        - target
    com.patagona.pricemonitor.share.api.CustomerOrderV2:
      description: An order placed in a shop.
      properties:
        shippingCosts:
          type: number
          description: Shipping costs of the order
        orderId:
          type: string
          description: >-
            Unique id of an order. It must mean unique in the shop, not in the
            pricemonitor.
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderItemV2
          description: List of bought items
        totalPrice:
          type: number
          description: Total price of the order
        productMappings:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderProductMappingV2
          description: >-
            A relation from the products in your system to the pricemonitor.
            Currently it must contain exactly one element.
        origin:
          type: string
          description: Origin of an order, e.g. the online shop were the order is placed
        creationDate:
          type: string
          format: date-time
          description: Date when the order is created in UTC
        currency:
          type: string
          description: 'Currency used in the order. ISO 4217 Currency Codes: e.g. EUR'
        referrer:
          type: string
          description: >-
            Referrer of an order. Third party (e.g. marketplace) which referred
            the customer to the online shop
      additionalProperties: false
      type: object
      required:
        - orderId
        - shippingCosts
        - origin
        - creationDate
        - items
        - productMappings
        - totalPrice
        - currency
    com.patagona.pricemonitor.share.api.PostCustomerOrdersRequestV2:
      description: Request body containing bulked orders
      properties:
        orders:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderV2
          description: Orders in bulk
        version:
          type: string
          description: Version of orders
      additionalProperties: false
      type: object
      required:
        - orders
        - version
    PostOrdersBulkApiResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              data:
                properties:
                  orders:
                    items:
                      $ref: >-
                        #/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderV2
                    type: array
                  version:
                    type: string
                type: object
              errors:
                items:
                  $ref: '#/components/schemas/ApiError'
                type: array
    com.patagona.pricemonitor.share.api.ExtendedTag:
      description: >-
        Tags represent additional information of a product. Extended tags can
        contain evaluated values like numbers which are determined during
        product import. The `stringValue` is used for deriving the evaluated
        values. Example: You provide a tag with label "strategy" and
        `stringValue` "1" during product import. This will be evaluated to these
        extended values: - integerValue  1 - doubleValue   1.0 - booleanValue 
        true
      properties:
        doubleValue:
          type: number
          description: >-
            The double value depends on the decimal separator which has been
            provided during product import.
        integerValue:
          type: integer
          description: >-
            The integer value of the tag. It's only defined when the
            `stringValue` consists solely of digits.
        label:
          type: string
          description: The name of the tag. It can't be empty.
        stringValue:
          type: string
          description: The text value of the tag.
        booleanValue:
          type: boolean
          description: >-
            The boolean value of the tag. It's only set to true when the
            `stringValue` is "1" or "true".
      additionalProperties: false
      type: object
      required:
        - stringValue
        - label
    com.patagona.pricemonitor.share.api.ApiPriceRecommendation:
      description: Represents a price recommendation of the pricemonitor.
      properties:
        oldPrice:
          type: number
          description: >-
            The price of the cheapest offer of the own shop(s) on the relevant
            domain
        deliveryCosts:
          type: number
          description: The delivery costs which were considered for the recommended price
        timestamp:
          type: string
          format: date-time
          description: The timestamp when the price recommendation has been calculated
        oldDeliveryCosts:
          type: number
          description: The delivery costs corresponding to `oldPrice`
        tags:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag
          description: Additional information on this product
        price:
          type: number
          description: The recommended price of the relevant domain
        oldPosition:
          type: integer
          description: The old position on the relevant domain
        gtin:
          type: number
          description: GTIN of the product
        relativePriceChangePercentage:
          type: number
          description: >-
            Absolute percentage how the recommended price changed compared to
            the `oldPrice` e.g. 200 stands for 200% which means the recommended
            price has doubled
        newPosition:
          type: integer
          description: The new position on the relevant domain
        decisiveStrategyBranchName:
          type: string
          description: >-
            The strategy branch name that calculated the price. This is only
            filled if the Strategy branch that calculated the price was given a
            name in the strategy tree. It will have the name that was active at
            the time the price was calculated (see timestamp)
        customerProductId:
          type: string
          description: The customer's id of the product
        originalMaxPriceBoundary:
          type: number
          description: Max price boundary during the time when the price was calculated
        relevantDomain:
          type: string
          description: >-
            The decisive domain of the price recommendation. It's been
            determined by the cheapest price recommendation.
        originalMinPriceBoundary:
          type: number
          description: Min price boundary during the time when the price was calculated
        currency:
          type: string
          description: The currency of the price recommendation.
        productId:
          type: string
          description: The internal product id of the pricemonitor
        originalTags:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag
          description: >-
            List of tags which were set during the time when the price has been
            calculated. ATTENTION: These are historic tags which are maybe
            outdated or incomplete.
        decisiveStrategyTreeLeafNodeId:
          type: integer
          description: >-
            The leaf node of the strategy branch that calculated the price. This
            id references the node in the strategy branch that was active at the
            time the price was calculated (see timestamp)
      additionalProperties: false
      type: object
      required:
        - tags
        - productId
        - price
        - timestamp
        - originalMinPriceBoundary
        - originalTags
        - originalMaxPriceBoundary
        - decisiveStrategyTreeLeafNodeId
        - currency
    com.patagona.pricemonitor.share.api.PaginationResponse:
      description: >-
        This model describes the information passed to the user for a paginated
        request.
      properties:
        nextUrl:
          type: string
          description: >-
            the url that can be called to retrieve the next page, None if th
            last page has been requested
        totalSize:
          type: integer
          description: the total number of elements that is paginated over
        start:
          type: integer
          description: the start index of the currently requested page
        limit:
          type: integer
          description: the number of elements in a full page
      additionalProperties: false
      type: object
      required:
        - totalSize
        - start
        - limit
    GetPriceRecommendationApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiPriceRecommendation
          type: array
        meta:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PaginationResponse
    org.json4s.JValue:
      properties: {}
      additionalProperties: false
      type: object
      required: []
    com.patagona.pricemonitor.share.api.CreateTaskBodyV2:
      description: Definition of a task to be created.
      properties:
        taskType:
          type: string
          description: >-
            The type of the task to be created. Can be any of [alert,
            backend.tasks.pricemonitor.offers.monitoring,
            backend.tasks.pricemonitor.offers.preprocessing,
            backend.tasks.pricemonitor.callback]
        data:
          $ref: '#/components/schemas/org.json4s.JValue'
          description: The task definition. Schema dependent on the actual task type.
        triggerFollowUpTask:
          type: boolean
          description: >-
            optional flag to specify whether or not to trigger the next task.
            Currently only integrated to trigger callbacks after preprocessing
        includeForBilling:
          type: boolean
          description: >-
            optional flag to specify whether or not to include the task in
            billing. This is especially useful when manual monitoring is
            triggered by our admins
      additionalProperties: false
      type: object
      required:
        - taskType
    com.patagona.pricemonitor.share.api.ContractFeatures:
      properties:
        disabled:
          type: array
          items:
            type: string
        enabled:
          type: array
          items:
            type: string
      additionalProperties: false
      type: object
      required:
        - disabled
        - enabled
    com.patagona.pricemonitor.share.api.UserContract:
      description: >-
        This case class is used for serializing contract-information for the
        account-endpoints
      properties:
        name:
          type: string
          description: The contract's name
        features:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ContractFeatures
          description: The contract features
        id:
          type: number
          description: The contract's id
        type:
          type: string
        sid:
          type: string
          description: The contract's string-id
        active:
          type: boolean
          description: The contract status
      additionalProperties: false
      type: object
      required:
        - active
        - sid
        - features
        - id
        - name
        - type
    com.patagona.pricemonitor.share.api.UserCompany:
      description: >-
        This case class is used for serializing company-information for the
        account-endpoints
      properties:
        id:
          type: number
          description: The company's id
        name:
          type: string
          description: The company's name
        contracts:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.UserContract
          description: The company's contracts
      additionalProperties: false
      type: object
      required:
        - id
        - name
        - contracts
    com.patagona.pricemonitor.share.api.UserInfo:
      description: >-
        This case class is used for serializing user-information for the
        account-endpoints
      properties:
        name:
          type: string
          description: The user's name
        companies:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.UserCompany
          description: The companies of the user
        lastActiveDate:
          type: string
          description: The last time the user was active
        email:
          type: string
          description: The user's mail-address
        id:
          type: number
          description: The id of the user
        roles:
          type: array
          items:
            type: string
          description: The user's role
      additionalProperties: false
      type: object
      required:
        - roles
        - companies
        - email
        - id
        - lastActiveDate
        - name
    com.patagona.pricemonitor.share.api.Tag:
      properties:
        key:
          type: string
        value:
          type: string
      additionalProperties: false
      type: object
      required:
        - key
        - value
    com.patagona.pricemonitor.share.api.ApiProduct:
      description: Represents a product in Omnia 2.0.
      properties:
        name:
          type: string
          description: The name of the product.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Tag'
          description: >-
            Additional imported information as key-value pairs about this
            product.
        minPriceBoundary:
          type: number
          description: >-
            The minimum price that Omnia 2.0 can recommend for the product.
            Omnia 2.0 won't recommend any price below this boundary.
        gtin:
          type: number
          description: GTIN / EAN of the product. This field is optional.
        customerProductId:
          type: string
          description: >-
            Your ID of the product. This field allows to link products in Omnia
            2.0 to products in your system.
        id:
          type: string
          description: The internal product ID in Omnia 2.0.
        maxPriceBoundary:
          type: number
          description: >-
            The maximum price that Omnia 2.0 can recommend for the product.
            Omnia 2.0 won't recommend any price above this boundary.
        referencePrice:
          type: number
          description: >-
            The current selling price of the product. This price will be used as
            benchmark or variable for certain components in Omnia 2.0.
      additionalProperties: false
      type: object
      required:
        - tags
        - id
        - name
        - referencePrice
    com.patagona.pricemonitor.share.api.OfferAttribute:
      description: Created by Andreas Frankenberger on 28.01.16.
      properties:
        name:
          type: string
        value:
          type: string
      additionalProperties: false
      type: object
      required:
        - name
        - value
    com.patagona.pricemonitor.share.api.ApiOffer:
      description: Represents an offer for a product on a certain domain.
      properties:
        positionByTotalPrice:
          type: integer
          description: The position of the offer on the domain when sorted by total price.
        deliveryCosts:
          type: number
          description: >-
            The additional charges for delivering the product to the customer's
            location (shipping costs).
        maxDeliveryTime:
          type: integer
          description: >-
            Optional maximum time, in hours, it takes for the product to be
            delivered to the customer.
        url:
          type: string
          description: >-
            The direct link to the product page on the domain where this offer
            can be found.
        vendorDomainId:
          type: string
          description: >-
            An identifier of the vendor on the domain. Identifiers are available
            for certain domains only.
        domain:
          type: string
          description: The website from which the offer originates.
        price:
          type: number
          description: The unit price of the offer.
        minDeliveryTime:
          type: integer
          description: >-
            Optional minimum time, in hours, it takes for the product to be
            delivered to the customer.
        gtin:
          type: number
          description: An optional field for the GTIN / EAN of the product.
        positionByUnitPrice:
          type: integer
          description: The position of the offer on the domain when sorted by unit price.
        availability:
          type: boolean
          description: >-
            An optional flag indicating whether the product is currently in
            stock and available for purchase.
        attributes:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.OfferAttribute
          description: A list of additional offer details.
        vendorName:
          type: string
          description: >-
            The display name of the shop which sells the product. In some cases
            (e.g. marketplaces) with some additional information about the
            seller: e.g. Amazon NL - Sold By Amazon NL
        retrievalDate:
          type: string
          format: date-time
          description: >-
            Optional timestamp based on ISO 8601 format, indicating when this
            offer was fetched from the domain.
        creationDate:
          type: string
          format: date-time
          description: >-
            An optional timestamp in ISO 8601 format indicating when this offer
            was stored in Omnia 2.0. This is not the timestamp when the offer
            was fetched from the domain; for that, use retrievalDate.
        productName:
          type: string
          description: The name of the product as listed on the domain.
        currency:
          type: string
          description: >-
            The currency in which the price and delivery costs are expressed.
            Provided values are ISO 4217 currency codes like "EUR".
        productId:
          type: string
          description: The internal product ID in Omnia 2.0.
        ignored:
          type: boolean
          description: >-
            A flag indicating whether the offer has been blacklisted or not by
            the Omnia 2.0 filters.
      additionalProperties: false
      type: object
      required:
        - productName
        - ignored
        - url
        - attributes
        - positionByUnitPrice
        - vendorName
        - productId
        - price
        - deliveryCosts
        - creationDate
        - currency
        - positionByTotalPrice
        - domain
    com.patagona.pricemonitor.share.api.ProductAndOffers:
      description: Represents a product and its corresponding offers.
      properties:
        product:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiProduct'
          description: The product information.
        offers:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer'
          description: The list of offers for the corresponding product.
      additionalProperties: false
      type: object
      required:
        - product
        - offers
    GetOffersApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ProductAndOffers
          type: array
    com.patagona.pricemonitor.share.api.GetShopsByDomainResponseV3:
      description: Describes a domain and its corresponding shops
      properties:
        domain:
          type: string
          description: domain name
        shops:
          type: array
          items:
            type: string
          uniqueItems: true
          description: shop names which have offers in the domain for a given time range
      additionalProperties: false
      type: object
      required:
        - domain
        - shops
    GetShopsByDomainResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.GetShopsByDomainResponseV3
          type: array
    com.patagona.pricemonitor.share.api.QueryOffersOfShopRequestV3:
      properties:
        shop:
          type: string
        endDate:
          type: string
          format: date-time
        start:
          type: integer
        limit:
          type: integer
        startDate:
          type: string
          format: date-time
      additionalProperties: false
      type: object
      required:
        - start
        - shop
        - endDate
        - limit
        - startDate
    QueryOffersOfShopV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer'
          type: array
    com.patagona.pricemonitor.share.api.Pagination:
      description: >-
        This model describes a step in a paginated endpoint. It consists of the
        start index, set to 0 for the first page. The next page starts at
        (previous start) + limit. Reasonable values for the limit parameter
        depend on the specific endpoint.
      properties:
        start:
          type: integer
          description: ''
        limit:
          type: integer
          description: ''
      additionalProperties: false
      type: object
      required:
        - start
        - limit
    com.patagona.pricemonitor.share.api.ZonedTimeRange:
      description: >-
        Represents a time range. It's required that the end timestamp is after
        or equals the start timestamp.
      properties:
        start:
          type: string
          format: date-time
          description: >-
            The starting point of the time range, represented as a timestamp in
            ISO 8601 format (e.g., "2023-10-19T13:45:30Z") in UTC.
        end:
          type: string
          format: date-time
          description: >-
            The ending point of the time range, represented as a timestamp in
            ISO 8601 format (e.g., "2023-10-19T14:45:30Z") in UTC.
      additionalProperties: false
      type: object
      required:
        - start
        - end
    com.patagona.pricemonitor.share.api.ProductIdQuery:
      description: >-
        This product query evaluates to 'true' if the value of the 'field' is
        one on the specified 'values'.
      properties:
        field:
          type: string
          description: >-
            Specifies the attribute to filter by. It accepts two values: <br> -
            "customerProductId": Your unique identifier for the product. <br> -
            "productId": Patagona's internal product id (must be a numerical
            integer).
        values:
          type: array
          items:
            type: string
          description: >-
            An array of strings containing the ids of the products to be
            queried.
      additionalProperties: false
      type: object
      required:
        - field
        - values
    com.patagona.pricemonitor.share.api.OneOfProductsQuery:
      description: >-
        An optional parameter to further filter the data based on product
        criteria.
      properties:
        oneOf:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ProductIdQuery
          description: The 'oneOf' represents a product query.
      additionalProperties: false
      type: object
      required:
        - oneOf
    com.patagona.pricemonitor.share.api.PostOfferStatisticsRequestV31:
      description: >-
        Represents a paginated query with an optional product filter and a
        specified time range. <br> If no filter is provided, the response will
        contain all available data, paginated according to the `pagination`
        parameter. <br> <br> Notes: <br> - At maximum it's allowed to query
        10,000 records (pagination limit). <br> - The maximum time span between
        the start and end should not exceed 48 hours (timerange limit).
      properties:
        pagination:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Pagination'
          description: >-
            Specifies the pagination details such as the start index and the
            number of records to fetch (limit). At maximum it's allowed to query
            10,000 records.
        range:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ZonedTimeRange
          description: >-
            Defines the time range for which offer statistics are queried. Note:
            The maximum time span between the start and end should not exceed 48
            hours.
        filter:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.OneOfProductsQuery
          description: >-
            An optional parameter to further filter the data based on product
            criteria.
      additionalProperties: false
      type: object
      required:
        - pagination
        - range
    com.patagona.pricemonitor.share.api.PriceStatisticsV31:
      description: >-
        Represents basic price statistics: (min, avg, max). All prices are
        rounded half-up to two decimal places.
      properties:
        min:
          type: number
          description: The minimum offer price.
        avg:
          type: number
          description: The average offer price.
        max:
          type: number
          description: The maximum offer price.
        cheapestShops:
          type: array
          items:
            type: string
          description: The shop names that offer for minimum price.
      additionalProperties: false
      type: object
      required:
        - min
        - avg
        - max
        - cheapestShops
    com.patagona.pricemonitor.share.api.DomainOfferStatisticsV31:
      description: >-
        Represents statistics about offers from competitors for a specific
        domain. The competitor offers are determined under-the-hood by excluding
        offers of the registered own shops.
      properties:
        domain:
          type: string
          description: >-
            This field specifies the domain where the competitor offers are
            sourced from. It's a string representing the domain name, such as
            "google.de".
        competitorOfferCount:
          type: integer
          description: The number of competitor offers available in the specified domain.
      additionalProperties: false
      type: object
      required:
        - domain
        - competitorOfferCount
    com.patagona.pricemonitor.share.api.ProductOfferStatisticsV31:
      description: >-
        Contains details on both unit price and total price statistics of
        product offers.
      properties:
        unitPriceStats:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PriceStatisticsV31
          description: Offer statistics considering the unit price.
        totalPriceStats:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PriceStatisticsV31
          description: Offer statistics considering the unit price plus delivery costs.
        domainStats:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.DomainOfferStatisticsV31
          description: >-
            A list of offer statistics per domain. Domains without competitor
            offers are not included in the list.
      additionalProperties: false
      type: object
      required:
        - unitPriceStats
        - totalPriceStats
        - domainStats
    com.patagona.pricemonitor.share.api.PostOfferStatisticsResponseV31:
      description: Represents aggregated offer statistics for a single product.
      properties:
        productId:
          type: string
          description: Pricemonitor's internal unique product identifier.
        offerCount:
          type: integer
          description: The number of offers found on all domains for the product.
        stats:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ProductOfferStatisticsV31
          description: The aggregated offer price statistics for the product.
      additionalProperties: false
      type: object
      required:
        - productId
        - offerCount
        - stats
    QueryOfferStatisticsV31ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.PostOfferStatisticsResponseV31
          type: array
    com.patagona.pricemonitor.share.api.OfferStatsPerDomain:
      description: Offer statistics per domain.
      properties:
        domain:
          type: string
          description: Domain name
        offerCount:
          type: integer
          description: Number of offers
        minPrice:
          type: number
          description: Minimum price, rounded to two decimal places, in a set of offers.
        averagePrice:
          type: number
          description: Average price, rounded to two decimal places, in a set of offers.
      additionalProperties: false
      type: object
      required:
        - domain
        - offerCount
        - minPrice
        - averagePrice
    com.patagona.pricemonitor.share.api.GetOfferStatisticsV3:
      description: Offer statistics of a product.
      properties:
        productId:
          type: string
          description: Internal product identifier.
        statsByDomain:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.OfferStatsPerDomain
          description: List of offer statistics per domain
      additionalProperties: false
      type: object
      required:
        - productId
        - statsByDomain
    GetOfferStatisticsV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.GetOfferStatisticsV3
          type: array
    PutProductsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: '#/components/schemas/Task'
    QueryOffersApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer'
          type: array
    com.patagona.pricemonitor.share.api.ShopV3:
      description: A shop, in terms of online shop, sells his products on a certain domain.
      properties:
        domain:
          type: string
          description: Domain name
        name:
          type: string
          description: Shop name on given domain.
      additionalProperties: false
      type: object
      required:
        - domain
        - name
    com.patagona.pricemonitor.share.api.PriceDumpingStatsRequest:
      description: A request for price dumping statistics for the given shops.
      properties:
        startDate:
          type: string
          format: date-time
          description: Start of the timerange in which we search for price dumping events
        endDate:
          type: string
          format: date-time
          description: End of the timerange in which we search for price dumping events
        includeDeliveryCosts:
          type: boolean
          description: >-
            Indicates if we consider price + delivery cost to detect price
            changes or only price
        shops:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ShopV3'
          uniqueItems: true
          description: Specifies for which shops we detect price dumping events
      additionalProperties: false
      type: object
      required:
        - startDate
        - endDate
        - includeDeliveryCosts
        - shops
    com.patagona.pricemonitor.share.api.ProductPriceDumpingStats:
      description: >-
        This class contains the number of price dumping events. The counts
        prefixed with "uniqueProduct" only count the events once per product,
        the non prefixed counts count every event. If we are unable to detect
        which vendor reduced the price first, because we only sampled the price
        when multiple vendors are at the same price, those events are counted in
        the fields infixed with "potetially".
      properties:
        productsAtMinPrice:
          type: integer
          description: >-
            This field denotes the number of products at the min price from the
            queried vendors, at the respective newest timestamp per domain and
            product.
        uniqueProductInitiatedPriceDumpings:
          type: integer
          description: ''
        uniqueProductPotentiallyInitiatedPriceDumpings:
          type: integer
          description: ''
        initiatedPriceDumpings:
          type: integer
          description: ''
        potentiallyInitiatedPriceDumpings:
          type: integer
          description: ''
      additionalProperties: false
      type: object
      required:
        - initiatedPriceDumpings
        - uniqueProductInitiatedPriceDumpings
        - uniqueProductPotentiallyInitiatedPriceDumpings
        - productsAtMinPrice
        - potentiallyInitiatedPriceDumpings
    com.patagona.pricemonitor.share.api.DomainPriceDumpingStats:
      description: >-
        This class contains the price dumping statistic for a single domain. A
        price dumping event exists if a vendor reduces the price below the
        minimum price at the previous timestamp while also selling the product
        at the new minimum price.
      properties:
        domain:
          type: string
          description: ''
        productPriceDumpingStats:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ProductPriceDumpingStats
          description: ''
      additionalProperties: false
      type: object
      required:
        - domain
        - productPriceDumpingStats
    com.patagona.pricemonitor.share.api.PriceDumpingStatsResponse:
      properties:
        statsPerDomain:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.DomainPriceDumpingStats
          description: ''
        statsOverAllomains:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ProductPriceDumpingStats
          description: ''
      additionalProperties: false
      type: object
      required:
        - statsPerDomain
        - statsOverAllomains
    QueryPriceDumpingStatsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PriceDumpingStatsResponse
    com.patagona.pricemonitor.share.api.CustomerOrderV3:
      description: An order placed in a shop.
      properties:
        shippingCosts:
          type: number
          description: Shipping costs of the order. This amount is included in totalPrice.
        orderId:
          type: string
          description: Unique ID of an order. This ID must be unique within the contract.
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderItemV2
          description: List of purchased items.
        totalPrice:
          type: number
          description: >-
            Total price of the order, including all items, applicable taxes, and
            shipping costs.
        origin:
          type: string
          description: Origin of an order, e.g., the online shop where the order is placed.
        creationDate:
          type: string
          format: date-time
          description: Timestamp in ISO 8601 format indicating when the order is placed.
        currency:
          type: string
          description: >-
            Currency used in the order, represented by ISO 4217 Currency Codes
            (e.g., EUR).
        referrer:
          type: string
          description: >-
            Optional referrer of an order. Third party (e.g. marketplace) which
            referred the customer to the online shop.
      additionalProperties: false
      type: object
      required:
        - orderId
        - shippingCosts
        - origin
        - creationDate
        - items
        - totalPrice
        - currency
    com.patagona.pricemonitor.share.api.PutCustomerOrdersRequestV3:
      description: Request body containing bulked orders
      properties:
        orders:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.CustomerOrderV3
          description: List of orders
        version:
          type: string
          description: Version of orders. Currently only "3" is allowed
      additionalProperties: false
      type: object
      required:
        - orders
        - version
    com.patagona.pricemonitor.share.api.PutItemsResponseV3:
      description: Represents list of unique identifiers
      properties:
        ids:
          type: array
          items:
            type: string
          description: list of ids of the items that have been saved or updated
      additionalProperties: false
      type: object
      required:
        - ids
    PutItemsV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PutItemsResponseV3
    DeletedItemsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: '#/components/schemas/DeletedItemsResponse'
    com.patagona.pricemonitor.share.api.PostOrderStatisticsRequestV3:
      description: >-
        Represents a paginated query with an optional product filter and a
        specified time range. <br> If no filter is provided, the response will
        contain all available data, paginated according to the `pagination`
        parameter. <br> <br> Notes: <br> - At maximum it's allowed to query
        10,000 records (pagination limit). <br> - The maximum time span between
        the start and end should not exceed 30 days (timerange limit).
      properties:
        pagination:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Pagination'
          description: >-
            Specifies the pagination details such as the start index and the
            number of records to fetch (limit). At maximum it's allowed to query
            10,000 records.
        range:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ZonedTimeRange
          description: >-
            Defines the time range for which order statistics are queried. Note:
            The maximum time span between the start and end should not exceed 30
            days.
        filter:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.OneOfProductsQuery
          description: >-
            An optional parameter to further filter the data based on product
            criteria.
      additionalProperties: false
      type: object
      required:
        - pagination
        - range
    com.patagona.pricemonitor.share.api.PostOrderStatisticsResponseV3:
      description: Represents aggregated order statistics for a single product.
      properties:
        productId:
          type: string
          description: Pricemonitor's internal unique product identifier.
        itemId:
          type: string
          description: >-
            The unique identifier of the sold item, expected to align with the
            customerProductId.
        numberOfSoldItems:
          type: integer
          description: The total count of how often the product has been sold.
      additionalProperties: false
      type: object
      required:
        - productId
        - itemId
        - numberOfSoldItems
    QueryOrderStatisticsV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.PostOrderStatisticsResponseV3
          type: array
    com.patagona.pricemonitor.share.api.DeleteOrderQueryV3:
      description: Query to specify the order to be deleted
      properties:
        orderId:
          type: string
          description: Unique identifier of the order
        creationDate:
          type: string
          format: date-time
          description: >-
            Creation date of the corresponding order. It is a Timestamp in UTC
            time zone
      additionalProperties: false
      type: object
      required:
        - orderId
        - creationDate
    com.patagona.pricemonitor.share.api.DeleteOrdersByQueryRequestV3:
      description: >-
        Request to delete a list of customer orders by providing an order query
        Notes: <br> - At maximum it's allowed to provide 10,000 order queries
        per request. <br>
      properties:
        orders:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.DeleteOrderQueryV3
          description: >-
            List of order queries, each query should include an order id and its
            corresponding creation date
      additionalProperties: false
      type: object
      required:
        - orders
    com.patagona.pricemonitor.share.api.ProductPriceSimulationRequest:
      description: >-
        Represents a request to simulate the price calculation for a single
        product.
      properties:
        productId:
          type: string
          description: The internal product ID in Omnia 2.0.
        offers:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer'
          description: >-
            Optional list of offers to simulate the price calculation with. If
            not provided, the offers of the specified time range are considered
            (default: most recent offers per domain per last 24 hours).
      additionalProperties: false
      type: object
      required:
        - productId
    com.patagona.pricemonitor.share.api.OffsetTimeRange:
      description: >-
        Represents a time range. It's required that the end timestamp is after
        or equals the start timestamp.
      properties:
        start:
          type: string
          format: date-time
          description: >-
            The starting point of the time range, represented as a timestamp in
            ISO 8601 format (e.g., "2024-11-19T13:45:30Z") in UTC.
        end:
          type: string
          format: date-time
          description: >-
            The ending point of the time range, represented as a timestamp in
            ISO 8601 format (e.g., "2024-11-19T14:45:30Z") in UTC.
      additionalProperties: false
      type: object
      required:
        - start
        - end
    com.patagona.pricemonitor.share.api.OwnShopMapping:
      description: Represents a mapping between a domain and an own shop name.
      properties:
        domain:
          type: string
          description: Domain name
        ownShopName:
          type: string
          description: Own shop name on given domain.
      additionalProperties: false
      type: object
      required:
        - domain
        - ownShopName
    com.patagona.pricemonitor.share.api.PriceSimulationBulkRequestV3:
      description: >-
        Represents a bulk request to simulate the price calculation for multiple
        products. The optional parameters can be used for testing/simulating
        scenarios. If they are not provided, then the current pricing settings
        will be used.
      properties:
        strategyBuilder:
          type: object
        simulationRequests:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ProductPriceSimulationRequest
          description: >-
            List of product price simulation requests. The list may have a
            maximum 10 requests.
        simulationTimestamp:
          type: string
          format: date-time
          description: >-
            If provided, then strategies act as if `simulationTimestamp` is the
            current date and time. This can be useful for testing time based
            strategies. If not provided, it will try to fall back to
            `calculationTimestamp`. If not provided and `calculationTimestamp`
            is also not provided, the current timestamp will be used.
        calculationTimestamp:
          type: string
          format: date-time
          description: >-
            Timestamp of the original price calculation. Can be used to
            reproduce a price calculation. This timestamp is used to retrieve
            product tags, which we store for each successful price calculation.
        dataTimeRange:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.OffsetTimeRange
          description: >-
            If provided, the simulation will be based on data of the specified
            time range. If not provided, the simulation will be based on the
            most recent data of the last 24h.
        ownShops:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.OwnShopMapping
          description: >-
            Useful for detecting own offers of our customers. This ensures the
            separation between own and competitor offers. If not provided, the
            own offers will be detected based on the currently configured own
            shop mappings.
      additionalProperties: false
      type: object
      required:
        - simulationRequests
    com.patagona.pricemonitor.share.api.FormulaVariable:
      description: Represents a variable in a formula.
      properties:
        name:
          type: string
          description: Name of the variable
        value:
          type: number
          description: Numeric value of the variable.
      additionalProperties: false
      type: object
      required:
        - name
        - value
    com.patagona.pricemonitor.share.api.PriceBoundaryDetails:
      description: >-
        Represents the details of a single price boundary. Exactly one of the
        details will be defined.
      properties:
        formulaPriceBoundary:
          description: The price boundary which has been calculated by a formula.
          properties:
            price:
              type: number
              description: The price boundary.
            formula:
              type: string
              description: The formula which has been used to calculate the price boundary.
            variables:
              type: array
              items:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.FormulaVariable
              description: The relevant variables used in the formula.
          additionalProperties: false
          type: object
          required:
            - price
            - formula
            - variables
        fixedPriceBoundary:
          description: The price boundary which has been set during product import.
          properties:
            price:
              type: number
              description: The price boundary.
          additionalProperties: false
          type: object
          required:
            - price
      additionalProperties: false
      type: object
      required: []
    com.patagona.pricemonitor.share.api.PriceGapUnit:
      type: string
      enum:
        - AbsolutePriceGap
        - RelativePriceGap
    com.patagona.pricemonitor.share.api.PriceCalculationResult:
      description: >-
        The detailed result of the price calculation. Exactly one of the results
        will be defined. This class exists only in this shape to be able to
        generate the correct JSON schema. Ideally, we get rid of it in future
        and solely rely on a sealed trait for the price recommendation results.
        Or we differentiate between internal and external representation.
      properties:
        competitivePricingRecommendationResult:
          description: Competitive pricing has calculated a price recommendation.
          properties:
            adjustToNextPricier:
              type: boolean
              description: >-
                When a target position can't be reached due to the price
                boundary, the target position gets realigned to the next
                reachable one (within the price boundary) by this setting.
            targetPosition:
              type: integer
              description: The target position which has been considered.
            includeDeliveryCosts:
              type: boolean
              description: >-
                Determines if the delivery costs should be included in the price
                calculation.
            ownOffers:
              type: array
              items:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer
              description: >-
                The own offers which have been considered for the price
                calculation.
            competitorOffers:
              type: array
              items:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer
              description: >-
                The offers of the competitors which have been considered for the
                price calculation.
            priceGap:
              type: number
              description: >-
                The price gap which has been considered.<br> - A positive value
                means to underbid the target position.<br> - A zero value means
                to match the target position.<br> - A negative value means to
                overbid the target position.
            minPriceBoundary:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceBoundaryDetails
              description: The minimum price boundary which has been considered.
            ownDeliveryCosts:
              type: number
              description: >-
                The own delivery costs which have been considered. Only relevant
                if 'includeDeliveryCosts' is set to true.
            unitPriceRecommendation:
              type: number
              description: The calculated price recommendation.
            maxPriceBoundary:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceBoundaryDetails
              description: The maximum price boundary which has been considered.
            priceGapUnit:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceGapUnit
              description: The unit of the price gap. Either absolute or relative.
            nodeId:
              type: integer
              description: The ID of the node which calculated the price.
          additionalProperties: false
          type: object
          required:
            - priceGap
            - nodeId
            - unitPriceRecommendation
            - adjustToNextPricier
            - competitorOffers
            - targetPosition
            - ownOffers
            - maxPriceBoundary
            - priceGapUnit
            - includeDeliveryCosts
            - minPriceBoundary
        noPriceCalculated:
          description: >-
            The strategy tree has been normally evaluated but no node calculated
            a price.
          properties:
            reason:
              type: string
              description: The reason why no price recommendation was calculated.
          additionalProperties: false
          type: object
          required:
            - reason
        formulaRecommendationResult:
          description: A formula has calculated a price recommendation.
          properties:
            ownOffers:
              type: array
              items:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer
              description: >-
                The own offers which have been considered for the price
                calculation.
            competitorOffers:
              type: array
              items:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer
              description: >-
                The offers of the competitors which have been considered for the
                price calculation.
            minPriceBoundary:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceBoundaryDetails
              description: The minimum price boundary which has been considered.
            variables:
              type: array
              items:
                $ref: >-
                  #/components/schemas/com.patagona.pricemonitor.share.api.FormulaVariable
              description: The relevant variables used in the formula.
            unitPriceRecommendation:
              type: number
              description: The calculated price recommendation.
            formula:
              type: string
              description: The unevaluated formula.
            maxPriceBoundary:
              $ref: >-
                #/components/schemas/com.patagona.pricemonitor.share.api.PriceBoundaryDetails
              description: The maximum price boundary which has been considered.
            unrestrictedUnitPrice:
              type: number
              description: >-
                The original unit price recommendation before applying any price
                boundary restrictions.
            nodeId:
              type: integer
              description: The ID of the node which calculated the price.
          additionalProperties: false
          type: object
          required:
            - nodeId
            - unitPriceRecommendation
            - competitorOffers
            - ownOffers
            - maxPriceBoundary
            - variables
            - minPriceBoundary
            - unrestrictedUnitPrice
            - formula
        roundingPriceRecommendationResult:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.RoundingPriceRecommendationResult
          description: A price recommendation has been calculated by the rounding strategy.
        priceCalculationFailure:
          description: An exception occurred during the price calculation.
          properties:
            reason:
              type: string
              description: The reason why the price calculation failed.
            nodeId:
              type: integer
              description: The ID of the node where the price calculation failed.
          additionalProperties: false
          type: object
          required:
            - reason
            - nodeId
      additionalProperties: false
      type: object
      required: []
    com.patagona.pricemonitor.share.api.RoundingPriceRecommendationResult:
      properties:
        ownOffers:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer'
        competitorOffers:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer'
        priceSteps:
          type: array
          items:
            type: string
          description: >-
            List of values to round against. They are in unit's of cent (100th
            of the base currency). They are defined as strings and may contain
            leading zeroes to indicate allowed increments. For example:<br>
                               - ["5"] allows prices of 0.05€, 0.15€, 0.25€, 0.35€, ... (increments of 10 cents)<br>
                               - ["05"] allows prices of 0.05€, 1.05€, 2.05€, 3.05€ ... (increments of 100 cents)<br>
                               - ["00", "50"] allows prices of 0.50€, 1.00€, 1.50€, 2.00€
        stepSelection:
          type: string
          description: >-
            Defines how to select the price step to round to. Allowed values
            are:

            `nextLower`, `nextHigher` and `closest`
        minPriceBoundary:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PriceBoundaryDetails
        originalPriceRecommendation:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PriceCalculationResult
        unitPriceRecommendation:
          type: number
          description: The calculated price recommendation.
        maxPriceBoundary:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PriceBoundaryDetails
        adjustToNextReachablePriceStep:
          type: boolean
          description: >-
            Implements the behavior that happens when the original price
            calculation is in the min-/max price
             boundary and the rounding would cause it to violate the price boundary. If set to true, the price
             step will be adjusted to the next reachable price step. Defaults to false, in which case the
             original price recommendation will be used as the fallback.
        nodeId:
          type: number
          description: The ID of the node which calculated the price.
      additionalProperties: false
      type: object
      required:
        - stepSelection
        - nodeId
        - originalPriceRecommendation
        - unitPriceRecommendation
        - priceSteps
        - maxPriceBoundary
        - minPriceBoundary
    com.patagona.pricemonitor.share.api.ProductPriceSimulationOutcome:
      description: The result of a single price simulation for a product.
      properties:
        originalOffers:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ApiOffer'
          description: >-
            All offers which were initially considered for the price
            calculation.
        result:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PriceCalculationResult
          description: >-
            The result of the price calculation. Exactly one of these results
            will be defined:<br> 1. A price has been calculated<br> 2. No price
            has been calculated<br> 3. The price calculation failed (e.g. by
            formula or competitive pricing).
        productId:
          type: string
          description: The internal product ID in Omnia 2.0.
        decisivePath:
          type: array
          items:
            type: integer
          description: >-
            The decisive path in the strategy tree:<br> From root node down to
            the node which calculated the price (shortest path). Can be empty
            when no price has been calculated or the price calculation fails.
        originalTags:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag
          description: All product tags that are considered for the price calculation.
        fullPath:
          type: array
          items:
            type: integer
          description: All traversed (processed) nodes in the strategy tree.
      additionalProperties: false
      type: object
      required:
        - decisivePath
        - productId
        - fullPath
        - originalTags
        - result
        - originalOffers
    com.patagona.pricemonitor.share.api.PriceSimulationBulkResponseV3:
      description: >-
        Represents a bulk response with simulated price recommendations for
        multiple products.
      properties:
        strategyBuilder:
          type: object
        calculationTimestamp:
          type: string
          format: date-time
          description: >-
            The timestamp for which the price calculation has been simulated. If
            specified in the request this will be `simulationTimestamp`.
        simulationResults:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ProductPriceSimulationOutcome
          description: >-
            The simulation results. All results are in order with respect to the
            input list of product simulation requests.
        dataTimeRange:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.OffsetTimeRange
          description: The considered data time range for simulating the price calculation.
        ownShops:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.OwnShopMapping
          description: The considered own shops.
      additionalProperties: false
      type: object
      required:
        - strategyBuilder
        - ownShops
        - dataTimeRange
        - calculationTimestamp
        - simulationResults
    SimulatePriceCalculationBulkV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PriceSimulationBulkResponseV3
    com.patagona.pricemonitor.share.api.PostPriceRecommendationApprovalRequestV3:
      description: >-
        Represents a request to make a decision on a price recommendation
        approval for a specific product. This request is used to submit an
        approval decision (approve, reject, or overwrite) for a given product
        and price recommendation approval instance, identified by its product id
        and creation timestamp.
      properties:
        decision:
          type: string
          description: >-
            The decision made on the approval.<br> Allowed values: "approved",
            "rejected", or "overwritten".
        approvalCreatedAt:
          type: string
          format: date-time
          description: The timestamp when the approval was created, in ISO 8601 format.
        comment:
          type: string
          description: An optional comment regarding the decision.
        productId:
          type: string
          description: The internal unique product identifier of Omnia 2.0.
        overwritePrice:
          type: number
          description: >-
            The manual price set by the user when the decision is "overwritten",
            if applicable.<br> Must be provided and be ≥ 0.01 when decision is
            "overwritten".<br> Must **not** be set for other decision values.
      additionalProperties: false
      type: object
      required:
        - decision
        - productId
        - approvalCreatedAt
    com.patagona.pricemonitor.share.api.PriceRecommendationsApprovalQueryRequestV3:
      description: >-
        Represents a paginated query for price recommendation approvals. <br> If
        no filter is provided, the response will contain all available data,
        paginated according to the `pagination` parameter. <br> <br> Notes: <br>
        - At maximum it's allowed to query 1,000 records (pagination limit). -
        If `status` is not provided, all statuses are included in the
        results.<br> - If `latestOnly` is true, only the most recent approval
        per product is returned. If false, all matching records are returned.
      properties:
        productFilter:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.OneOfProductsQuery
          description: >-
            An optional parameter to further filter the data based on product
            criteria. <br> If not provided, all approvals for all products are
            included in the results.
        latestOnly:
          type: boolean
          description: >-
            Boolean indicating whether to return only the most recent approval
            per product. <br> If true, only the most recent record per product
            within the time range is returned. <br> If false, all records within
            the time range are returned.
        range:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.OffsetTimeRange
          description: >-
            Defines the time range for which price recommendation approvals are
            queried.
        status:
          type: array
          items:
            type: string
          uniqueItems: true
          description: >-
            Optional set of statuses to filter the approvals by their current
            status. <br> If omitted, all statuses are included.
        pagination:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Pagination'
          description: >-
            Specifies the pagination details such as the start index and the
            number of records to fetch (limit). At maximum it's allowed to query
            1,000 records.
      additionalProperties: false
      type: object
      required:
        - pagination
        - range
        - latestOnly
    com.patagona.pricemonitor.share.api.PriceApprovalDecisionV3:
      description: >-
        Represents a single decision made by a user regarding a price
        recommendation approval.
      properties:
        userEmail:
          type: string
          description: The email address of the user who made the decision.
        decision:
          type: string
          description: >-
            The decision made by the user. <br> Allowed values: "approved",
            "rejected", or "overwritten".
        comment:
          type: string
          description: An optional comment provided by the user.
        createdAt:
          type: string
          format: date-time
          description: The timestamp when the decision was made.
        userId:
          type: integer
          description: The unique identifier of the user who made the decision.
        superseded:
          type: boolean
          description: Indicates if this decision was superseded by a later decision.
        overwritePrice:
          type: number
          description: >-
            The manual price set by the user when the recommendation was
            overwritten, if applicable.
      additionalProperties: false
      type: object
      required:
        - superseded
        - createdAt
        - decision
        - userId
        - userEmail
    com.patagona.pricemonitor.share.api.SqlApiPriceRecommendation:
      description: Represents a price recommendation of the pricemonitor.
      properties:
        oldPrice:
          type: number
          description: >-
            The price of the cheapest offer of the own shop(s) on the relevant
            domain
        deliveryCosts:
          type: number
          description: The delivery costs which were considered for the recommended price
        timestamp:
          type: string
          format: date-time
          description: The timestamp when the price recommendation has been calculated
        offerCreationTimeRange:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.OffsetTimeRange
          description: >-
            The time range of all valid offers that were considered for the
            calculation of the price recommendation.
        oldDeliveryCosts:
          type: number
          description: The delivery costs corresponding to `oldPrice`
        tags:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag
          description: Additional information on this product
        price:
          type: number
          description: The recommended price of the relevant domain
        oldPosition:
          type: integer
          description: The old position on the relevant domain
        gtin:
          type: number
          description: GTIN of the product
        relativePriceChangePercentage:
          type: number
          description: >-
            Absolute percentage how the recommended price changed compared to
            the `oldPrice` e.g. 200 stands for 200% which means the recommended
            price has doubled
        newPosition:
          type: integer
          description: The new position on the relevant domain
        decisiveStrategyBranchName:
          type: string
          description: >-
            The strategy branch name that calculated the price. This is only
            filled if the Strategy branch that calculated the price was given a
            name in the strategy tree. It will have the name that was active at
            the time the price was calculated (see timestamp)
        customerProductId:
          type: string
          description: The customer's id of the product
        originalMaxPriceBoundary:
          type: number
          description: Max price boundary during the time when the price was calculated
        relevantDomain:
          type: string
          description: >-
            The decisive domain of the price recommendation. It's been
            determined by the cheapest price recommendation.
        originalMinPriceBoundary:
          type: number
          description: Min price boundary during the time when the price was calculated
        currency:
          type: string
          description: The currency of the price recommendation.
        productId:
          type: string
          description: The internal product id of the pricemonitor
        originalTags:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag
          description: >-
            List of tags which were set during the time when the price has been
            calculated. ATTENTION: These are historic tags which are maybe
            outdated or incomplete.
        decisiveStrategyTreeLeafNodeId:
          type: integer
          description: >-
            The leaf node of the strategy branch that calculated the price. This
            id references the node in the strategy branch that was active at the
            time the price was calculated (see timestamp)
      additionalProperties: false
      type: object
      required:
        - tags
        - productId
        - price
        - timestamp
        - originalMinPriceBoundary
        - originalTags
        - originalMaxPriceBoundary
        - decisiveStrategyTreeLeafNodeId
        - currency
    com.patagona.pricemonitor.share.api.PriceRecommendationsApprovalQueryResponseV3:
      description: >-
        Represents the approval details for a price recommendation for a
        specific product and timestamp.
      properties:
        decisions:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.PriceApprovalDecisionV3
          description: The sequence of decisions made regarding this approval.
        updatedAt:
          type: string
          format: date-time
          description: >-
            The timestamp when the approval was last updated, in ISO 8601
            format,.
        requiredApprovals:
          type: integer
          description: >-
            The number of approvals required for a pricing decision (must be ≥
            1).
        priceRecommendation:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.SqlApiPriceRecommendation
          description: The associated price recommendation.
        status:
          type: string
          description: >-
            The current approval status. <br> Allowed values: "pending",
            "approved", "rejected", "outdated", or "overwritten".
        createdAt:
          type: string
          format: date-time
          description: The timestamp when the approval was created, in ISO 8601 format,.
        productId:
          type: string
          description: The internal unique product identifier of Omnia 2.0.
      additionalProperties: false
      type: object
      required:
        - requiredApprovals
        - status
        - priceRecommendation
        - createdAt
        - productId
        - updatedAt
        - decisions
    QueryPriceRecommendationsApprovalsV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.PriceRecommendationsApprovalQueryResponseV3
          type: array
    GetExtendedTagsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: '#/components/schemas/ExtendedTag'
          type: array
    com.patagona.pricemonitor.share.api.OmniaProductProperty:
      description: >-
        Omnia Product Properties represent additional information for a product.
        They can contain evaluated values like numbers and dates. The
        `stringValue` is used for deriving the evaluated values.
      properties:
        key:
          type: string
          description: >-
            The name of the property. It can't be empty. At maximum 100
            characters are allowed.
        stringValue:
          type: string
          description: >-
            The text value of the property. At maximum 10,000 characters are
            allowed.
        decimalValue:
          type: number
          description: The numeric value of the property.
        dateValue:
          type: string
          format: date-time
          description: The timestamp of the property.
      additionalProperties: false
      type: object
      required:
        - key
        - stringValue
    GetProductPropertiesV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.OmniaProductProperty
          type: array
    com.patagona.pricemonitor.share.api.ApiProductProperty:
      description: >-
        Product properties represent additional information for a product. The
        `stringValue` is used for deriving further evaluated values at
        server-side: - **Date Properties**: Submit dates in the `stringValue`
        field using the ISO 8601 format (e.g., `YYYY-MM-DDTHH:MM:SSZ`). This
        ensures that the server correctly interprets the date and time. -
        **Numeric Properties**: Submit numbers in the `stringValue` field by
        using dot as decimal separator.
      properties:
        key:
          type: string
          description: >-
            The name of the property. It can't be empty. At maximum 100
            characters are allowed.
        stringValue:
          type: string
          description: >-
            The text value of the property. At maximum 10,000 characters are
            allowed.
      additionalProperties: false
      type: object
      required:
        - key
        - stringValue
    com.patagona.pricemonitor.share.api.PutProductPropertiesRequestV3:
      description: >-
        Represents a PUT request for inserting, updating or deleting product
        properties. For deleting all product properties you can provide an empty
        list of product properties.
      properties:
        properties:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiProductProperty
          description: >-
            A list of product properties. Multiple properties with the same key
            are not allowed.
      additionalProperties: false
      type: object
      required:
        - properties
    com.patagona.pricemonitor.share.api.ContractType:
      type: string
      enum:
        - Pricemonitor for manufacturers
        - Pricemonitor for resellers
    com.patagona.pricemonitor.share.api.AdminContractV2:
      description: A contract used for data representation in the admin-endpoint
      properties:
        expirationDate:
          type: string
          format: date-time
          description: The date and time the contract expires
        description:
          type: string
          description: The contract's name
        id:
          type: string
          description: The string id of the contract
        creationDate:
          type: string
          format: date-time
          description: The date and time the contract was created
        numericId:
          type: number
          description: The numerical id of the contract
        type:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ContractType
        active:
          type: boolean
          description: The contract-status
      additionalProperties: false
      type: object
      required:
        - description
        - active
        - id
        - creationDate
        - type
        - numericId
    com.patagona.pricemonitor.share.api.AdminCompanyV2:
      description: >-
        A company with its contracts used for data representation in the
        admin-endpoint
      properties:
        id:
          type: number
          description: The id of the company
        name:
          type: string
          description: The company's name
        contracts:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.AdminContractV2
          description: A list of the comapny's contracts
      additionalProperties: false
      type: object
      required:
        - id
        - name
        - contracts
    com.patagona.pricemonitor.share.api.GetContractSettingsResponseV1:
      properties:
        name:
          type: string
          description: ''
        expirationDate:
          type: string
          format: date-time
          description: ''
        portals:
          type: array
          items:
            type: string
          description: ''
        includeDeliveryCosts:
          type: boolean
          description: ''
        features:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ContractFeatures
          description: ''
        imageTag:
          type: string
          description: The name of the tag that contains the product image url
        company:
          type: string
          description: ''
        id:
          type: number
          description: ''
        monitoringPriority:
          type: integer
          description: Priority of the contract in the monitoring queue
        currency:
          type: string
          description: The contract's currency as three letter code
        type:
          type: string
        sid:
          type: string
          description: ''
        msrpTag:
          type: string
          description: >-
            The name of the tag that contains the manufacturers suggested retail
            price
        mapTag:
          type: string
          description: The name of the tag that contains the minimum advertised price
        active:
          type: boolean
          description: ''
      additionalProperties: false
      type: object
      required:
        - monitoringPriority
        - active
        - sid
        - company
        - features
        - portals
        - id
        - name
        - includeDeliveryCosts
        - type
        - currency
    com.patagona.pricemonitor.share.api.PutAdminContractSettingsBody:
      properties:
        name:
          type: string
        expirationDate:
          type: string
          format: date-time
        portals:
          type: array
          items:
            type: string
        features:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ContractFeatures
        id:
          type: number
        monitoringPriority:
          type: integer
        type:
          type: string
        sid:
          type: string
        active:
          type: boolean
      additionalProperties: false
      type: object
      required:
        - active
        - sid
        - features
        - portals
        - id
        - name
        - type
    com.patagona.pricemonitor.share.api.ContractStats:
      description: Contract statistics
      properties:
        productCount:
          type: integer
          description: The count of currently monitored products
        portalCount:
          type: integer
          description: The number of actively monitored domains
        allOfferCount:
          type: number
          description: >-
            The number of offers found for the monitored products without any
            filters applied
        offerCount:
          type: number
          description: >-
            The number of offers found for the monitored products after
            filtering
        vendorCount:
          type: number
          description: The count of vendors found for the monitored products
      additionalProperties: false
      type: object
      required:
        - portalCount
        - offerCount
        - allOfferCount
        - vendorCount
        - productCount
    com.patagona.pricemonitor.share.api.OfferSelector:
      description: Whitelist entry for offers based on different attributes.
      properties:
        domain:
          type: string
          description: The domain
        vendorName:
          type: string
          description: The vendor name
        productName:
          type: string
          description: The product name
      additionalProperties: false
      type: object
      required:
        - domain
        - vendorName
        - productName
    com.patagona.pricemonitor.share.api.PricesByDayByProductIdRequestV2:
      description: >-
        A request for all known prices for a given day & product ID. Provides
        the option to filter the results using the `offerSelectors`.
      properties:
        day:
          type: string
          format: date-time
          description: The day for which to return the prices in ISO 8601
        offers:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.OfferSelector
          description: >-
            A list of `OfferSelector`s that allows filtering down the results.
            The selectors are combined using an OR operation. The list must
            contain at least one element.
      additionalProperties: false
      type: object
      required:
        - day
        - offers
    com.patagona.pricemonitor.share.api.PricesByDayByProductIdResponsePricePointV2:
      description: A single price point of a product
      properties:
        price:
          type: number
          description: The price
        deliveryCosts:
          type: number
          description: The delivery costs
        timestamp:
          type: string
          format: date-time
          description: The timestamp of when the price was found
      additionalProperties: false
      type: object
      required:
        - price
        - deliveryCosts
        - timestamp
    com.patagona.pricemonitor.share.api.PricesByDayByProductIdResponseV2:
      description: >-
        Contains all known prices for a given day & product ID for one domain &
        vendor combination.
      properties:
        domain:
          type: string
          description: The domain these prices were found on
        vendorName:
          type: string
          description: The name of the vendor these prices were found for
        productName:
          type: string
          description: The name of the product the vendor is using
        prices:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.PricesByDayByProductIdResponsePricePointV2
          description: >-
            A list of `PricesByDayByProductIdResponsePricePointV2` elements
            containing the prices
      additionalProperties: false
      type: object
      required:
        - domain
        - vendorName
        - productName
        - prices
    com.patagona.pricemonitor.share.api.TagFilteredVendorsRequest:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: A list of key value pairs of product tags
      additionalProperties: false
      type: object
      required: []
    com.patagona.pricemonitor.share.api.ResellerSummaryByDomain:
      properties:
        averageDiscount:
          type: number
        averagePosition:
          type: number
        productsUnderReferencePrice:
          type: number
        portalName:
          type: string
        productsCount:
          type: number
        resellerName:
          type: string
        minPriceCount:
          type: number
      additionalProperties: false
      type: object
      required:
        - portalName
        - averageDiscount
        - productsCount
        - minPriceCount
        - resellerName
        - productsUnderReferencePrice
        - averagePosition
    com.patagona.pricemonitor.share.api.PostVendorsByDomainResponse:
      properties:
        data:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ResellerSummaryByDomain
        totalCount:
          type: integer
      additionalProperties: false
      type: object
      required:
        - data
        - totalCount
    com.patagona.pricemonitor.share.api.ApiOfferAttributeV2:
      description: >-
        Represents an additional attribute for an offer which is not in the
        predefined fields.
      properties:
        key:
          type: string
          description: The attribute name. It's not allowed to be empty.
        value:
          type: string
          description: The corresponding attribute value.
      additionalProperties: false
      type: object
      required:
        - key
        - value
    com.patagona.pricemonitor.share.api.ApiOfferV2:
      description: Represents an offer for a product on a certain domain.
      properties:
        deliveryCosts:
          type: number
          description: >-
            The additional charges for delivering the product to the customer's
            location.
        url:
          type: string
          description: >-
            The direct link to the product page on the domain where this offer
            can be found.
        vendorDomainId:
          type: string
          description: Optional identifier representing the vendor on a certain domain.
        price:
          type: number
          description: The current listed unit price of the product.
        availability:
          type: boolean
          description: >-
            An optional flag indicating whether the product is currently in
            stock and available for purchase.
        attributes:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiOfferAttributeV2
          description: A list of additional offer details.
        vendorName:
          type: string
          description: The display name of the shop which sells the product.
        retrievalDate:
          type: string
          format: date-time
          description: >-
            Optional timestamp based on ISO 8601 when this offer information was
            last fetched from the domain.
        id:
          type: string
          description: >-
            A unique identifier for the offer. It's crucial that it's unique
            across all offers independent of the timestamp. If you don't have a
            unique identifier then please use a UUID.
        productName:
          type: string
          description: The name of the product as listed on the domain.
        currency:
          type: string
          description: >-
            The currency in which the price and delivery costs are expressed.
            Allowed values are ISO 4217 currency codes like "EUR".
        minDeliveryHours:
          type: integer
          description: >-
            Optional minimum time, in hours, it takes for the product to be
            delivered to the customer.
        maxDeliveryHours:
          type: integer
          description: >-
            Optional maximum time, in hours, it takes for the product to be
            delivered to the customer.
      additionalProperties: false
      type: object
      required:
        - productName
        - url
        - attributes
        - id
        - vendorName
        - price
        - deliveryCosts
        - currency
    com.patagona.pricemonitor.share.api.PostProductOfferRequest:
      description: >-
        Represents a single request to post offers for a snapshot. A snapshot is
        a unique combination of productId, creationDate, and domain. It must
        contain the complete set of offers for that product and domain at the
        given time.
      properties:
        productId:
          type: string
          description: Omnia's internal product id.
        creationDate:
          type: string
          format: date-time
          description: >-
            ISO 8601 timestamp when the offers have been gathered. Must be more
            recent than existing snapshots for the same product and domain,
            otherwise the request will be rejected.
        domain:
          type: string
          description: Domain from which the offers originate (e.g., "example.com").
        offers:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiOfferV2
          description: Non-empty list of offers.
      additionalProperties: false
      type: object
      required:
        - productId
        - creationDate
        - domain
        - offers
    QueryPriceRecommendationsV2ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiPriceRecommendation
          type: array
        meta:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PaginationResponse
    com.patagona.pricemonitor.share.api.PutResetPasswordRequest:
      description: Request body for resetting the password
      properties:
        token:
          type: string
          description: Received via email after requesting a new password.
        password:
          type: string
          description: Password entered by the user.
      additionalProperties: false
      type: object
      required:
        - token
        - password
    com.patagona.pricemonitor.share.api.PostNewPasswordRequest:
      description: Request body for requesting a new password
      properties:
        email:
          type: string
          description: Valid email address of an existing pricemonitor account.
      additionalProperties: false
      type: object
      required:
        - email
    com.patagona.pricemonitor.share.api.GetContractResponseV3:
      description: Contract information
      properties:
        expirationDate:
          type: string
          format: date-time
          description: The date when contract will expire.
        description:
          type: string
          description: The description for the given contract provided by the end-user.
        contractType:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ContractType
          description: Type of the contract.
        creationDate:
          type: string
          format: date-time
          description: The creation date of the contract.
        sid:
          type: string
          description: Unique string id of the contract in pricemonitor.
        companyId:
          type: number
          description: >-
            The id of the company, in pricemonitor, to which contract belongs
            to.
        active:
          type: boolean
          description: Indicates if the contract is active or disabled.
      additionalProperties: false
      type: object
      required:
        - description
        - active
        - sid
        - contractType
        - creationDate
        - companyId
    GetManufacturerV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GetContractResponseV3
    QueryProductsByFilterManufacturerV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiProduct
          type: array
    com.patagona.pricemonitor.share.api.Query:
      description: >-
        This class specifies a general query language, even though all fields
        are marked as optional, exactly one has

        to be specified.

        Please note that depending on the endpoint only a subset of the query
        language might be supported.

        Refer to the endpoint specific documentation to view the restrictions.
      properties:
        regex:
          type: object
          additionalProperties: false
          properties:
            field:
              type: string
            pattern:
              type: string
          required:
            - field
            - pattern
        in:
          type: object
          additionalProperties: false
          properties:
            field:
              type: string
            query:
              $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
          required:
            - field
            - query
        or:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
        const:
          type: boolean
        not:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
        oneOf:
          type: object
          additionalProperties: false
          properties:
            field:
              type: string
              description: ''
            values:
              type: array
              items:
                type: string
              description: ''
          required:
            - field
            - values
        lt:
          type: object
          additionalProperties: false
          properties:
            field:
              type: string
            value:
              type: string
          required:
            - field
            - value
        gt:
          type: object
          additionalProperties: false
          properties:
            field:
              type: string
            value:
              type: string
          required:
            - field
            - value
        eq:
          type: object
          additionalProperties: false
          properties:
            field:
              type: string
            value:
              type: string
          required:
            - field
            - value
        and:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
      additionalProperties: false
      type: object
      required: []
    com.patagona.pricemonitor.share.api.ApiQuery:
      description: >-
        This model represents a paginated query. The filter parameter is
        optional, if it is not set, all values will be returned, paginated by
        the pagination parameter.
      properties:
        pagination:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Pagination'
          description: ''
        filter:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
          description: ''
        includeTags:
          type: boolean
          description: Whether to include tags in the response or not
      additionalProperties: false
      type: object
      required:
        - pagination
    com.patagona.pricemonitor.share.api.ApiProductV3:
      description: A product in the pricemonitor.
      properties:
        name:
          type: string
          description: Name of the product.
        tags:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ExtendedTag
          description: Additional information on this product.
        minPriceBoundary:
          type: number
          description: >-
            Maximum price which pricemonitor can recommend for the product. It
            won't recommend any price above this boundary.
        gtin:
          type: number
          description: GTIN of the product. Can be optionally.
        customerProductId:
          type: string
          description: >-
            The customer's id of the product. This field allows to link products
            in pricemonitor to products in the customer's system.
        id:
          type: string
          description: Id of the product in the pricemonitor.
        maxPriceBoundary:
          type: number
          description: >-
            Minimum price which pricemonitor can recommend for the product. It
            won't recommend any price below this boundary.
        referencePrice:
          type: number
          description: >-
            Some price that will be used as benchmark for certain components in
            pricemonitor.
      additionalProperties: false
      type: object
      required:
        - tags
        - id
        - name
        - referencePrice
    QueryProductsManufacturerV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiProductV3
          type: array
    com.patagona.pricemonitor.share.api.DynamicMonitoringSettings:
      properties:
        analysisRange:
          type: integer
        threshold:
          type: number
        adjustedInterval:
          type: integer
      additionalProperties: false
      type: object
      required:
        - analysisRange
        - threshold
        - adjustedInterval
    com.patagona.pricemonitor.share.api.CustomerContractSettings:
      description: >-
        CustomerContractSettings contains all settings adjustable by the
        pricemonitor customers.
      properties:
        includeDeliveryCosts:
          type: boolean
          description: ''
        domains:
          type: array
          items:
            type: string
          description: ''
        dynamicMonitoring:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.DynamicMonitoringSettings
          description: ''
        currency:
          default: EUR
          type: string
          description: The contract's currency as three letter code
        imageUrlTag:
          type: string
          description: The name of the tag that contains the product image url
        callbacks:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Callbacks'
          description: ''
        msrpTag:
          type: string
          description: >-
            The name of the tag that contains the manufacturers suggested retail
            price
        mapTag:
          type: string
          description: The name of the tag that contains the minimum advertised price
      additionalProperties: false
      type: object
      required:
        - domains
        - includeDeliveryCosts
    GetCustomerContractSettingsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.CustomerContractSettings
    PutCustomerContractSettingsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.CustomerContractSettings
    com.patagona.pricemonitor.share.api.ProductMonitoringStatusOnDomainOutcome:
      description: Describes the result of a monitoring attempt.
      properties:
        successful:
          type: boolean
          description: >-
            Defines if everything worked as expected. This is the case if: -
            Offers have been found for the product - The product exists on the
            domain but is currently not available - The product doesn't exist on
            the domain
        outcome:
          type: string
          description: >-
            Describes the outcome of the monitoring attempt. Can be one of:
            ProductNotFound, ProductNotAvailable, ProductFound, CaptchaFailure,
            LayoutFailure, RequestFailure, UnknownFailure, ProductSearchFailure,
            MissingTaskData, AlreadyCompletedTask, InvalidTaskSession,
            MissingContractId, UnsupportedDomainFailure
      additionalProperties: false
      type: object
      required:
        - successful
        - outcome
    com.patagona.pricemonitor.share.api.ProductMonitoringStatusOnDomain:
      description: Describes the monitoring status of a product on a certain domain.
      properties:
        domain:
          type: string
          description: The domain which gets monitored.
        startedAt:
          type: string
          format: date-time
          description: >-
            The last time pricemonitor tried to monitor the product on the given
            domain. If this doesn't exist it mean's that pricemonitor haven't
            tried to monitor this product on the domain yet. One reason could be
            that the product is very new or the domain has just recently been
            added to the contract.
        completedAt:
          type: string
          format: date-time
          description: >-
            The last time pricemonitor completed monitoring the product on the
            given domain.
        outcome:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatusOnDomainOutcome
          description: Describes the result of a monitoring attempt.
      additionalProperties: false
      type: object
      required:
        - domain
    com.patagona.pricemonitor.share.api.ProductMonitoringStatus:
      description: >-
        Describes the monitoring status of a product for all domains of the
        contract.
      properties:
        productId:
          type: number
          description: The product that gets monitored
        statusOnDomain:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatusOnDomain
          description: >-
            The monitoring status on each domain. It will contain an entry for
            each domain which is active for that contract.
      additionalProperties: false
      type: object
      required:
        - productId
        - statusOnDomain
    GetProductMonitoringStatusVendorV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatus
          type: array
    com.patagona.pricemonitor.share.api.ProductMonitoringStatusOutcomeStats:
      properties:
        outcome:
          type: string
        count:
          type: integer
      additionalProperties: false
      type: object
      required:
        - outcome
        - count
    com.patagona.pricemonitor.share.api.ProductMonitoringStatusStats:
      properties:
        domain:
          type: string
        started:
          type: integer
        completed:
          type: integer
        outcomes:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatusOutcomeStats
          uniqueItems: true
      additionalProperties: false
      type: object
      required:
        - domain
        - started
        - completed
        - outcomes
    GetProductMonitoringStatusStatsVendorV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ProductMonitoringStatusStats
          type: array
    QueryProductsByFilterVendorV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiProduct
          type: array
    GetPriceRecommendationHistoryApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiPriceRecommendation
          type: array
    QueryProductsVendorV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.ApiProductV3
          type: array
    com.patagona.pricemonitor.share.api.GetCompanyUsersUser:
      description: User Information of company users.
      properties:
        name:
          type: string
          description: The name of the user.
        lastActiveDate:
          type: string
          format: date-time
          description: >-
            The last active datetime of the user. In case the user has no
            activity yet, the last active datetime will be returned as
            '1970-01-01T00:00:01.000Z'.
        email:
          type: string
          description: The email of the user.
        id:
          type: number
          description: The id of the user.
        creationDate:
          type: string
          format: date-time
          description: The time when user is assigned to a company.
      additionalProperties: false
      type: object
      required:
        - email
        - id
        - lastActiveDate
        - name
        - creationDate
    com.patagona.pricemonitor.share.api.LookerUserAttributesV3:
      description: >-
        Response body containing looker user attributes First introduced to
        track the internal state of looker to avoid mismatches in the ui state
        and the looker state.
      properties:
        contractSid:
          type: string
          description: >-
            The contract sid of the user according to looker. References the
            attribute {{contract_sid}} in looker.
        contractId:
          type: number
          description: >-
            The contract id of the user according to looker. References the
            attribute {{contract_id}} in looker.
      additionalProperties: false
      type: object
      required: []
    LookerUserAttributesV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.LookerUserAttributesV3
    com.patagona.pricemonitor.share.api.PostEmbedSSOUrlRequestV3:
      description: Request body for retrieving a signed Looker SSO embed URL.
      properties:
        url:
          type: string
          description: >-
            The full URL of the Looker dashboard to embed. Must start with
            https://looker.omniaretail.com/dashboards/ or with
            https://looker.patagona.de/dashboards/ Only registered Omnia 2.0
            dashboard IDs are allowed.
      additionalProperties: false
      type: object
      required:
        - url
    com.patagona.pricemonitor.share.api.EmbedSSOUrlResponseV3:
      description: Response body containing signed embed sso url from looker.
      properties:
        url:
          type: string
          description: The embed sso url.
      additionalProperties: false
      type: object
      required:
        - url
    EmbedSSOUrlResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.EmbedSSOUrlResponseV3
    com.patagona.pricemonitor.share.api.InviteUserToCompanyRequestV3:
      description: User invitation to a company.
      properties:
        email:
          type: string
          description: Email address of a user.
        name:
          type: string
          description: Display name of a user.
      additionalProperties: false
      type: object
      required:
        - email
        - name
    com.patagona.pricemonitor.share.api.InviteUserToCompanyResponseV3:
      description: Successfully invited user.
      properties:
        email:
          type: string
          description: Email address of a user.
        name:
          type: string
          description: Display name of a user.
        roles:
          type: array
          items:
            type: string
          description: Roles associated with a user.
      additionalProperties: false
      type: object
      required:
        - email
        - name
        - roles
    InviteUserToCompanyResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.InviteUserToCompanyResponseV3
    com.patagona.pricemonitor.share.api.UserContractAccess:
      properties:
        email:
          type: string
        contractIds:
          type: array
          items:
            type: string
        hasUnrestrictedAccess:
          type: boolean
      additionalProperties: false
      type: object
      required:
        - email
        - contractIds
        - hasUnrestrictedAccess
    com.patagona.pricemonitor.share.api.UserAccessToContractsOfCompany:
      properties:
        users:
          type: array
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.UserContractAccess
      additionalProperties: false
      type: object
      required:
        - users
    GetUserAccessToContractsOfCompanyV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.UserAccessToContractsOfCompany
    com.patagona.pricemonitor.share.api.PostActivateMarketplaceRequestV3:
      description: Payload for activating marketplace of a seller in our system.
      properties:
        marketplaceCountryCode:
          type: string
          description: >-
            Marketplace country code. You can view complete list here.
            https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
            Currently, only Europe as a region is supported.
        contractId:
          type: string
          description: Pricemonitor contract id
      additionalProperties: false
      type: object
      required:
        - marketplaceCountryCode
        - contractId
    com.patagona.pricemonitor.share.api.ActivateMarketplaceResponseV3:
      description: Activation status of a marketplace of a seller in our system.
      properties:
        activated:
          type: boolean
          description: Whether marketplace is activated or not.
      additionalProperties: false
      type: object
      required:
        - activated
    ActivateMarketplaceResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.ActivateMarketplaceResponseV3
    com.patagona.pricemonitor.share.api.GetAuthorizationStatusResponseV3:
      description: Authorization status of a seller on Amazon.
      properties:
        authorized:
          type: boolean
          description: Whether a seller is authorized or not.
      additionalProperties: false
      type: object
      required:
        - authorized
    GetAuthorizationStatusResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GetAuthorizationStatusResponseV3
    com.patagona.pricemonitor.share.api.PostAuthorizeSellerRequestV3:
      description: Seller to be authorized.
      properties:
        sellingPartnerId:
          type: string
          description: The identifier for the selling partner seller on Amazon.
        spapiOauthCode:
          type: string
          description: >-
            The Login with Amazon (LWA) authorization code that you exchange for
            an LWA refresh token.
      additionalProperties: false
      type: object
      required:
        - sellingPartnerId
        - spapiOauthCode
    com.patagona.pricemonitor.share.api.PostAuthorizeSellerResponseV3:
      description: Successfully authorized seller
      properties:
        sellerId:
          type: integer
          description: The identifier for the authorized seller.
      additionalProperties: false
      type: object
      required:
        - sellerId
    PostAuthorizeSellerResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PostAuthorizeSellerResponseV3
    com.patagona.pricemonitor.share.api.MonitoringScheduleV3:
      description: >-
        MonitoringScheduleV3 represents monitoring schedule that can be
        adjustable by the price-monitor customers.
      properties:
        productQuery:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
          description: Allows restrict monitoring to certain products.
        quota:
          type: number
          description: >-
            Defines how many products should get monitored. Default to 1.0 which
            means that all products are monitored. Allowed values: 0.0 < quota
            <= 1.0
        domainQuery:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
          description: Allows restrict monitoring to certain domains.
        unfulfilledOnly:
          type: boolean
          description: >-
            When it's set to true, then the monitoring considers only products
            on domains where no offers are found within 24h. Default false.
        id:
          type: number
          description: Id that uniquely identifies a monitoring schedule.
        schedule:
          type: string
          description: >-
            Only valid CRON expressions are allowed. Expressions such as "@every
            5s" are not allowed. Cron expressions that go from seconds to day of
            week in the following order:<br/> <ul> <li>Seconds (Allowed value:
            0-59 and Allowed Special Characters: * , - /).</li> <li>Minutes
            (Allowed value: 0-59 and Allowed Special Characters: * , - /).</li>
            <li>Hour Of Day (Allowed value: 0-23 and Allowed Special Characters:
            * , - /).</li> <li>Day Of Month (Allowed value: 1-31 and Allowed
            Special Characters: * ? , - /).</li> <li>Month (Allowed value: 1-12
            and Allowed Special Characters: * , -).</li> <li>Day Of Week
            (Allowed value: 0-7 and Allowed Special Characters: * ? , - /
            ).</li> </ul> Please note that 0 and 7 represent Sunday and 6
            represents Saturday.
        schedulerJobId:
          type: string
          description: Internal job id used by the scheduler.
      additionalProperties: false
      type: object
      required:
        - schedule
        - quota
        - schedulerJobId
        - id
        - unfulfilledOnly
    GetMonitoringSchedulesApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.MonitoringScheduleV3
          type: array
    com.patagona.pricemonitor.share.api.PostMonitoringScheduleRequestV3:
      description: A request body containing monitoring schedule.
      properties:
        productQuery:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
          description: Allows restrict monitoring to certain products.
        quota:
          type: number
          description: >-
            Defines how many products should get monitored. Default to 1.0 which
            means that all products are monitored. Allowed values: 0.0 < quota
            <= 1.0
        domainQuery:
          $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.Query'
          description: Allows restrict monitoring to certain domains.
        unfulfilledOnly:
          type: boolean
          description: >-
            When it's set to true, then the monitoring considers only products
            on domains where no offers are found within 24h. Default false.
        schedule:
          type: string
          description: >-
            Only valid CRON expressions are allowed. Expressions such as "@every
            5s" are not allowed. Cron expressions that go from seconds to day of
            week in the following order:<br/> <ul> <li>Seconds (Allowed value:
            0-59 and Allowed Special Characters: * , - /).</li> <li>Minutes
            (Allowed value: 0-59 and Allowed Special Characters: * , - /).</li>
            <li>Hour Of Day (Allowed value: 0-23 and Allowed Special Characters:
            * , - /).</li> <li>Day Of Month (Allowed value: 1-31 and Allowed
            Special Characters: * ? , - /).</li> <li>Month (Allowed value: 1-12
            and Allowed Special Characters: * , -).</li> <li>Day Of Week
            (Allowed value: 0-7 and Allowed Special Characters: * ? , - /
            ).</li> </ul> Please note that 0 and 7 represent Sunday and 6
            represents Saturday.
      additionalProperties: false
      type: object
      required:
        - schedule
        - quota
        - unfulfilledOnly
    PutMonitoringSchedulesApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.MonitoringScheduleV3
    com.patagona.pricemonitor.share.api.DeleteByNumericIdApiResponse:
      description: Successful delete response.
      properties:
        data:
          type: number
          description: numeric id that has been deleted
      additionalProperties: false
      type: object
      required:
        - data
    com.patagona.pricemonitor.share.api.VendorShopMappingV3:
      description: >-
        Online shops can have different names per domain despite they belong to
        the same entity. This entity is further called "vendor". A vendor shop
        mapping represents shops which are associated to a vendor.
      properties:
        id:
          type: number
          description: Unique identifier of a vendor
        vendorName:
          type: string
          description: Vendor name
        shops:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ShopV3'
          uniqueItems: true
          description: List of shops associated with the specified vendor
      additionalProperties: false
      type: object
      required:
        - id
        - vendorName
        - shops
    GetVendorShopMappingsApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.VendorShopMappingV3
          type: array
    com.patagona.pricemonitor.share.api.PostVendorShopMappingRequestV3:
      description: Request body for creating a vendor and their associated shops.
      properties:
        vendorName:
          type: string
          description: Vendor name
        shops:
          type: array
          items:
            $ref: '#/components/schemas/com.patagona.pricemonitor.share.api.ShopV3'
          uniqueItems: true
          description: List of associated shops
      additionalProperties: false
      type: object
      required:
        - vendorName
        - shops
    VendorShopMappingV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.VendorShopMappingV3
    com.patagona.pricemonitor.share.api.PostAccountRequestV3:
      description: A request body that contains information for creation of a new account.
      properties:
        name:
          type: string
          description: Defines the name of the new user account.
        email:
          type: string
          description: Defines the email of the new user account.
        password:
          type: string
          description: Defines the password for the new user account.
      additionalProperties: false
      type: object
      required:
        - name
        - email
        - password
    com.patagona.pricemonitor.share.api.PostAccountResponseV3:
      description: A response body that contains information for a newly created account.
      properties:
        id:
          type: number
          description: Defines the Pricemonitor user id of newly create user account.
        name:
          type: string
          description: Defines name of newly create user account.
        email:
          type: string
          description: Defines the email of newly created user account.
      additionalProperties: false
      type: object
      required:
        - id
        - name
        - email
    PostAccountResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.PostAccountResponseV3
    com.patagona.pricemonitor.share.api.GeneratePasswordResponseV3:
      description: A response body that contains the newly generated password.
      properties:
        password:
          type: string
          description: The newly generated password.
      additionalProperties: false
      type: object
      required:
        - password
    GeneratePasswordResponseV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          $ref: >-
            #/components/schemas/com.patagona.pricemonitor.share.api.GeneratePasswordResponseV3
    com.patagona.pricemonitor.share.api.AmazonBuyboxProductStatsV3:
      description: Shows if product belongs to Amazon Buybox
      properties:
        productId:
          type: number
          description: Internal product identifier
        isInPrimeBuybox:
          type: boolean
          description: Indicates if product is Amazon Prime product and is in Amazon Buybox
        isInNonPrimeBuybox:
          type: boolean
          description: Indicates if product is in Amazon Buybox
      additionalProperties: false
      type: object
      required:
        - productId
        - isInPrimeBuybox
        - isInNonPrimeBuybox
    AmazonBuyboxProductStatsV3ApiResponse:
      required:
        - data
      type: object
      additionalProperties: false
      description: ''
      properties:
        data:
          items:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.AmazonBuyboxProductStatsV3
          type: array
    SchedulerApiError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
    SchedulerSchedulerApiErrorResponse:
      type: object
      required:
        - data
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SchedulerApiError'
    JobType:
      type: string
      description: |
        The job types are fixed and defined in the scheduler code.
      enum:
        - ShopIntegrationUpdateProductsJob
        - ShopIntegrationStartShopSyncJob
        - MonitoringJob
        - PreprocessingJob
        - ReportJob
        - ProductImportJob
        - PricewatchJob
    JobsApiResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Job'
    JobApiResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/Job'
    DkronJobApiResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/DkronJob'
    DkronExecutionsApiResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Execution'
    Job:
      type: object
      discriminator:
        propertyName: type
        mapping:
          ShopIntegrationStartShopSyncJob: '#/components/schemas/ShopIntegrationStartShopSyncJob'
          ShopIntegrationUpdateProductsJob: '#/components/schemas/ShopIntegrationUpdateProductsJob'
          MonitoringJob: '#/components/schemas/MonitoringJob'
          PreprocessingJob: '#/components/schemas/PreprocessingJob'
      required:
        - schedule
        - type
        - timezone
      properties:
        type:
          $ref: '#/components/schemas/JobType'
        _id:
          type: string
          description: |
            The internal job id. **Not** needed when creating a job.
          example: 507f1f77bcf86cd799439011
        timezone:
          type: string
          description: >
            See [tz database time
            zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
          example: Europe/Berlin
        contractId:
          type: string
          description: |
            Each job **must** be attached to a specific contract SID.
          example: contractId
        schedule:
          type: string
          minLength: 1
          description: >
            Only valid CRON expressions are allowed. Extra expressions from
            Dkron, e.g. "@every 5s", are not allowed.

            Cron expressions that go from seconds to day of week in the
            following order:

            - Seconds (Allowed value: 0-59)

            - Minutes (Allowed value: 0-59)

            - Hour Of Day (Allowed value: 0-23)

            - Day Of Month (Allowed value: 1-31)

            - Month (Allowed value: 1-12)

            - Day Of Week (Allowed value: 0-7). Please note that 0 and 7
            represent Sunday and 6 represents Saturday. 
          example: '* * * * 10 ?'
    ShopIntegrationStartShopSyncJob:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
    ShopIntegrationUpdateProductsJob:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
    MonitoringJob:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
          required:
            - monitoringScheduleId
          properties:
            monitoringScheduleId:
              type: integer
              format: int64
              description: >
                Monitoring schedule entry used by the pricemonitor to specify
                different run monitoring configuration for a

                given contract.
    PreprocessingJob:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
          required:
            - retrospectiveInMin
          properties:
            retrospectiveInMin:
              type: integer
              format: int32
              description: >
                The timespan, in minutes, used by pricemonitor for considering
                offers in preprocessing.
    ReportJob:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
          required:
            - reportId
          properties:
            reportId:
              type: string
              description: |
                The id of the report to be scheduled.
    ProductImportJob:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
    PricewatchJob:
      allOf:
        - $ref: '#/components/schemas/Job'
        - type: object
    DkronExecutorConfig:
      type: object
      description: 'Dkron: Executor plugin parameters'
      properties:
        method:
          type: string
          description: Request method in uppercase
        url:
          type: string
          description: Request url
        headers:
          type: string
          description: 'Json string, such as "["Content-Type: application/json"]"'
        body:
          type: string
          description: POST body
        timeout:
          type: string
          description: Request timeout, unit seconds
        expectCode:
          type: string
          description: Expect response code, such as 200,206
        expectBody:
          type: string
          description: Expect response body, support regexp, such as /success/
        debug:
          type: string
          description: Debug option, will log everything when this option is not empty
    DkronJob:
      type: object
      description: 'Dkron: A Job represents a scheduled task to execute.'
      required:
        - name
        - schedule
      properties:
        name:
          type: string
          description: Name for the job.
          readOnly: false
          example: job1
        schedule:
          type: string
          description: Cron expression for the job.
          readOnly: false
          example: '* * * * * ?'
        timezone:
          type: string
          description: >-
            Timezone where the job will be executed. By default and when field
            is set to empty string, the job will run in local time.
          readOnly: false
          example: Europe/Berlin
        owner:
          type: string
          description: Owner of the job
          readOnly: false
          example: Platform Team
        owner_email:
          type: string
          description: Email of the owner
          readOnly: false
          example: platform@example.com
        success_count:
          type: integer
          description: Number of successful executions
          readOnly: true
        error_count:
          type: integer
          description: Number of failed executions
          readOnly: true
        last_success:
          type: string
          format: date-time
          description: Last time this job executed successfully
          readOnly: true
        last_error:
          type: string
          format: date-time
          description: Last time this job failed
          readOnly: true
        disabled:
          type: boolean
          description: Disabled state of the job
          readOnly: false
        tags:
          type: object
          description: Target nodes tags of this job
          additionalProperties:
            type: string
          readOnly: false
          example:
            dkron_server: 'true'
        retries:
          type: integer
          description: Number of times to retry a failed job execution
          example: 2
          readOnly: false
        parent_job:
          type: string
          description: The name/id of the job that will trigger the execution of this job
          example: parent_job
          readOnly: false
        dependent_jobs:
          type: array
          items:
            type: string
          description: Array containing the jobs that depends on this one
          example:
            - dependent_job
          readOnly: true
        processors:
          type: object
        concurrency:
          type: string
          description: Concurrency policy for the job allow/forbid
          example: allow
          readOnly: false
        executor:
          type: string
          description: Executor plugin used to run the job
          readOnly: false
          example: shell
        executor_config:
          $ref: '#/components/schemas/DkronExecutorConfig'
        status:
          type: string
          readOnly: true
          description: Status of the job
          example: success
    Execution:
      title: Execution
      properties:
        job_name:
          type: string
          description: job name
          example: job_1
        started_at:
          type: string
          format: date-time
          description: start time of the execution
        finished_at:
          type: string
          format: date-time
          description: when the execution finished running
        success:
          type: boolean
          description: the execution run successfuly
        output:
          type: string
          description: partial output of the command execution
          example: Hello from Dkron
        node_name:
          type: string
          description: name of the node that executed the command
          example: dkron1
      required:
        - job_name
        - started_at
        - finished_at
        - output
        - node_name
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: >
        HTTP Basic Authentication using username and password.


        **Usage:** Include the `Authorization` header with value `Basic
        <base64(username:password)>`


        **Example:** `Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=`
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >
        JWT Bearer Token Authentication for session-based access.


        **Usage:** Include the `Authorization` header with value `Bearer
        <jwt-token>`


        **Example:** `Authorization: Bearer
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...`


        **Note:** JWT tokens are typically obtained through the authentication
        endpoints.
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
  requestBodies:
    PostOfferStatisticsRequestV31Enriched:
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/com.patagona.pricemonitor.share.api.PostOfferStatisticsRequestV31
          example:
            pagination:
              start: 0
              limit: 10
            range:
              start: '2023-10-17T08:00:00Z'
              end: '2023-10-19T08:00:00Z'
            filter:
              oneOf:
                field: customerProductId
                values:
                  - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                  - '6'
                  - '7'
                  - '8'
                  - '9'
                  - '10'
      description: >-
        The request body may include an optional products query. If omitted, all
        products are queried. Currently, product queries can be performed on two
        attributes:
          - "customerProductId"
          - "productId" (Patagona's internal product id; must be a numerical integer)

        Pagination is supported with a maximum limit of 10,000. For optimized
        performance:
          - Use a limit of 10,000 products per page when querying all products of a contract.
          - Prefer using "productId" for queries when a product query is utilized.

        Pagination operates based on the provided products query. This is
        particularly useful when querying a set of customerProductId's. For
        chunked requests over a set of ids, it's straightforward to specify up
        to 10,000 customerProductId's in the query with pagination set at start:
        0, limit: 10,000.

        The allowed query pattern is structured as follows:

        ``` json {
          "pagination": {
            "start": ${start},
            "limit": ${limit}
          },
          "range": {
            "start": ${start},
            "end": ${end}
          },
          "filter": {
            "oneOf": {
              "field": "customerProductId",
              "values": [${customerProductIds as a list of strings}]
            }
          }
        } ```
x-tagGroups:
  - name: Omnia 2.0 API
    tags:
      - overview
      - products
      - pricerecommendations
      - offers
      - feeds
      - account
      - logs
      - companies
      - orders
      - settings
      - tasks
      - strategy
      - scenariostrategy
      - domains
      - controlpanel
      - feature-flags
      - pluginregistration
      - looker
      - amazon-integration
      - monitoring-schedules
      - preprocessing
      - vendor-shop-mapping
      - deprecated
      - internal
      - undocumented
  - name: Scheduler API
    tags:
      - SchedulerOverview
      - Jobs
