name: scala-sttp-build

on:
  release:
    types: [created]

defaults:
  run:
    working-directory: clients/pricemonitor-internal-scala-sttp/

# The job or workflow run requires a permissions setting with id-token: write.
# You won't be able to request the OIDC JWT ID token if the permissions setting for id-token is set to read or none.
# The aws-actions/configure-aws-credentials action receives a JWT from the GitHub OIDC provider,
# and then requests an access token from AWS
permissions:
  id-token: write
  contents: read # This is required for actions/checkout@v3

jobs:
  build-and-publish:
    # Self-hosted runners are not used here since it's a public repository.
    # See security topic here [1] for more details on this topic.
    # [1] https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/about-self-hosted-runners#self-hosted-runner-security
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: eu-west-1
    steps:
    # https://www.automat-it.com/post/using-github-actions-with-aws-iam-roles
    # https://github.com/aws-actions/configure-aws-credentials/blob/master/action.yml
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1.6.1
      with:
        # Role used here: pat-pricemonitorclients-p-iam-githubactions-1a3v
        role-to-assume: ${{secrets.AWS_ROLE_TO_ASSUME}}
        role-session-name: pricemonitor-client-github-action
        role-duration-seconds: 900 # the ttl of the session, in seconds.
        aws-region: ${{env.AWS_DEFAULT_REGION}}
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Scala
      uses: olafurpg/setup-scala@v11
      with:
        java-version: "adopt@1.8"
    - name: Coursier cache
      uses: coursier/cache-action@v6
    - name: Build
      run: |
        # This step requires AWS credentials for publishing build artifacts.
        # Calling AWS cli automatically attach AWS credentials in this step.
        aws s3 ls s3://patagona.repository/build_artifacts/master
        
        sbt -v -Dfile.encoding=UTF-8 +publish
        rm -rf "$HOME/.ivy2/local" || true
        find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
        find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
        find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
        find $HOME/.sbt                              -name "*.lock"               -delete || true